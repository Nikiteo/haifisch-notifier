openapi: "3.0.1"
info:
  title: "T-API"
  license:
    name: "Apache 2.0"
  version: "1.0"
  x-logo:
    url: "https://business.t-static.ru/static/projects/openapi/logo.svg"
    backgroundColor: "#616871"
externalDocs:
  description: "T-API"
  url: "https://developer.tbank.ru/docs/api"
paths:
  /api/v1/account-operations:
    get:
      tags:
      - "Счета и выписки"
      summary: "Получить выписку с авторизациями за определенный период"
      description: "Необходимо согласие пользователя на доступ к информации об операциях компании. Чтобы использовать метод, нужен доступ — <code>opensme/inn/[{inn}]/kpp/[{kpp}]/account-operations/get</code> — <code>Информация о транзакциях и авторизациях по счетам компании с инн {inn} и кпп {kpp}</code>.Запросы с количеством операций более 10 000 будут возвращать ошибку TOO_MANY_OPERATIONS. Ограничение на использование метода — 3 запроса в секунду."
      operationId: "getApiV1Account-operations"
      parameters:
      - name: "accountNumber"
        in: "query"
        description: "Расчетный счет организации."
        required: true
        style: "form"
        explode: true
        schema:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета. ВАЖНО: Для бюджетных платежей с 01.01.2021 в данном поле нужно указывать новые номера казначейских счетов."
        example: 40702810110011000000
      - name: "ucid"
        in: "query"
        description: "UCID карты. Если не указан, вернутся все операции по счету."
        required: false
        style: "form"
        explode: true
        schema:
          type: "integer"
          format: "int64"
        example: 1234567890
      - name: "operationStatus"
        in: "query"
        description: "Статус операции. Если не указан, вернутся как транзакции, так и авторизации."
        required: false
        style: "form"
        explode: true
        schema:
          $ref: "#/components/schemas/AccountOperationStatus"
        example: "transaction"
      - name: "from"
        in: "query"
        description: "Дата начала периода, включительно."
        required: true
        style: "form"
        explode: true
        schema:
          type: "string"
          format: "date-time"
        example: "2021-11-03T11:00:00+03:00"
      - name: "till"
        in: "query"
        description: "Дата конца периода, исключительно."
        required: true
        style: "form"
        explode: true
        schema:
          type: "string"
          format: "date-time"
        example: "2021-11-03T11:00:00+03:00"
      responses:
        "200":
          description: ""
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/AccountOperation"
              example:
              - accountNumber: "40702810110011000777"
                authDateTime: "2021-11-17T12:10+03:00"
                trxnDateTime: "2021-11-17T12:11+03:00"
                authId: "123456789"
                trxnId: "123456789"
                authStatus: "succeed"
                operationType: "debit"
                operationStatus: "transaction"
                amount: 100
                currency: "RUB"
                accountAmount: 100
                description: "Нужно совершить платеж"
                card:
                  ucid: "12345678901234567890"
                  mcc: "1234"
                  number: "1111********9999"
                merch:
                  id: "123456"
                  name: "Лучший Банк"
                  address: "ул. Уличная, д. 666"
                  city: "MOSCOW"
                  country: "RUS"
                rrn: "123456789012"
                acquirerId: "010455"
        "400":
          description: "Некорректный запрос"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestResponse"
              examples:
                Ошибка при неправильно заполненном ИНН:
                  value:
                    errorId: "retw6789"
                    errorMessage: "Некорректно заполнен ИНН"
                    errorCode: "VALIDATION_ERROR"
                Ошибка при неправильно переданном значении поля fieldName:
                  value:
                    errorId: "cde4zxc5"
                    errorMessage: "Ваш запрос невалиден"
                    errorCode: "INVALID_DATA"
                    errorDetails:
                      fieldName: "expected fieldName to be one of (1, 2, 3, 4, 5), but got \"0\""
                Ошибка при неправильно переданной дате платежа:
                  value:
                    errorId: "cde4zxc5"
                    errorMessage: "Данные не соответствуют формату платежного поручения"
                    errorCode: "INVALID_DATA"
                    errorDetails:
                      Дата платежа: "Дата исполнения платежа не может быть в прошлом"
        "401":
          description: "Ошибка аутентификации"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationFailedResponse"
              example:
                errorMessage: "Не хватает учетных данных"
                errorCode: "UNAUTHORIZED"
                errorId: "asdq3412"
        "403":
          description: "Ошибка авторизации"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthorizationFailedResponse"
              example:
                errorMessage: "Неправильный Tls сертификат"
                errorCode: "FORBIDDEN"
                errorId: "rtbe4567"
        "422":
          description: "Ошибка при обработке данных"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BusinessErrorResponse"
              example:
                errorMessage: "На балансе недостаточно средств"
                errorCode: "INSUFFICIENT_FUNDS"
                errorId: "bcde3412"
        "429":
          description: "Слишком много запросов"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyRequestsErrorResponse"
              example:
                errorMessage: "Слишком много запросов. Попробуйте позже"
                errorCode: "TOO_MANY_REQUESTS"
                errorId: "acdf000"
        "500":
          description: "Ошибка сервера"
          headers:
            X-Request-Id:
              required: true
              style: "simple"
              explode: false
              schema:
                type: "string"
                description: "Идентификатор запроса."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
              example:
                errorMessage: "Непредвиденная ошибка. Пожалуйста, попробуйте позже"
                errorCode: "INTERNAL_ERROR"
                errorId: "asdq3412"
      deprecated: true
      security:
      - httpAuth: []
components:
  schemas:
    PaymentRegistrySubmitResultResponse:
      required:
      - "paymentRegistryId"
      - "status"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
        status:
          $ref: "#/components/schemas/SubmissionStatus"
        error:
          required:
          - "errorCode"
          - "errorMessage"
          type: "object"
          properties:
            errorCode:
              type: "string"
              description: "Код ошибки."
            errorMessage:
              type: "string"
              description: "Описание ошибки."
          description: "Общая ошибка, произошедшая при создании реестра."
        paymentErrors:
          type: "array"
          description: "Платежи внутри реестра, содержащие ошибки."
          items:
            $ref: "#/components/schemas/EmployedSubmitPaymentError"
    BeneficiaryIpResidentRequest:
      required:
      - "addresses"
      - "birthDate"
      - "citizenship"
      - "documents"
      - "firstName"
      - "inn"
      - "lastName"
      - "registrationDate"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. phoneNumber или email обязателен к заполнению."
        email:
          type: "string"
          description: "Электронная почта. phoneNumber или email обязателен к заполнению."
        documents:
          minItems: 1
          type: "array"
          description: "Документы. Для ИП резидента обязателен тип PASSPORT."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          minItems: 1
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{15})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    StepListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество этапов сделки для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество этапов сделки для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество этапов сделки в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего этапов сделки, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список этапов сделки."
          items:
            $ref: "#/components/schemas/StepResponse"
    ApplicationSubStatus:
      type: "string"
      description: "Субстатус, присутствует только у заявок, где status = IN_PROGRESS."
      enum:
      - "PERMISSION_REQUESTED"
    Balance:
      required:
      - "authorized"
      - "otb"
      - "pendingPayments"
      - "pendingRequisitions"
      type: "object"
      properties:
        otb:
          type: "number"
          description: "Доступный остаток — деньги на счете + сумма доступного овердрафта, если он подключен."
        authorized:
          type: "number"
          description: "Сумма авторизаций — захолдированные на счете средства."
        pendingPayments:
          type: "number"
          description: "Сумма платежей в картотеке клиента — собственные платежи."
        pendingRequisitions:
          type: "number"
          description: "Сумма платежей в картотеке банка — требования к клиенту."
      description: "Баланс счета."
    ReceiptService:
      required:
      - "name"
      - "price"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Название услуги."
        price:
          type: "number"
          description: "Цена."
    BeneficiaryScoringInfoListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество результатов проверки для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество результатов проверки для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество результатов проверки в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего результатов проверки, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список результатов проверки."
          items:
            $ref: "#/components/schemas/BeneficiaryScoringInfo"
    PhoneType1:
      type: "string"
      description: "Тип телефона."
      enum:
      - "Мобильный"
      - "По месту жительства"
      - "Рабочий"
    Terminal:
      required:
      - "id"
      - "key"
      type: "object"
      properties:
        key:
          type: "string"
          description: "Серийный номер терминала."
        id:
          type: "string"
          description: "Идентификатор терминала."
    BeneficiaryLiteContactRequest:
      required:
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
      description: "Не требующий идентификации контакт."
    Passport1:
      required:
      - "number"
      - "series"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/IdentificationDocumentType"
        number:
          type: "string"
          description: "Номер документа"
        series:
          type: "string"
          description: "Серия документа"
        divisionName:
          type: "string"
          description: "Подразделение"
        issueDate:
          type: "string"
          description: "Дата выдачи документа"
          format: "date"
    CardPayerRequisites:
      required:
      - "accountNumber"
      type: "object"
      properties:
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета для списания."
      description: "Реквизиты плательщика."
    SubmitPaymentError:
      required:
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа, переданный клиентом при создании."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        errors:
          type: "array"
          description: "Ошибки валидации."
          items:
            $ref: "#/components/schemas/FieldValidationError"
    SelfEmployedCreationDate:
      type: "object"
      properties:
        from:
          type: "string"
          description: "Дата начала периода."
          format: "date-time"
        to:
          type: "string"
          description: "Дата окончания периода."
          format: "date-time"
      description: "Период даты добавления."
    Passport:
      required:
      - "date"
      - "division"
      - "number"
      - "serial"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        serial:
          type: "string"
          description: "Серия документа."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
        division:
          pattern: "^(\\d{3}-\\d{3})$"
          type: "string"
          description: "Код подразделения."
    Photo:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
        type:
          type: "string"
          description: "Тип фото."
        subType:
          type: "string"
          description: "Подтип фото."
        sheetNumber:
          type: "integer"
          description: "Номер страницы."
          format: "int32"
        review:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Результат проверки фото в формате `JSON`."
    CreatePhone:
      required:
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/PhoneType"
        number:
          type: "string"
          description: "Номер телефона."
    CreateEmployeesResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    SubscriptionResponse:
      required:
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/BundleCode"
    OfficialPassport:
      required:
      - "date"
      - "number"
      - "organization"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
    SelfEmployedPayPaymentRegistryResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    PaymentError:
      required:
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа, переданный клиентом при создании."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        errors:
          type: "array"
          description: "Ошибки валидации."
          items:
            required:
            - "errorDescription"
            - "fieldName"
            type: "object"
            properties:
              fieldName:
                type: "string"
                description: "Название поля, в котором возникла ошибка, на русском языке."
              errorDescription:
                type: "string"
                description: "Описание ошибки."
    RkcBankDetails:
      required:
      - "accountNumber"
      - "bankName"
      - "bik"
      - "corrAccountNumber"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка получателя.



            С 1 января 2021 года при перечислении налоговых платежей указываются новые значения БИК банков получателя.



            <a href=\"https://spmag.ru/articles/polya-platezhnogo-porucheniya-v-2021-godu-obrazec\">Подробнее о полях платежного поручения</a> "
        kpp:
          pattern: "^(\\d{9})$"
          type: "string"
          description: "КПП получателя"
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН. Укажите 0, чтобы не заполнять."
        name:
          maxLength: 160
          type: "string"
          description: "Наименование получателя."
        bankName:
          maxLength: 255
          minLength: 1
          type: "string"
          description: "Наименование банка получателя.



            С 1 января 2021 года при заполнении платежей на перечисление налогов после названия банка указывается название счета казначейства через знак <code>//</code>. "
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета. ВАЖНО: Для бюджетных платежей с 01.01.2021 в данном поле нужно указывать новые номера казначейских счетов."
        corrAccountNumber:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет банка получателя.



            С 1 января 2021 года при уплате налогов указывается номер счета банка получателя, входящий в состав единого казначейского счета (ЕКС). Раньше это поле заполнялось нулями. "
    UpdateTaskRequest:
      required:
      - "template"
      type: "object"
      properties:
        template:
          type: "string"
          description: "Шаблон, определяющий бизнес-логику задания."
        commentForAgent:
          type: "string"
          description: "Комментарий к заданию для представителя."
        parentTaskId:
          type: "string"
          description: "Идентификатор родительского задания."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON."
        contacts:
          type: "array"
          description: "Группа объектов с информацией о данных каждого участника задания, подлежащего удостоверению на встрече."
          items:
            $ref: "#/components/schemas/Contact"
        photos:
          type: "array"
          description: "Группа объектов с информацией о фото, относящихся к заданию."
          items:
            $ref: "#/components/schemas/Photo"
    SelfEmployedPaymentRegistrySubmitRequest:
      required:
      - "correlationId"
      - "paymentRegistryId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
    Patent:
      required:
      - "date"
      - "expireDate"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    CancelReceiptResponse:
      required:
      - "operation"
      - "receiptId"
      type: "object"
      properties:
        receiptId:
          type: "string"
          description: "Идентификатор чека."
          format: "uuid"
        operation:
          $ref: "#/components/schemas/ReceiptOperation"
    TemporaryResidencePermit:
      required:
      - "date"
      - "expireDate"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    TooManyRequestsErrorResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          type: "string"
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
    PositionInfo:
      required:
      - "currency"
      - "currentBalance"
      - "currentBalanceForWithdrawal"
      type: "object"
      properties:
        currency:
          type: "string"
          description: "Код валюты."
        currentBalance:
          type: "number"
          description: "Общий баланс по валюте."
        currentBalanceForWithdrawal:
          type: "number"
          description: "Сумма денежных средств, доступных для вывода."
        blockedQuantity:
          type: "number"
          description: "Количество заблокированной валюты."
    BeneficiaryIpResidentResponse:
      required:
      - "beneficiaryId"
      - "birthDate"
      - "firstName"
      - "lastName"
      - "registrationDate"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта."
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{15})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    IN_PROGRESS:
      required:
      - "beneficiaryId"
      - "status"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        status:
          type: "string"
          description: "Статус проверки в финансовом мониторинге."
          enum:
          - "IN_PROGRESS"
          - "SUCCEEDED"
          - "FAILED"
    TransitAccount:
      required:
      - "accountNumber"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Номер транзитного банковского счета."
      description: "Информация о транзитном счете. Актуально для валютных счетов."
    DeponentRequest:
      required:
      - "amount"
      type: "object"
      properties:
        amount:
          type: "number"
          description: "Сумма депонента."
    GetIntervalsResponse:
      required:
      - "appointmentId"
      - "timeOffset"
      type: "object"
      properties:
        appointmentId:
          type: "string"
          description: "Идентификатор назначения встречи."
        timeOffset:
          type: "string"
          description: "Временная зона адреса, для которого выбирается временной интервал в формате `ISO 8601`. Например, +03:00."
        intervals:
          type: "array"
          description: "Cписок объектов, содержащих информацию о начале и окончании временного интервала."
          items:
            $ref: "#/components/schemas/Interval"
    BeneficiaryFlNonresidentRequest:
      required:
      - "addresses"
      - "birthDate"
      - "citizenship"
      - "documents"
      - "firstName"
      - "isSelfEmployed"
      - "lastName"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        isSelfEmployed:
          type: "boolean"
          description: "Самозанятый."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. phoneNumber или email обязателен к заполнению."
        email:
          type: "string"
          description: "Электронная почта. phoneNumber или email обязателен к заполнению."
        documents:
          minItems: 1
          type: "array"
          description: "Документы. Обязательно — минимум 2.



            В большинстве случаев основной документ нерезидента РФ — `FOREIGN_PASSPORT`. Второй документ — любой из документов, подтверждающих право на пребывание в РФ. <a href=\"https://cdn.tbank.ru/static/documents/f829a126-7506-4d38-ae20-c5584668a3a6.pdf\">Подробнее о документах</a>.



            Для нерезидентов с гражданством BY достаточно одного документа с типом `FOREIGN_PASSPORT`."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          minItems: 1
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
    DocumentType1:
      type: "string"
      description: "Тип документа."
      enum:
      - "Паспорт"
      - "Иностранный паспорт"
      - "Загр. паспорт иностранного гр."
      - "Служебный/официальный паспорт"
      - "Дипломатический паспорт"
      - "Миграционная карта"
      - "Разр. на временное проживание"
      - "Виза"
      - "Вид на жительство"
    IncomingTransactionListItem:
      required:
      - "accountNumber"
      - "amount"
      - "operationId"
      type: "object"
      properties:
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер счета."
        operationId:
          type: "string"
          description: "ID операции пополнения."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма пополнения в валюте счета."
        currency:
          pattern: "^\\d{3}$"
          type: "string"
          description: "Валюта пополнения в валюте счета."
        operationAmount:
          type: "number"
          description: "Сумма пополнения в валюте пополнения."
        operationCurrency:
          pattern: "^\\d{3}$"
          type: "string"
          description: "Валюта пополнения в валюте пополнения."
        payerBik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК плательщика."
        payerKpp:
          pattern: "^(\\d{9})$"
          type: "string"
          description: "КПП плательщика."
        payerInn:
          pattern: "^(\\d{12}|\\d{10})$"
          type: "string"
          description: "ИНН плательщика."
        payerBankName:
          maxLength: 255
          minLength: 1
          type: "string"
          description: "Наименования банка плательщика."
        payerBankSwiftCode:
          type: "string"
          description: "SWIFT-код банка плательщика."
        payerAccountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер счета плательщика."
        payerCorrAccountNumber:
          pattern: "\\d{20}"
          type: "string"
          description: "Корр. счет плательщика."
        payerName:
          maxLength: 160
          type: "string"
          description: "Имя плательщика."
        paymentPurpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        documentNumber:
          type: "string"
          description: "Номер платежного поручения."
        chargeDate:
          type: "string"
          description: "Дата и время пополнения."
          format: "date-time"
        authorizationDate:
          type: "string"
          description: "Дата авторизации."
          format: "date-time"
        transactionDate:
          type: "string"
          description: "Дата транзакции."
          format: "date-time"
        drawDate:
          type: "string"
          description: "Дата списания."
          format: "date-time"
    BankStatement:
      required:
      - "accountNumber"
      - "income"
      - "outcome"
      - "saldoIn"
      - "saldoOut"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Расчетный счет организации."
        saldoIn:
          type: "number"
          description: "Баланс на начало периода."
        income:
          type: "number"
          description: "Обороты входящих платежей."
        outcome:
          type: "number"
          description: "Обороты исходящих платежей."
        saldoOut:
          type: "number"
          description: "Баланс на конец периода."
        operation:
          type: "array"
          description: "Список операций по счету."
          items:
            $ref: "#/components/schemas/BankStatementOperation"
    PaymentStatus:
      type: "string"
      description: "Статус платежа:

        <ul>

        <li><code>IN_PROGRESS</code> — в процессе исполнения;</li>

        <li><code>EXECUTED</code> — исполнен;</li>

        <li><code>FAILED</code> — не исполнен;</li>

        <li><code>CANCELLED</code> — отменен.</li>

        </ul>"
      enum:
      - "IN_PROGRESS"
      - "EXECUTED"
      - "FAILED"
      - "CANCELLED"
    DealListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество сделок для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество сделок для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество сделок в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего сделок, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список сделок."
          items:
            $ref: "#/components/schemas/DealResponse"
    ReceiptOperationType:
      type: "string"
      description: "Тип операции."
      enum:
      - "REGISTRATION"
      - "REGISTRATION_OFFLINE"
      - "CANCELLATION"
    CardBankDetails:
      required:
      - "cardId"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        cardId:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Идентификатор карты в системе банка."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
    SelfEmployedReceipts:
      required:
      - "status"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/SelfEmployedReceiptsRequestStatus"
        error:
          required:
          - "errorCode"
          - "errorMessage"
          type: "object"
          properties:
            errorCode:
              type: "string"
              description: "Код ошибки."
            errorMessage:
              type: "string"
              description: "Описание ошибки."
          description: "Ошибка получения чеков по реестру."
        receipts:
          type: "array"
          description: "Результат регистрации дохода."
          items:
            $ref: "#/components/schemas/SelfEmployedReceipt"
    AddCardRequestResponse:
      oneOf:
      - $ref: "#/components/schemas/FailedAddCardRequestResponse"
      - $ref: "#/components/schemas/PendingAddCardRequestResponse"
      - $ref: "#/components/schemas/ReadyAddCardRequestResponse"
    SelfEmployedCreatePaymentRegistryResultResponse:
      required:
      - "status"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
        status:
          $ref: "#/components/schemas/CreationRegisterStatus"
        error:
          $ref: "#/components/schemas/FieldValidationError"
        paymentErrors:
          type: "array"
          description: "Платежи внутри реестра, содержащие ошибки."
          items:
            $ref: "#/components/schemas/PaymentError1"
    CreateTaskResponse:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Уникальный идентификатор задания."
    PayerRequisites:
      required:
      - "accountNumber"
      type: "object"
      properties:
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета для списания."
      description: "Реквизиты плательщика."
    PaymentPayResult:
      required:
      - "number"
      - "paymentStatus"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Номер платежа."
          format: "int32"
        paymentStatus:
          $ref: "#/components/schemas/PayStatus"
        accountNumber:
          type: "string"
          description: "Номер счета."
        errors:
          type: "array"
          description: "Ошибки валидации."
          items:
            $ref: "#/components/schemas/FieldValidationError1"
    Visa:
      required:
      - "date"
      - "expireDate"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    Phone2:
      required:
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/PhoneType2"
        number:
          pattern: "^((\\+7)([0-9]){10})$"
          type: "string"
          description: "Номер телефона в формате +7xxxxxxxxxx"
    AccountInfo1:
      required:
      - "accountNumber"
      - "accountType"
      - "balance"
      - "bankBik"
      - "currency"
      - "name"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Расчетный счет организации."
        name:
          type: "string"
          description: "Наименование счета."
        currency:
          type: "string"
          description: "Код валюты счета по ОКВ (цифрами)."
        bankBik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка."
        accountType:
          type: "string"
          description: "Тип счета

            * `Current` — расчетный счет

            * `Tax` — счет Т-Бухгалтерии

            * `Tender` — специальный счет для участия в госзакупках

            * `Overnight` — счет Overnight"
          enum:
          - "Current"
          - "Tax"
          - "Tender"
          - "Overnight"
        balance:
          $ref: "#/components/schemas/Balance"
        transitAccount:
          $ref: "#/components/schemas/TransitAccount"
    EmployeeStatus1:
      type: "string"
      description: "Статус самозанятого:<br /><ul><li><code>ERROR</code> — ошибка создания анкеты самозанятого.</li><li><code>DRAFT</code> — анкета самозанятого готова к отправке.</li><li><code>PROCESSING_ERROR</code> — ошибка отправки анкеты. Обратитесь к персональному менеджеру для уточнения причины.</li><li><code>PROCESSING</code> — обрабатываем анкету самозанятого.</li><li><code>REJECTED</code> — отказ в открытии счета. Конечный статус добавления.</li><li><code>MTNG_WAIT</code> — самозанятый ожидает назначения встречи для доставки карты. </li><li><code>MTNG_SCHD</code> — встреча для доставки карты самозанятому назначена.</li><li><code>MTNG_CANC</code> — встреча для доставки карты самозанятому отменена.</li><li><code>ACTIVE</code> — самозанятый добавлен. Конечный статус добавления.</li><li><code>DELETED</code> — самозанятый удален.</li></ul>"
      enum:
      - "PROCESSING"
      - "DRAFT"
      - "PROCESSING_ERROR"
      - "ACTIVE"
      - "ERROR"
      - "REJECTED"
      - "DELETED"
      - "MTNG_SCHD"
      - "MTNG_WAIT"
      - "MTNG_CANC"
    IdentificationDocument:
      oneOf:
      - $ref: "#/components/schemas/Passport1"
    Card:
      type: "object"
      properties:
        ucid:
          type: "string"
          description: "UCID"
        mcc:
          type: "string"
          description: "MCC"
        number:
          type: "string"
          description: "Номер карты"
      description: "Информация о карте"
    PaymentListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество платежей для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество платежей для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество платежей в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего платежей."
          format: "int32"
        results:
          type: "array"
          description: "Список платежей."
          items:
            $ref: "#/components/schemas/PaymentResponse"
    SelfEmployedRegistryCreateTypeRequest:
      type: "string"
      description: "

        Может принимать одно из двух значений:

        <ul>

        <li>IGNORE_ERRORS — реестр будет создан из всех корректных платежей, его идентификатор вернется в поле <b>paymentRegistryId</b> метода <a href=\"/docs/api/self-employed-get-payment-registry-create-result\">Получить результат создания черновика платежного реестра</a>. Если корректных платежей нет, реестр не создастся.</li>

        <li>FAIL_ERRORS — если есть ошибочные платежи, реестр не создастся.

        </ul>

        Значение по умолчанию — FAIL_ERRORS.</li>\n"
      enum:
      - "IGNORE_ERRORS"
      - "FAIL_ERRORS"
    CardBankDetailsResponse:
      required:
      - "bankDetailsId"
      - "beneficiaryId"
      - "cardId"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        cardId:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Идентификатор карты в системе банка."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
    BeneficiaryScoringError:
      required:
      - "code"
      - "description"
      type: "object"
      properties:
        code:
          type: "string"
          description: "Код ошибки."
        description:
          type: "string"
          description: "Описание ошибки."
      description: "Ошибка по результатам проверки бенефициара в финансовом мониторинге."
    ReceiptResponse:
      oneOf:
      - $ref: "#/components/schemas/FromForeignAgencyReceiptResponse"
      - $ref: "#/components/schemas/FromIndividualReceiptResponse"
      - $ref: "#/components/schemas/FromLegalEntityReceiptResponse"
    SelfEmployedPayPaymentRegistryResultRequest:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    BundleCode:
      type: "string"
      description: "Тип подписки."
      enum:
      - "PRO"
      - "PREMIUM"
      - "PRIVATE"
      - "TEAM_PRO"
      - "TEAM_SELECT"
      - "TEAM_PREMIUM"
      - "TEAM_PRIVATE"
      - "DEFAULT"
    TaxThirdParty:
      required:
      - "inn"
      - "kpp"
      type: "object"
      properties:
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН третьего лица."
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП третьего лица."
      description: "Реквизиты для оплаты налогов за третьих лиц. <a href=\"https://glavkniga.ru/situations/s509587\">Подробнее</a>."
    BankDetailsListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество реквизитов для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество реквизитов для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество реквизитов в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего реквизитов, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список реквизитов бенефициара."
          items:
            $ref: "#/components/schemas/BankDetailsResponse"
    CancelTaskRequest:
      required:
      - "reason"
      type: "object"
      properties:
        reason:
          type: "string"
          description: "Причина отмены задания."
    CancelReceiptRequest:
      required:
      - "reason"
      type: "object"
      properties:
        reason:
          type: "string"
          description: "Причина аннулирования."
          enum:
          - "MISTAKE"
          - "REFUND"
    ReceiptOperation:
      oneOf:
      - $ref: "#/components/schemas/ReceiptFailedOperation"
      - $ref: "#/components/schemas/ReceiptInProgressOperation"
      - $ref: "#/components/schemas/ReceiptSuccessOperation"
    Ready:
      required:
      - "beneficiaryId"
      - "result"
      - "status"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        status:
          type: "string"
          description: "Статус проверки в финансовом мониторинге."
          enum:
          - "IN_PROGRESS"
          - "READY"
        result:
          $ref: "#/components/schemas/BeneficiaryScoringResult"
    SbpBankDetailsResponse:
      required:
      - "bankDetailsId"
      - "bankId"
      - "beneficiaryId"
      - "phoneNumber"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        phoneNumber:
          pattern: "^((\\+7)([0-9]){10})$"
          type: "string"
          description: "Номер мобильного телефона."
        bankId:
          pattern: "^\\d{12}$"
          type: "string"
          description: "Идентификатор банка в системе быстрых платежей."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
    Balance1:
      required:
      - "authorized"
      - "balance"
      - "otb"
      - "pendingPayments"
      - "pendingRequisitions"
      - "realOtb"
      type: "object"
      properties:
        balance:
          type: "number"
          description: "Текущий остаток на счете."
        realOtb:
          type: "number"
          description: "Доступный остаток без учета овердрафта и с вычетом блокировок."
        otb:
          type: "number"
          description: "Доступный остаток — деньги на счете + сумма доступного овердрафта, если он подключен."
        authorized:
          type: "number"
          description: "Сумма авторизаций — захолдированные на счете средства."
        pendingPayments:
          type: "number"
          description: "Сумма платежей в картотеке клиента — собственные платежи."
        pendingRequisitions:
          type: "number"
          description: "Сумма платежей в картотеке банка — требования к клиенту."
      description: "Баланс счета."
    PersonalDataResponse:
      required:
      - "address"
      - "birthDate"
      - "birthPlace"
      - "firstName"
      - "inn"
      - "lastName"
      - "passport"
      type: "object"
      properties:
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество, если есть."
        firstName:
          type: "string"
          description: "Имя."
        address:
          type: "string"
          description: "Адрес регистрации."
        bic:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка."
        accountNumber:
          type: "string"
          description: "Номер лицевого счета в Т-Банке."
        passport:
          $ref: "#/components/schemas/Passport2"
    Merch:
      type: "object"
      properties:
        id:
          type: "string"
          description: "Идентификатор"
        name:
          type: "string"
          description: "Имя"
        address:
          type: "string"
          description: "Место совершения операции (Адрес)"
        city:
          type: "string"
          description: "Место совершения операции (Город)"
        country:
          type: "string"
          description: "Место совершения операции (Страна)"
      description: "Информация о контрагенте"
    CreatePhoneType:
      type: "string"
      description: "Тип телефона."
      enum:
      - "Мобильный"
      - "По месту жительства"
      - "Рабочий"
    Address:
      required:
      - "address"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "

            Тип адреса.

            Для типов `FL_RESIDENT`, `FL_NONRESIDENT`, `IP_RESIDENT`, `IP_NONRESIDENT` обязателен один из адресов:


            \ * `REGISTRATION_ADDRESS` — адрес регистрации по месту жительства;

            \ * `RESIDENCE_ADDRESS` — адрес регистрации по месту пребывания.


            Для типов `UL_RESIDENT`, `UL_NONRESIDENT` обязательно передавать `LEGAL_ENTITY_ADDRESS` — адрес юридического лица.\n"
          enum:
          - "POSTAL_ADDRESS"
          - "REGISTRATION_ADDRESS"
          - "RESIDENCE_ADDRESS"
          - "LEGAL_ENTITY_ADDRESS"
          - "OFFICE_OF_FOREIGN_LEGAL_ENTITY_ADDRESS"
        address:
          maxLength: 256
          type: "string"
          description: "Адрес."
      description: "Адрес бенефициара."
    CreateSelfEmployedResultResponse:
      type: "object"
      properties:
        recipientResults:
          type: "array"
          description: "Список результатов создания самозанятых."
          items:
            $ref: "#/components/schemas/CreateSelfEmployed"
    BeneficiaryFlResidentRequest:
      required:
      - "addresses"
      - "birthDate"
      - "citizenship"
      - "documents"
      - "firstName"
      - "isSelfEmployed"
      - "lastName"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        isSelfEmployed:
          type: "boolean"
          description: "Самозанятый."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. Номер телефона или электронная почта обязательны к заполнению."
        email:
          type: "string"
          description: "Электронная почта. Номер телефона или электронная почта обязательны к заполнению."
        documents:
          minItems: 1
          type: "array"
          description: "Документы. Обязательный тип для физического лица-резидента — `PASSPORT`."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          minItems: 1
          type: "array"
          description: "Адреса"
          items:
            $ref: "#/components/schemas/Address"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН"
        snils:
          pattern: "^(\\d{11})$"
          type: "string"
          description: "СНИЛС"
    ApiBlacklistResponse:
      required:
      - "isBlacklisted"
      type: "object"
      properties:
        isBlacklisted:
          type: "boolean"
          description: "Находится ли пользователь в черных списках."
    SelfEmployedReceiptsResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    SelfEmployedPaymentRegistry:
      required:
      - "paymentsCount"
      - "status"
      - "totalSum"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/PaymentRegistryStatus1"
        loadDate:
          type: "string"
          description: "Дата исполнения реестра."
        paymentsCount:
          type: "integer"
          description: "Количество платежей в реестре."
          format: "int32"
        totalSum:
          type: "number"
          description: "Общая сумма платежей в реестре."
        payments:
          type: "array"
          description: "Список платежей внутри реестра."
          items:
            $ref: "#/components/schemas/SelfEmployedPaymentInfo"
    CreateAddress1:
      required:
      - "postalCode"
      - "state"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/CreateAddressType"
        country:
          type: "string"
          description: "Страна."
        postalCode:
          type: "string"
          description: "Индекс."
        state:
          type: "string"
          description: "Регион."
        city:
          type: "string"
          description: "Город."
        district:
          type: "string"
          description: "Район."
        settlement:
          type: "string"
          description: "Населенный пункт."
        street:
          type: "string"
          description: "Улица."
        house:
          type: "string"
          description: "Дом."
        building:
          type: "string"
          description: "Здание."
        construction:
          type: "string"
          description: "Корпус."
        apartment:
          type: "string"
          description: "Квартира."
    Contract:
      required:
      - "date"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    ApplicationStatus:
      type: "string"
      description: "Статус заявки."
      enum:
      - "IN_PROGRESS"
      - "DONE"
    BeneficiaryUlNonresidentRequest:
      required:
      - "addresses"
      - "name"
      - "registrationDate"
      - "registrationNumber"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        name:
          type: "string"
          description: "Наименование организации."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. phoneNumber или email обязателен к заполнению."
        email:
          type: "string"
          description: "Электронная почта. phoneNumber или email обязателен к заполнению."
        addresses:
          minItems: 1
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        nza:
          type: "string"
          description: "Номер записи об аккредитации."
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        registrationNumber:
          type: "string"
          description: "Номер регистрации."
        opf:
          type: "string"
          description: "Организационно-правовая форма."
        inn:
          pattern: "^(\\d{10})$"
          type: "string"
          description: "ИНН."
        kio:
          type: "string"
          description: "Код иностранной организации. Обязателен, если ИНН не задан."
    ReadyAddCardRequestResponse:
      required:
      - "addCardRequestId"
      - "bankDetailsId"
      - "beneficiaryId"
      - "status"
      - "terminalKey"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        addCardRequestId:
          type: "string"
          description: "Идентификатор запроса на добавление карты."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
        status:
          type: "string"
          description: "Статус запроса на добавление карты:

            * `PENDING` — карта в процессе добавления.

            * `READY` — карта успешно добавлена.

            * `FAILED` — не удалось добавить карту."
          enum:
          - "PENDING"
          - "READY"
          - "FAILED"
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
    DiplomaticPassport:
      required:
      - "date"
      - "number"
      - "organization"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
    SbpBankDetails:
      required:
      - "bankId"
      - "phoneNumber"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        phoneNumber:
          pattern: "^((\\+7)([0-9]){10})$"
          type: "string"
          description: "Номер мобильного телефона."
        bankId:
          pattern: "^\\d{12}$"
          type: "string"
          description: "Идентификатор банка в системе быстрых платежей."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
    CreateDocument:
      required:
      - "date"
      - "organization"
      - "serial"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/DocumentType"
        serial:
          type: "string"
          description: "Серия."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
        division:
          type: "string"
          description: "Код подразделения."
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    AccountOperationType:
      type: "string"
      description: "Тип операции"
      enum:
      - "debit"
      - "credit"
    DealRequest:
      required:
      - "accountNumber"
      type: "object"
      properties:
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
    BeneficiaryScoringInfoListResponseV2:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество результатов проверки для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество результатов проверки для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество результатов проверки в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего результатов проверки, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список результатов проверки."
          items:
            $ref: "#/components/schemas/BeneficiaryScoringInfoV2"
    EmployeeResponse:
      type: "object"
      properties:
        employees:
          type: "array"
          description: "Список сотрудников."
          items:
            $ref: "#/components/schemas/Employee"
    SubmissionStatus1:
      type: "string"
      description: "Статус подписания платежного реестра."
      enum:
      - "ACCEPTED"
      - "ERROR"
      - "IN_PROGRESS"
    SUCCEEDED:
      required:
      - "beneficiaryId"
      - "status"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        status:
          type: "string"
          description: "Статус проверки в финансовом мониторинге."
          enum:
          - "IN_PROGRESS"
          - "SUCCEEDED"
          - "FAILED"
        warnings:
          type: "array"
          items:
            $ref: "#/components/schemas/BeneficiaryScoringError"
    Document1:
      required:
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/DocumentType1"
        serial:
          type: "string"
          description: "Серия."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
        division:
          type: "string"
          description: "Код подразделения."
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    CreationEmployedStatus:
      type: "string"
      description: "Статус создания:<br /><ul><li><code>QUEUED</code> — сотрудник  стоит в очереди на создание.</li><li><code>CREATED</code> — сотрудник создан в зарплатном проекте.</li><li><code>ERROR</code> — сотрудник не был создан в зарплатном проекте. Ошибки перечислены в параметре <b>errors</b>.</li></ul>"
      enum:
      - "CREATED"
      - "ERROR"
      - "QUEUED"
    OperationsResponse:
      required:
      - "arrests"
      type: "object"
      properties:
        etpFees:
          type: "array"
          description: "Список картотек ЭТП."
          items:
            $ref: "#/components/schemas/Etp"
        contractBreaches:
          type: "array"
          description: "Список списаний за нарушения контракта."
          items:
            $ref: "#/components/schemas/Etp"
        arrests:
          $ref: "#/components/schemas/ListOfArrest"
    RkcBankDetailsRequest:
      required:
      - "accountNumber"
      - "bankName"
      - "bik"
      - "corrAccountNumber"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка получателя.



            С 1 января 2021 года при перечислении налоговых платежей указываются новые значения БИК банков получателя.



            <a href=\"https://spmag.ru/articles/polya-platezhnogo-porucheniya-v-2021-godu-obrazec\">Подробнее о полях платежного поручения</a> "
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП получателя. Чтобы не заполнять, передайте `0`. Обязательно только для бенефициаров юридических лиц-резидентов (UL_RESIDENT)."
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "

            ИНН бенефициара. Если платеж выполняется в пользу физического или юридического лица-нерезидента (FL_RESIDENT/FL_NONRESIDENT/UL_NONRESIDENT) и его ИНН неизвестен, передайте `0`.

            В остальных случаях передавайте фактический ИНН получателя.

            \\

            Если у бенефициара в методе создания бенефициара был заполнен ИНН, поле ИНН заполнять не нужно.

            ИНН подставляется автоматически по информации из бенефициара в момент отправки платежа. Для корректной работы передавать `0` не нужно.\n"
        name:
          maxLength: 160
          type: "string"
          description: "Наименование получателя."
        bankName:
          maxLength: 160
          minLength: 1
          type: "string"
          description: "Наименование банка получателя."
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета получателя."
        corrAccountNumber:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет банка получателя."
    DeponentResponse:
      required:
      - "amount"
      - "beneficiaryId"
      - "dealId"
      - "stepId"
      type: "object"
      properties:
        dealId:
          type: "string"
          description: "Идентификатор сделки."
          format: "uuid"
        stepId:
          type: "string"
          description: "Идентификатор этапа сделки."
          format: "uuid"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма депонента."
    ResidencePermit:
      required:
      - "date"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        serial:
          type: "string"
          description: "Серия документа."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    GetTaxpayerStatusResponse:
      required:
      - "status"
      type: "object"
      properties:
        status:
          type: "string"
          description: "Статус самозанятости в Т-Банке."
        info:
          $ref: "#/components/schemas/Info"
        application:
          $ref: "#/components/schemas/Application"
    BeneficiaryLiteContactResponse:
      required:
      - "beneficiaryId"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
      description: "Не требующий идентификации контакт."
    FromIndividualReceiptResponse:
      required:
      - "incomeReceivedAt"
      - "incomeStatedAt"
      - "incomeType"
      - "receiptId"
      - "status"
      - "totalAmount"
      type: "object"
      properties:
        receiptId:
          type: "string"
          description: "Идентификатор чека."
          format: "uuid"
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        incomeStatedAt:
          type: "string"
          description: "Дата и время заявления дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        status:
          $ref: "#/components/schemas/ReceiptStatus"
        totalAmount:
          type: "number"
          description: "Сумма заявленного дохода."
        services:
          type: "array"
          description: "Массив объектов с информацией об оказанных услугах."
          items:
            $ref: "#/components/schemas/ReceiptService"
        operations:
          type: "array"
          description: "Массив объектов с информацией по операциям, произведенным с чеком."
          items:
            $ref: "#/components/schemas/ReceiptOperation"
        tinkoffLink:
          type: "string"
          description: "Ссылка на временный чек в случае недоступности сервисов ФНС."
        fnsLink:
          type: "string"
          description: "Ссылка на чек в случае успешной регистрации в ФНС."
    CreateSelfEmployedResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    Contact:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Уникальный идентификатор контакта."
        role:
          type: "string"
          description: "Роль."
        firstName:
          type: "string"
          description: "Имя."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        phones:
          type: "array"
          description: "Телефон."
          items:
            $ref: "#/components/schemas/Phone2"
        documents:
          type: "array"
          description: "Документы, удостоверяющие личность. Для роли `REALTOR` параметр можно не передавать."
          items:
            $ref: "#/components/schemas/IdentificationDocument"
    CashLimit:
      required:
      - "limitPeriod"
      - "limitRemain"
      - "limitValue"
      type: "object"
      properties:
        limitValue:
          type: "number"
          description: "Лимит на снятия наличных в валюте счета, к которому привязана карта."
        limitRemain:
          type: "number"
          description: "Доступный остаток лимита на снятия наличных в валюте счета, к которому привязана карта."
        limitPeriod:
          $ref: "#/components/schemas/OutputLimitPeriod"
      description: "Объект с информацией о лимите на снятие наличных."
    CreatePaymentDraftRequest:
      required:
      - "accountNumber"
      - "amount"
      - "bankAcnt"
      - "bankBik"
      - "documentNumber"
      - "inn"
      - "kbk"
      - "kpp"
      - "oktmo"
      - "paymentPurpose"
      - "recipientName"
      - "taxDocDate"
      - "taxDocNumber"
      - "taxEvidence"
      - "taxPayerStatus"
      - "taxPeriod"
      - "uin"
      type: "object"
      properties:
        documentNumber:
          pattern: "^(\\d{1,6})$"
          type: "string"
          description: "Номер распоряжения, определяемый клиентом."
        date:
          type: "string"
          description: "Дата и время исполнения платежа. Может быть в будущем или не передаваться. Если поле не передано, подписанный документ будет принят к исполнению немедленно."
          format: "date-time"
        amount:
          type: "number"
          description: "Сумма платежа."
        recipientName:
          type: "string"
          description: "Получатель."
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН получателя. Если платеж выполняется в пользу физ. лица и его ИНН неизвестен, передайте <code>0</code>. Во всех остальных случаях передавайте фактический ИНН получателя."
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП получателя. Если у получателя платежа нет КПП, например, это физ. лицо или ИП, передайте <code>0</code>."
        bankAcnt:
          type: "string"
          description: "Номер счета получателя."
        bankBik:
          type: "string"
          description: "БИК банка."
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета для списания."
        paymentPurpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        executionOrder:
          maximum: 5
          minimum: 1
          type: "integer"
          description: "Очередность платежа."
          format: "int32"
          deprecated: true
        taxPayerStatus:
          type: "string"
          description: "Статус составителя расчетного документа. Поле платежки 101. Если платеж не бюджетный, передайте <code>0</code>."
        kbk:
          type: "string"
          description: "Код бюджетной классификации. Поле платежки 104. Если платеж не бюджетный или КБК отсутствует, передайте <code>0</code>."
        oktmo:
          type: "string"
          description: "Код ОКТМО территории, на которой мобилизуются денежные средства от уплаты налога, сбора и иного платежа. Если платеж не бюджетный, передайте <code>0</code>."
        taxEvidence:
          type: "string"
          description: "Основание налогового платежа. Поле платежки 106. Если платеж не бюджетный или основание неизвестно, передайте <code>0</code>."
        taxPeriod:
          type: "string"
          description: "Налоговый период. Поле платежки 107. Формат — ДД.ММ.ГГГГ, первые два символа могут быть буквами. Если платеж не бюджетный или период отсутствует, передайте <code>0</code>."
        uin:
          type: "string"
          description: "Уникальный идентификатор платежа. Если платеж не бюджетный, передайте <code>0</code>."
        taxDocNumber:
          type: "string"
          description: "Номер налогового документа. Поле платежки 108. Если платеж не бюджетный или задолженность оплачивается в добровольном порядке, передайте <code>0</code>."
        taxDocDate:
          type: "string"
          description: "Дата налогового документа. Поле платежки 109. Формат — ДД.ММ.ГГГГ. Если платеж не бюджетный или дата отсутствует, передайте <code>0</code>."
        revenueTypeCode:
          type: "string"
          description: "Код вида выплаты. Обязательное поле для платежей в пользу физ. лиц. <a href=\"https://www.audit-it.ru/news/account/1013406.html\">Подробнее</a>."
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        collectionAmountNumber:
          type: "number"
          description: "Удержанная сумма из заработной платы и иных доходов работника в рублях. <a href=\"https://www.b-kontur.ru/enquiry/95\">Подробнее</a>."
        recipientCorrAccountNumber:
          type: "string"
          description: "Корреспондентский счет банка получателя. Для налогового платежа обязательно указывается номер счета банка получателя средств — номер банковского счета, который входит в состав единого казначейского счета (ЕКС)."
        thirdParty:
          $ref: "#/components/schemas/ThirdPartyInfo"
    ReceiptOperationStatus:
      type: "string"
      description: "Статус операции."
      enum:
      - "IN_PROGRESS"
      - "SUCCESS"
      - "FAILED"
    CreateSelfEmployedData:
      required:
      - "birthDate"
      - "birthPlace"
      - "citizenship"
      - "firstName"
      - "lastName"
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор самозанятого на стороне клиента."
          format: "int32"
        firstName:
          type: "string"
          description: "Имя (кириллица)."
        lastName:
          type: "string"
          description: "Фамилия (кириллица)."
        middleName:
          type: "string"
          description: "Отчество (кириллица)."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          type: "string"
          description: "Гражданство."
        email:
          type: "string"
          description: "Электронная почта."
        latinFirstName:
          type: "string"
          description: "Имя (латиница)."
        latinLastName:
          type: "string"
          description: "Фамилия (латиница)."
        phones:
          type: "array"
          description: "Мобильный телефон."
          items:
            $ref: "#/components/schemas/CreatePhone1"
        addresses:
          type: "array"
          description: "Адреса места жительства и регистрации."
          items:
            $ref: "#/components/schemas/CreateAddress1"
        documents:
          type: "array"
          description: "Для граждан РФ укажите данные паспорта.



            Для иностранных граждан укажите:

            <ul>

            \  <li>Один из основных документов — «Иностранный паспорт», «Загр. паспорт иностранного гр.», «Служебный/официальный паспорт», «Дипломатический паспорт».</li>

            \  <li>Один из миграционных документов — «Миграционная карта», «Разр. на временное проживание», «Вид на жительство».</li>

            </ul>

            \             "
          items:
            $ref: "#/components/schemas/CreateDocument1"
        registrationInfo:
          $ref: "#/components/schemas/CreateSelfEmployedRegistrationInfo"
    FromLegalEntityReceiptResponse:
      required:
      - "customerInn"
      - "customerOrganization"
      - "incomeReceivedAt"
      - "incomeStatedAt"
      - "incomeType"
      - "receiptId"
      - "status"
      - "totalAmount"
      type: "object"
      properties:
        receiptId:
          type: "string"
          description: "Идентификатор чека."
          format: "uuid"
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        incomeStatedAt:
          type: "string"
          description: "Дата и время заявления дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        status:
          $ref: "#/components/schemas/ReceiptStatus"
        totalAmount:
          type: "number"
          description: "Сумма заявленного дохода."
        services:
          type: "array"
          description: "Массив объектов с информацией об оказанных услугах."
          items:
            $ref: "#/components/schemas/ReceiptService"
        operations:
          type: "array"
          description: "Массив объектов с информацией по операциям, произведенным с чеком."
          items:
            $ref: "#/components/schemas/ReceiptOperation"
        customerInn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН компании или ИП, которому самозанятый оказал услугу."
        customerOrganization:
          type: "string"
          description: "Название компании или ИП, которому самозанятый оказывал услуги."
        tinkoffLink:
          type: "string"
          description: "Ссылка на временный чек в случае недоступности сервисов ФНС."
        fnsLink:
          type: "string"
          description: "Ссылка на чек в случае успешной регистрации в ФНС."
    SbpBankDetailsRequest:
      required:
      - "bankId"
      - "phoneNumber"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
        phoneNumber:
          pattern: "^((\\+7)([0-9]){10})$"
          type: "string"
          description: "Номер мобильного телефона."
        bankId:
          pattern: "^\\d{12}$"
          type: "string"
          description: "Идентификатор банка в системе быстрых платежей."
    Interval:
      required:
      - "endInterval"
      - "startInterval"
      type: "object"
      properties:
        startInterval:
          type: "string"
          description: "Время начала интервала. Локальное время в формате `ISO 8601`."
        endInterval:
          type: "string"
          description: "Время окончания интервала. Локальное время в формате `ISO 8601`."
    CreateForeignAgencyReceiptRequest:
      required:
      - "customerOrganization"
      - "incomeType"
      type: "object"
      properties:
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход:

            * `FROM_INDIVIDUAL` — от физического лица;

            * `FROM_LEGAL_ENTITY` — от компании или ИП;

            * `FROM_FOREIGN_AGENCY` — от иностранной компании."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Ожидается в ISO-8601 формате <b>yyyy-MM-ddTHH:mm:ss<.fff><TZDSuffix></b>, где:

            * HH — часы в 24-часовой нотации. Допускаются значения от 00 до 23.

            * .fff — опциональная часть, содержащая доли секунд. Допускается не больше трех знаков.

            * TZDSuffix — опциональный суффикс. Допускается значение <code>Z</code> или <code>+00:00</code>."
          format: "date-time"
        services:
          type: "array"
          description: "Список услуг."
          items:
            $ref: "#/components/schemas/ReceiptService"
        customerOrganization:
          type: "string"
          description: "Название организации, которой самозанятый оказывал услуги."
    CreateApplicationResponse:
      required:
      - "cardIssueApplicationId"
      type: "object"
      properties:
        cardIssueApplicationId:
          type: "string"
          description: "ID заявки на выпуск виртуальной карты на сотрудника."
          format: "uuid"
    HoldListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество холдов для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество холдов для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество холдов в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего холдов, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список холдов."
          items:
            $ref: "#/components/schemas/HoldListItem"
    EmployeesInfoRequest:
      type: "object"
      properties:
        employeeIds:
          type: "array"
          description: "Идентификаторы сотрудников."
          items:
            type: "integer"
            format: "int32"
    CreatePaymentRegistryResultResponse:
      required:
      - "status"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра"
          format: "int32"
        status:
          $ref: "#/components/schemas/CreationRegistryStatus"
        error:
          required:
          - "errorDescription"
          - "fieldName"
          type: "object"
          properties:
            fieldName:
              type: "string"
              description: "Название поля, в котором возникла ошибка, на русском языке."
            errorDescription:
              type: "string"
              description: "Описание ошибки."
          description: "Общая ошибка, произошедшая при создании реестра."
        paymentErrors:
          type: "array"
          description: "Платежи внутри реестра, содержащие ошибки."
          items:
            $ref: "#/components/schemas/PaymentError"
    CardIssueApplicationStatusResponse:
      required:
      - "cardIssueApplicationId"
      - "status"
      type: "object"
      properties:
        cardIssueApplicationId:
          type: "string"
          description: "Идентификатор заявки на выпуск бизнес-карты."
          format: "uuid"
        status:
          $ref: "#/components/schemas/CardIssueApplicationStatus"
        failedReason:
          type: "string"
          description: "Описание причины неуспешной обработки. Возвращается только для статусов `FAILED_NON_FATAL` и `FAILED_FATAL`."
        ucid:
          type: "integer"
          description: "Идентификатор карты. Возвращается только для статуса `CARD_ISSUED`."
          format: "int64"
    DocumentResponse:
      required:
      - "fileName"
      - "id"
      - "mime"
      - "size"
      - "title"
      type: "object"
      properties:
        id:
          type: "string"
          description: "ID документа."
          format: "uuid"
        title:
          type: "string"
          description: "Тип документа."
        fileName:
          type: "string"
          description: "Название файла."
        mime:
          type: "string"
          description: "Формат файла."
        size:
          type: "integer"
          description: "Размер файла."
          format: "int64"
    ApiPDLResponse:
      required:
      - "isPublicOfficialPerson"
      type: "object"
      properties:
        isPublicOfficialPerson:
          type: "boolean"
          description: "Является ли пользователь публичным должностным лицом."
    BeneficiaryIpNonresidentResponse:
      required:
      - "beneficiaryId"
      - "birthDate"
      - "citizenship"
      - "firstName"
      - "lastName"
      - "registrationDate"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта."
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{15})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    CreateSelfEmployed:
      required:
      - "firstName"
      - "lastName"
      - "number"
      - "status"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Номер самозанятого, переданный клиентом при создании."
          format: "int32"
        recipientId:
          type: "integer"
          description: "Идентификатор самозанятого. Может не прийти, если при создании самозанятого возникли ошибки."
          format: "int32"
        firstName:
          type: "string"
          description: "Имя."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество."
        status:
          $ref: "#/components/schemas/CreationSelfEmployedStatus"
        errors:
          type: "array"
          description: "Список ошибок."
          items:
            $ref: "#/components/schemas/FieldValidationError"
    EmployedSubmitPaymentError:
      required:
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа, переданный клиентом при создании."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        errors:
          type: "array"
          description: "Ошибки валидации."
          items:
            required:
            - "errorDescription"
            - "fieldName"
            type: "object"
            properties:
              fieldName:
                type: "string"
                description: "Название поля, в котором возникла ошибка, на русском языке."
              errorDescription:
                type: "string"
                description: "Описание ошибки."
    SelfEmployedCreatePaymentRegistryRequest:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        companyAccountNumber:
          type: "string"
          description: "

            Номер счета компании, с которого будут списаны деньги для оплаты реестра — при наличии РКО в Т-Банке.<br />

            Если номер счета не передан, средства спишутся с основного счета компании.

            \        "
        registryCreateType:
          $ref: "#/components/schemas/SelfEmployedRegistryCreateTypeRequest"
        payments:
          type: "array"
          description: "Список платежей внутри реестра."
          items:
            $ref: "#/components/schemas/SelfEmployedCreatePaymentInfo"
        taxHolding:
          type: "boolean"
          description: "

            <ul>

            <li><code>true</code> — Т-Банк переведет 6% от суммы платежа на налоговую копилку для последующей оплаты налогов;</li>

            <li><code>false</code> — самозанятый получит полную сумму и налог удержан не будет.</li>

            </ul>

            Значение по умолчанию — <code>false</code>."
        incomeType:
          $ref: "#/components/schemas/SelfEmployedIncomeType"
    SetLimitRequest:
      required:
      - "limitPeriod"
      - "limitValue"
      type: "object"
      properties:
        limitValue:
          maximum: 1000000000000
          exclusiveMaximum: true
          minimum: 0
          type: "number"
          description: "Величина лимита в валюте счета, к которому привязана карта. До двух дробных знаков."
        limitPeriod:
          $ref: "#/components/schemas/InputLimitPeriod"
    BankInfo:
      required:
      - "bik"
      - "corAccount"
      - "name"
      type: "object"
      properties:
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК."
        corAccount:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет."
        name:
          maxLength: 255
          minLength: 1
          type: "string"
          description: "Наименование банка."
      description: "Информация о банке."
    CreatePaymentRegistryResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    PayStatus:
      type: "string"
      description: "Статус платежа."
      enum:
      - "IN_PROGRESS"
      - "EXECUTED"
      - "ERROR"
      - "SENT"
    SelfEmployedPaymentInfo:
      required:
      - "selfEmployedInfo"
      - "status"
      - "sum"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа на стороне клиента. Не возвращается, если платежный реестр был создан через личный кабинет."
          format: "int32"
        status:
          $ref: "#/components/schemas/PaymentInfoRegistryStatus1"
        selfEmployedInfo:
          required:
          - "firstName"
          - "lastName"
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "Имя (кириллица)."
            lastName:
              type: "string"
              description: "Фамилия (кириллица)."
            middleName:
              type: "string"
              description: "Отчество (кириллица)."
          description: "Данные самозанятого."
        accountNumber:
          type: "string"
          description: "Номер счета самозанятого."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа."
        sum:
          type: "number"
          description: "Сумма платежа."
        revenueTypeCode:
          type: "string"
          description: "Код вида дохода."
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        collectionAmount:
          type: "number"
          description: "Удержанная сумма."
    CreateMeetingResponse:
      required:
      - "meetingId"
      type: "object"
      properties:
        meetingId:
          type: "string"
          description: "Идентификатор назначенной встречи"
    CardInfoSeqResponse:
      required:
      - "limit"
      - "offset"
      - "totalNumber"
      type: "object"
      properties:
        cards:
          type: "array"
          description: "Список карт компании."
          items:
            $ref: "#/components/schemas/CardInfoResponse"
        offset:
          type: "integer"
          description: "Количество пропущенных карт."
          format: "int32"
        limit:
          type: "integer"
          description: "Количество карт на странице."
          format: "int32"
        totalNumber:
          type: "integer"
          description: "Общее количество карт."
          format: "int32"
    CreateJobInfo:
      required:
      - "position"
      type: "object"
      properties:
        position:
          type: "string"
          description: "Должность."
      description: "Информация о работе."
    Phone1:
      required:
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/PhoneType1"
        number:
          type: "string"
          description: "Номер телефона."
    BeneficiaryIpNonresidentRequest:
      required:
      - "addresses"
      - "birthDate"
      - "citizenship"
      - "documents"
      - "firstName"
      - "inn"
      - "lastName"
      - "registrationDate"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. phoneNumber или email обязателен к заполнению."
        email:
          type: "string"
          description: "Электронная почта. phoneNumber или email обязателен к заполнению."
        documents:
          minItems: 1
          type: "array"
          description: "

            Документы. Обязательно — минимум 2 документа. Основной документ нерезидента РФ в большинстве случаев — `FOREIGN_PASSPORT`. Второй документ — любой из документов, подтверждающих право на пребывание в РФ. <a href=\"https://cdn.tbank.ru/static/documents/f829a126-7506-4d38-ae20-c5584668a3a6.pdf\">Подробнее о документах</a>.



            \ Для нерезидентов с гражданством BY достаточно 1 документа с типом `FOREIGN_PASSPORT`\n"
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          minItems: 1
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{15})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    BeneficiaryListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество бенефициаров для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество бенефициаров для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество бенефициаров в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего бенефициаров у компании."
          format: "int32"
        results:
          type: "array"
          description: "Список бенефициаров."
          items:
            $ref: "#/components/schemas/BeneficiaryResponse"
    FieldValidationError1:
      required:
      - "errorDescription"
      - "fieldName"
      type: "object"
      properties:
        fieldName:
          type: "string"
          description: "Название поля с ошибкой."
        errorDescription:
          type: "string"
          description: "Описание ошибки."
    PaymentRegistryStatus1:
      type: "string"
      description: "Статус платежного реестра:<br /><ul><li>DRAFT — готов к отправке;</li><li>ERROR — ошибка создания;</li><li>ACCEPTED — ожидает поступления денежных средств;</li><li>EXECUTED — исполнен;</li><li>PART_EXEC — исполнен частично;</li><li>REJECTED — отклонен банком;</li><li>CANCELLED — отменен;</li><li>DELETED — удален.</li></ul>"
      enum:
      - "DRAFT"
      - "ERROR"
      - "ACCEPTED"
      - "EXECUTED"
      - "PART_EXEC"
      - "REJECTED"
      - "CANCELLED"
      - "DELETED"
    CardType:
      type: "string"
      description: "Тип карты — кредитная или дебетовая."
      enum:
      - "CREDIT"
      - "DEBIT"
    SelfEmployedPaymentRegistryResultSubmitResponse:
      required:
      - "paymentRegistryId"
      - "status"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
        status:
          $ref: "#/components/schemas/SubmissionStatus1"
        error:
          required:
          - "errorCode"
          - "errorMessage"
          type: "object"
          properties:
            errorCode:
              type: "string"
              description: "Код ошибки."
            errorMessage:
              type: "string"
              description: "Описание ошибки."
          description: "Общая ошибка, произошедшая при создании реестра."
        paymentErrors:
          type: "array"
          description: "Платежи внутри реестра, содержащие ошибки."
          items:
            $ref: "#/components/schemas/SubmitPaymentError"
    IdentifyIncomingTransactionRequest:
      type: "object"
      properties:
        amountDistribution:
          type: "array"
          description: "Список распределений по бенефициарам."
          items:
            $ref: "#/components/schemas/AmountDistributionItem"
    DeclarationType:
      type: "string"
      description: "Тип декларации."
      enum:
      - "Primary"
      - "Clarifying"
    ReceiverRequisites:
      required:
      - "accountNumber"
      - "bik"
      - "inn"
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Получатель."
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "

            ИНН получателя. Если платеж выполняется в пользу физ. лица

            и его ИНН неизвестен, передайте `0`.

            Во всех остальных случаях передавайте фактический ИНН получателя.\n"
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП получателя."
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка получателя.



            С 1 января 2021 года при перечислении налоговых платежей указываются новые значения БИК банков получателя.



            <a href=\"https://spmag.ru/articles/polya-platezhnogo-porucheniya-v-2021-godu-obrazec\">Подробнее о полях платежного поручения</a> "
        bankName:
          maxLength: 255
          minLength: 1
          type: "string"
          description: "Наименование банка получателя.



            С 1 января 2021 года при заполнении платежей на перечисление налогов после названия банка указывается название счета казначейства через знак <code>//</code>. "
        corrAccountNumber:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет банка получателя.



            С 1 января 2021 года при уплате налогов указывается номер счета банка получателя, входящий в состав единого казначейского счета (ЕКС). Раньше это поле заполнялось нулями. "
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета. ВАЖНО: Для бюджетных платежей с 01.01.2021 в данном поле нужно указывать новые номера казначейских счетов."
      description: "Реквизиты получателя платежа."
    CreatePaymentRegistryRequest:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        companyAccountNumber:
          type: "string"
          description: "

            Номер счета компании, с которого будут списаны деньги для оплаты реестра (при наличии РКО в Т-Банке).<br />

            Если номер счета не передан, средства спишутся с основного счета компании.

            \        "
        loadDate:
          type: "string"
          description: "Дата отправки реестра"
        registryCreateType:
          $ref: "#/components/schemas/EmployeeRegistryCreateTypeRequest"
        payments:
          type: "array"
          description: "Список платежей внутри реестра."
          items:
            $ref: "#/components/schemas/CreatePaymentInfo"
    PhoneType2:
      type: "string"
      description: "Тип телефона"
      enum:
      - "MOBILE"
      - "HOME"
      - "WORK"
      - "OTHER"
    RegistrationInfo:
      required:
      - "oktmo"
      type: "object"
      properties:
        oktmo:
          type: "string"
          description: "ОКТМО."
        activityCodes:
          type: "array"
          description: "Коды активностей."
          items:
            type: "string"
      description: "Информация, которая использовалась при постановке на учет."
    SelfEmployed:
      required:
      - "bankInfo"
      - "firstName"
      - "id"
      - "lastName"
      - "selfEmployedStatus"
      - "status"
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Идентификатор самозанятого."
          format: "int32"
        status:
          $ref: "#/components/schemas/EmployeeStatus1"
        selfEmployedStatus:
          $ref: "#/components/schemas/SelfEmployedStatus"
        firstName:
          type: "string"
          description: "Имя."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        phones:
          type: "array"
          description: "Номера телефонов."
          items:
            $ref: "#/components/schemas/Phone1"
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document1"
        registrationInfo:
          $ref: "#/components/schemas/RegistrationInfo"
        bankInfo:
          $ref: "#/components/schemas/BankInfo2"
        inn:
          type: "string"
          description: "ИНН самозанятого."
        creationDate:
          type: "string"
          description: "Дата создания самозанятого."
          format: "date-time"
    CobrandAccount:
      required:
      - "cardType"
      type: "object"
      properties:
        cardType:
          $ref: "#/components/schemas/CardType"
        loyaltyId:
          type: "string"
          description: "Номер программы лояльности."
    BankDetailsRequest:
      oneOf:
      - $ref: "#/components/schemas/CardBankDetailsRequest"
      - $ref: "#/components/schemas/RkcBankDetailsRequest"
      - $ref: "#/components/schemas/SbpBankDetailsRequest"
    PendingAddCardRequestResponse:
      required:
      - "addCardRequestId"
      - "addCardUrl"
      - "beneficiaryId"
      - "status"
      - "terminalKey"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        addCardRequestId:
          type: "string"
          description: "Идентификатор запроса на добавление карты."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
        status:
          type: "string"
          description: "Статус запроса на добавление карты:

            * `PENDING` — карта в процессе добавления.

            * `READY` — карта успешно добавлена.

            * `FAILED` — не удалось добавить карту."
          enum:
          - "PENDING"
          - "READY"
          - "FAILED"
        addCardUrl:
          type: "string"
          description: "Ссылка на страницу добавления карты. Чтобы добавить карту, переадресуйте клиента на эту страницу."
    Passport2:
      required:
      - "issueDate"
      - "serialNumber"
      - "unitCode"
      - "unitName"
      type: "object"
      properties:
        serialNumber:
          pattern: "^\\d{4}\\d{6}$"
          type: "string"
          description: "Серия и номер."
        unitName:
          type: "string"
          description: "Кем выдан."
        unitCode:
          pattern: "^\\d{3}-\\d{3}$"
          type: "string"
          description: "Код подразделения."
        issueDate:
          pattern: "^\\d{4}-\\d{2}-\\d{2}$"
          type: "string"
          description: "Дата выдачи в формате `yyyy-mm-dd`."
        citizenship:
          type: "string"
          description: "Гражданство. Код страны в формате ISO 3166-1 alpha-2."
      description: "Паспортные данные."
    FieldValidationError:
      required:
      - "errorDescription"
      - "fieldName"
      type: "object"
      properties:
        fieldName:
          type: "string"
          description: "Название поля, в котором возникла ошибка, на русском языке."
        errorDescription:
          type: "string"
          description: "Описание ошибки."
    AuthenticationFailedResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          maxLength: 50
          type: "string"
          description: "Уникальный идентификатор ошибки."
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
    SelfEmployedReceiptsStatus:
      type: "string"
      description: "Результат регистрации дохода:<br /><ul><li>IN_PROGRESS — доход регистрируется.</li><li>SUCCESS — доход был успешно зарегистрирован, возвращается <code>fnsLink</code>.</li><li>CANCELED — чек был сторнирован, возвращается <code>fnsLink</code>.</li><li>FISCALIZE_FAILED — доход не удалось зарегистрировать в налоговой.</li><li>ERROR — не удалось получить статус наличия зарегистрированного дохода. <br />Возвращается при внутренней ошибке или если доход по платежу еще не регистрировался.</li></ul>"
      enum:
      - "IN_PROGRESS"
      - "SUCCESS"
      - "CANCELED"
      - "FISCALIZE_FAILED"
      - "ERROR"
    DebitAccountsResponse:
      type: "object"
      properties:
        accounts:
          type: "array"
          description: "Cчета."
          items:
            $ref: "#/components/schemas/DebitAccount"
    Operation:
      required:
      - "amount"
      - "cardNumber"
      - "rrn"
      - "transactionDate"
      - "type"
      type: "object"
      properties:
        rrn:
          type: "string"
          description: "Идентификатор банковской транзакции."
        transactionDate:
          type: "string"
          description: "Дата совершения операции в UTC. Формат — `yyyy-MM-ddTHH:mm:ssZ`."
          format: "date-time"
        amount:
          type: "integer"
          description: "Сумма операции в копейках."
          format: "int64"
        cardNumber:
          type: "string"
          description: "Номер карты."
        type:
          $ref: "#/components/schemas/OperationType"
    ReissueVirtualCardResultResponse:
      oneOf:
      - required:
        - "info"
        - "status"
        type: "object"
        properties:
          info:
            $ref: "#/components/schemas/ReissuedVirtualCardInfo"
          status:
            type: "string"
            description: "Статус заявки на перевыпуск виртуальной карты. status = READY - карта успешно перевыпущена, вы можете ей пользоваться"
            enum:
            - "READY"
            - "IN_PROGRESS"
            - "ERROR"
      - required:
        - "status"
        type: "object"
        properties:
          status:
            type: "string"
            description: "Статус заявки на перевыпуск виртуальной карты. status = ERROR - произошла ошибка при обработке заявки, попробуйте отправить новую"
            enum:
            - "READY"
            - "IN_PROGRESS"
            - "ERROR"
      - required:
        - "status"
        type: "object"
        properties:
          status:
            type: "string"
            description: "Статус заявки на перевыпуск виртуальной карты. status = IN_PROGRESS - заявка в работе, проверьте результат через некоторое время (обычно заявка исполняется в течение 5 минут)"
            enum:
            - "READY"
            - "IN_PROGRESS"
            - "ERROR"
    ForeignPassport:
      required:
      - "date"
      - "number"
      - "organization"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
    CreateRegistryPaymentRequest:
      required:
      - "accountNumber"
      - "id"
      - "paymentRegistryId"
      - "purpose"
      type: "object"
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: "string"
          description: "Идентификатор платежа. Должен быть уникален в пределах интеграции."
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра. Реестр должен находиться в статусе <code>ACCEPTED</code>."
          format: "int32"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета для списания."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        documentNumber:
          minimum: 1
          type: "integer"
          description: "Номер распоряжения, определяемый клиентом. Заполняется на усмотрение плательщика. Номер документа — не больше 6 цифр. "
          format: "int32"
        executionOrder:
          maximum: 5
          minimum: 1
          type: "integer"
          description: "Очередность платежа."
          format: "int32"
          deprecated: true
        dueDate:
          type: "string"
          description: "Дата, до которой нужно провести платеж. При неуспешных попытках платежа он будет повторен вплоть до указанной даты. Если дату не передать, платеж не будет повторен в случае неуспешной попытки. Время на проведение платежа не может быть больше 30 дней."
          format: "date-time"
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON. Сохраняются при создании платежа и возвращаются при получении статуса."
    ApplicationResult:
      type: "string"
      description: "Результат по заявке со статусом DONE."
      enum:
      - "REGISTERED"
      - "DEREGISTERED"
      - "REGISTRATION_DENIED"
      - "DEREGISTRATION_DENIED"
      - "DEREGISTRATION_ERROR"
      - "REGISTRATION_ERROR"
    TaxReturnReasonResponse:
      required:
      - "title"
      type: "object"
      properties:
        title:
          type: "string"
          description: "Название группы налоговых вычетов."
        options:
          maxItems: 100
          type: "array"
          description: "Детализация налоговых вычетов в рамках группы."
          items:
            $ref: "#/components/schemas/OptionResponse"
    BeneficiaryResponse:
      oneOf:
      - $ref: "#/components/schemas/BeneficiaryFlNonresidentResponse"
      - $ref: "#/components/schemas/BeneficiaryFlResidentResponse"
      - $ref: "#/components/schemas/BeneficiaryIpNonresidentResponse"
      - $ref: "#/components/schemas/BeneficiaryIpResidentResponse"
      - $ref: "#/components/schemas/BeneficiaryLiteContactResponse"
      - $ref: "#/components/schemas/BeneficiaryUlNonresidentResponse"
      - $ref: "#/components/schemas/BeneficiaryUlResidentResponse"
    Info:
      required:
      - "oktmo"
      - "registeredAt"
      type: "object"
      properties:
        registeredAt:
          type: "string"
          description: "Дата и время последней постановки на учет в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        activityCodes:
          type: "array"
          description: "Виды деятельности, которые самозанятый указал при регистрации."
          items:
            type: "string"
        oktmo:
          type: "string"
          description: "Регион деятельности самозанятого."
        permissions:
          type: "array"
          description: "Список прав, которые самозанятый выдал Т-Банку."
          items:
            $ref: "#/components/schemas/PermissionTypeEnum"
    CreationSelfEmployedStatus:
      type: "string"
      description: "

        Статус создания:


        <ul><li><code>QUEUED</code> — самозанятый стоит в очереди на создание;</li>

        <li><code>CREATED</code> — самозанятый создан;</li>

        <li><code>ERROR</code> — самозанятый не был создан. Ошибки перечислены в параметре <b>errors</b>.</li></ul>

        \            "
      enum:
      - "CREATED"
      - "ERROR"
      - "QUEUED"
    CreateAddress:
      required:
      - "postalCode"
      - "state"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/AddressType"
        country:
          type: "string"
          description: "Страна."
        postalCode:
          type: "string"
          description: "Индекс."
        state:
          type: "string"
          description: "Регион."
        city:
          type: "string"
          description: "Город."
        district:
          type: "string"
          description: "Район."
        settlement:
          type: "string"
          description: "Населенный пункт."
        street:
          type: "string"
          description: "Улица."
        house:
          type: "string"
          description: "Дом."
        building:
          type: "string"
          description: "Здание."
        construction:
          type: "string"
          description: "Корпус."
        apartment:
          type: "string"
          description: "Квартира."
    SelfEmployedStatus:
      type: "string"
      description: "Статус самозанятости:<br /><ul><li><code>ACTIVE</code> — получатель самозанятый, привязан к Т-Банку. Доступны выплаты с чеками.</li><li><code>NOT_ACTIVE</code> — получатель не самозанятый или не привязан к Т-Банку. Выплаты с чеками недоступны.</li><li><code>REGISTRATION_WAIT</code> — получатель ожидает постановки на учет в качестве самозанятого. Статус возможен в случае, если в методе создания самозанятого было передано значение <code>registrationInfo</code>.</li><li><code>NOT_CONFIRM</code> — статус самозанятости неизвестен.</li></ul>"
      enum:
      - "REGISTRATION_WAIT"
      - "NOT_CONFIRM"
      - "NOT_ACTIVE"
      - "ACTIVE"
    FromForeignAgencyReceiptResponse:
      required:
      - "customerOrganization"
      - "incomeReceivedAt"
      - "incomeStatedAt"
      - "incomeType"
      - "receiptId"
      - "status"
      - "totalAmount"
      type: "object"
      properties:
        receiptId:
          type: "string"
          description: "Идентификатор чека."
          format: "uuid"
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        incomeStatedAt:
          type: "string"
          description: "Дата и время заявления дохода в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        status:
          $ref: "#/components/schemas/ReceiptStatus"
        totalAmount:
          type: "number"
          description: "Сумма заявленного дохода."
        services:
          type: "array"
          description: "Массив объектов с информацией об оказанных услугах."
          items:
            $ref: "#/components/schemas/ReceiptService"
        operations:
          type: "array"
          description: "Массив объектов с информацией по операциям, произведенным с чеком."
          items:
            $ref: "#/components/schemas/ReceiptOperation"
        customerOrganization:
          type: "string"
          description: "Название компании-заказчика, которой самозанятый оказывал услуги."
        tinkoffLink:
          type: "string"
          description: "Ссылка на временный чек в случае недоступности сервисов ФНС."
        fnsLink:
          type: "string"
          description: "Ссылка на чек в случае успешной регистрации в ФНС."
    TaxPaymentParameters:
      required:
      - "docDate"
      - "docNumber"
      - "evidence"
      - "kbk"
      - "oktmo"
      - "payerStatus"
      - "period"
      type: "object"
      properties:
        payerStatus:
          pattern: "\\d{2}"
          type: "string"
          description: "Статус составителя расчетного документа. Поле платежки 101.



            При оплате налога за третьих лиц указывается налоговый статус человека, за которого происходит оплата. Может принимать следующие значения:

            <ul>

            <li> <code>01</code> — налогоплательщик (плательщик сборов) — юрлицо; </li>

            <li> <code>02</code> — налоговый агент; </li>

            <li> <code>08</code> — плательщик-юрлицо (ИП), осуществляющий уплату страховых взносов и иных платежей в бюджетную систему РФ; </li>

            <li> <code>13</code> — физическое лицо, уплачивающее налоги, сборы за совершение налоговыми органами юридически значимых действий, страховые взносы и иные платежи, администрируемые налоговыми органами; </li>

            <li> <code>14</code> — указывается плательщиком, который осуществляет транзакции в пользу физлиц; </li>

            <li> <code>19</code> — организации и их филиалы, перечисляющие средства, удержанные из заработной платы (дохода) должника — физлица в счет погашения задолженности по платежам в бюджет на основании исполнительного документа; </li>

            <li> <code>24</code> — плательщик-физлицо, осуществляющий уплату страховых взносов и иных платежей в бюджетную систему РФ. </li>

            </ul>

            <a href=\"https://www.buhonline.ru/pub/beginner/2019/10/15119_status-platelshhika-v-platezhke-2021\">Статус плательщика в платежном поручении в 2024 году</a>

            \      "
        kbk:
          pattern: "\\d{20}|0"
          type: "string"
          description: "Код бюджетной классификации. Поле платежки 104. <a href=\"https://buhguru.com/spravka-info/kbk-2021.html\">Подробнее</a>."
        oktmo:
          pattern: "\\d{8}|\\d{11}|0"
          type: "string"
          description: "Код ОКТМО территории, на которой мобилизуются денежные средства от уплаты налога, сбора и иного платежа. Поле платежки 105.

            <a href=\"https://nalog-nalog.ru/uplata_nalogov/rekvizity_dlya_uplaty_nalogov_vznosov/oktmo_v_platezhnom_poruchenii_nyuansy\">Подробнее</a>."
        evidence:
          pattern: "[A-Za-zА-Яа-я]{2}|00|0"
          type: "string"
          description: "Основание налогового платежа. Поле платежки 106. Может принимать следующие значения:

            <ul>

            <li> <code>ТП</code> — платежи текущего года; </li>

            <li> <code>ЗД</code> — добровольное погашение задолженности по истекшим налоговым, расчетным (отчетным) периодам при отсутствии требования налогового органа об уплате налогов (сборов); </li>

            <li> <code>РС</code> — погашение рассроченной задолженности; </li>

            <li> <code>ОТ</code> — погашение отсроченной задолженности; </li>

            <li> <code>РТ</code> — погашение реструктурируемой задолженности; </li>

            <li> <code>ПБ</code> — погашение должником задолженности в ходе процедур, применяемых в деле о банкротстве; </li>

            <li> <code>ИН</code> — погашение инвестиционного налогового кредита; </li>

            <li> <code>ТЛ</code> — погашение учредителем (участником) должника или собственником имущества должника — унитарного предприятия или третьим лицом задолженности в ходе процедур, применяемых в деле о банкротстве; </li>

            <li> <code>ЗТ</code> — погашение текущей задолженности в ходе процедур, применяемых в деле о банкротстве; </li>

            <li> <code>00</code> — иные случаи (для таможенных платежей); </li>

            <li> <code>0</code> — при незнании основания платежа. </li>

            </ul>

            <a href=\"https://www.26-2.ru/art/356241-polya-106-platejnyh-1-oktyabrya-2021\">Новые правила заполнения поля 106 платежных поручений с 1 октября 2021 года (26-2.ru)</a>

            \      "
        period:
          pattern: "^(0)$|^(\\d{8})$|^(.{2}\\.\\d{2}\\.\\d{4})$"
          type: "string"
          description: "Налоговый период. Поле платежки 107.

            Формат — ДД.ММ.ГГГГ, первые два символа могут быть буквами или цифрами. В поле можно передать `0`.

            <a href=\"https://www.nalog.ru/rn40/news/tax_doc_news/6181298/\">Подробнее</a>."
        docNumber:
          pattern: "[A-Za-zА-Яа-я]{2}\\d{13}|\\d{2};\\d{1,20}|[A-Za-zА-Яа-я]{2}|0{1}"
          type: "string"
          description: "Номер налогового документа. Поле платежки 108. [Как заполнить поля платежного поручения без ошибок](https://azbuha.ru/uchet-denezhnyx-sredstv/kak-zapolnit-polya-platezhnogo-porucheniya/#:~:text=%D0%92%20%D0%BF%D0%BE%D0%BB%D0%B5%20108%20%D1%81%D1%82%D0%B0%D0%B2%D0%B8%D1%82%D1%81%D1%8F%20%C2%AB0%C2%BB%2C,%D0%9F%D0%BE%D0%BB%D0%B5%20109%20%C2%AB%D0%94%D0%B0%D1%82%D0%B0%20%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%20%D0%BF%D0%BB%D0%B0%D1%82%D0%B5%D0%B6%D0%B0%C2%BB)."
        docDate:
          pattern: "\\d{2}\\.\\d{2}\\.\\d{4}|0"
          type: "string"
          description: "Дата налогового документа. Поле платежки 109. Формат — ДД.ММ.ГГГГ или 0.

            <a href=\"https://www.nalog.ru/rn40/news/tax_doc_news/4604512/\">Подробнее</a>."
        thirdParty:
          $ref: "#/components/schemas/TaxThirdParty"
      description: "Реквизиты для уплаты налогов и иных бюджетных платежей."
    BeneficiaryFlResidentResponse:
      required:
      - "beneficiaryId"
      - "birthDate"
      - "firstName"
      - "isSelfEmployed"
      - "lastName"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        isSelfEmployed:
          type: "boolean"
          description: "Самозанятый."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта почта."
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
        snils:
          pattern: "^(\\d{11})$"
          type: "string"
          description: "СНИЛС."
    EmployeesResponse:
      required:
      - "firstName"
      - "lastName"
      - "number"
      - "status"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Номер сотрудника, переданный клиентом при создании."
          format: "int32"
        employeeId:
          type: "integer"
          description: "Идентификатор сотрудника в зарплатном проекте. Может не прийти, если при создании сотрудника возникли ошибки."
          format: "int32"
        firstName:
          type: "string"
          description: "Имя."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество."
        status:
          $ref: "#/components/schemas/CreationEmployedStatus"
        errors:
          type: "array"
          description: "Список ошибок."
          items:
            required:
            - "errorDescription"
            - "fieldName"
            type: "object"
            properties:
              fieldName:
                type: "string"
                description: "Название поля, в котором возникла ошибка, на русском языке."
              errorDescription:
                type: "string"
                description: "Описание ошибки."
    SelfEmployedIncomeType:
      type: "string"
      description: "

        Может принимать одно из двух значений:

        <ul>

        <li>FROM_LEGAL_ENTITY — самозанятые получают доход от юридического лица;</li>

        <li>FROM_INDIVIDUAL — самозанятые получают доход от физического лица.</li>

        </ul>

        Значение по умолчанию — FROM_LEGAL_ENTITY.\n"
      enum:
      - "FROM_LEGAL_ENTITY"
      - "FROM_INDIVIDUAL"
    Phone:
      required:
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/PhoneType"
        number:
          type: "string"
          description: "Номер телефона."
    InProgress:
      required:
      - "beneficiaryId"
      - "status"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        status:
          type: "string"
          description: "Статус проверки в финансовом мониторинге."
          enum:
          - "IN_PROGRESS"
          - "READY"
    BankDetailsResponse:
      oneOf:
      - $ref: "#/components/schemas/CardBankDetailsResponse"
      - $ref: "#/components/schemas/RkcBankDetailsResponse"
      - $ref: "#/components/schemas/SbpBankDetailsResponse"
    SubmissionStatus:
      type: "string"
      description: "Статус подписания платежного реестра."
      enum:
      - "ACCEPTED"
      - "ERROR"
      - "IN_PROGRESS"
    FailedAddCardRequestResponse:
      required:
      - "addCardRequestId"
      - "beneficiaryId"
      - "errorMessage"
      - "status"
      - "terminalKey"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        addCardRequestId:
          type: "string"
          description: "Идентификатор запроса на добавление карты."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
        status:
          type: "string"
          description: "Статус запроса на добавление карты:

            * `PENDING` — карта в процессе добавления.

            * `READY` — карта успешно добавлена.

            * `FAILED` — не удалось добавить карту."
          enum:
          - "PENDING"
          - "READY"
          - "FAILED"
        errorMessage:
          type: "string"
          description: "

            Краткое сообщение об ошибке с кодом в формате `{Description} [{Code}]`.

            <a href=\"https://www.tbank.ru/kassa/dev/payments/#tag/Kody-oshibok\">Список кодов ошибок с описанием</a>.\n"
    AuthorizationFailedResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          maxLength: 50
          type: "string"
          description: "Уникальный идентификатор ошибки."
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
    CardLimitsResponse:
      required:
      - "cashLimit"
      - "spendLimit"
      - "ucid"
      type: "object"
      properties:
        ucid:
          type: "integer"
          description: "Уникальный идентификатор карты."
          format: "int64"
        spendLimit:
          $ref: "#/components/schemas/SpendLimit"
        cashLimit:
          $ref: "#/components/schemas/CashLimit"
    CreateDocumentType:
      type: "string"
      description: "Тип документа."
      enum:
      - "Паспорт"
      - "Иностранный паспорт"
      - "Загр. паспорт иностранного гр."
      - "Служебный/официальный паспорт"
      - "Дипломатический паспорт"
      - "Миграционная карта"
      - "Разр. на временное проживание"
      - "Виза"
      - "Вид на жительство"
    CreateSelfEmployedRegistrationInfo:
      required:
      - "activityCodes"
      - "oktmo"
      type: "object"
      properties:
        oktmo:
          type: "string"
          description: "ОКТМО."
        activityCodes:
          type: "array"
          description: "Коды активностей."
          items:
            type: "string"
      description: "Если значение передано, Т-Банк поставит исполнителя на учет как самозанятого. Функция доступна клиентам, которые получили от исполнителей согласие на регистрацию."
    RetryPaymentResponse:
      required:
      - "retryPaymentId"
      type: "object"
      properties:
        retryPaymentId:
          type: "string"
          description: "Идентификатор повторенного платежа."
          format: "uuid"
    TacqTerminalsResponse:
      required:
      - "first"
      - "last"
      - "totalElements"
      - "totalPages"
      type: "object"
      properties:
        totalPages:
          type: "integer"
          description: "Общее количество страниц с данными по запросу клиента."
          format: "int64"
        totalElements:
          type: "integer"
          description: "Общее количество элементов (терминалов) на всех страницах."
          format: "int64"
        first:
          type: "boolean"
          description: "Флаг первой страницы."
        last:
          type: "boolean"
          description: "Флаг последней страницы."
        terminals:
          type: "array"
          description: "Страница данных с терминалами."
          items:
            $ref: "#/components/schemas/Terminal"
    TaxPaymentResponse:
      required:
      - "accountNumber"
      - "amount"
      - "bankDetails"
      - "beneficiaryId"
      - "paymentId"
      - "purpose"
      - "status"
      - "tax"
      - "type"
      - "uin"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип платежа:

            * `REGULAR` — обычный.

            * `TAX` — налоговый."
          enum:
          - "REGULAR"
          - "TAX"
        paymentId:
          type: "string"
          description: "Идентификатор платежа."
          format: "uuid"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        bankDetails:
          $ref: "#/components/schemas/BankDetails"
        amount:
          type: "number"
          description: "Сумма платежа."
        status:
          type: "string"
          description: "Статус платежа\


            ![payment-statuses](https://business.t-static.ru/static/images/opensme/nominal-accounts/payment-statuses.svg)

            * `PENDING` — Ожидает обработки.

            * `IN_PROGRESS` — В процессе.

            * `FAILED` — Неуспешен.

            * `CANCELLED` — Отменен.

            * `SUCCEEDED` — Успешно завершен."
          enum:
          - "PENDING"
          - "IN_PROGRESS"
          - "FAILED"
          - "CANCELLED"
          - "SUCCEEDED"
        errorMessage:
          type: "string"
          description: "Описание ошибки в случае неуспешности платежа."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        uin:
          pattern: "0|[А-Яа-яA-Za-z0-9]{4}|[А-ЯA-Z0-9]{15}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{20}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{25}"
          type: "string"
          description: "Уникальный идентификатор платежа."
        tax:
          $ref: "#/components/schemas/TaxPaymentParameters"
        operationId:
          type: "string"
          description: "Уникальный ID операции."
          format: "uuid"
    PaymentRegistrySubmitResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    OperationType:
      type: "string"
      description: "Тип операции."
      enum:
      - "Debit"
      - "Credit"
      - "Other"
    RkcBankDetailsResponse:
      required:
      - "accountNumber"
      - "bankDetailsId"
      - "bankName"
      - "beneficiaryId"
      - "bik"
      - "corrAccountNumber"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка получателя.



            С 1 января 2021 года при перечислении налоговых платежей указываются новые значения БИК банков получателя.



            <a href=\"https://spmag.ru/articles/polya-platezhnogo-porucheniya-v-2021-godu-obrazec\">Подробнее о полях платежного поручения</a> "
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП получателя. Укажите 0, чтобы не заполнять"
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН. Укажите 0, чтобы не заполнять."
        name:
          maxLength: 160
          type: "string"
          description: "Наименование получателя."
        bankName:
          maxLength: 160
          minLength: 1
          type: "string"
          description: "Наименование банка получателя."
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета получателя."
        corrAccountNumber:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет банка получателя."
    Document2:
      description: "Документ бенефициара:"
      oneOf:
      - $ref: "#/components/schemas/Contract"
      - $ref: "#/components/schemas/ContractGPD"
      - $ref: "#/components/schemas/DiplomaticPassport"
      - $ref: "#/components/schemas/ForeignPassport"
      - $ref: "#/components/schemas/ForeignPassportOfForeignCitizens"
      - $ref: "#/components/schemas/MigrationCard"
      - $ref: "#/components/schemas/OfficialPassport"
      - $ref: "#/components/schemas/Passport"
      - $ref: "#/components/schemas/Patent"
      - $ref: "#/components/schemas/ResidencePermit"
      - $ref: "#/components/schemas/TemporaryResidencePermit"
      - $ref: "#/components/schemas/Visa"
    PaymentResponse:
      oneOf:
      - $ref: "#/components/schemas/RegularPaymentResponse"
      - $ref: "#/components/schemas/TaxPaymentResponse"
    CreatePaymentRequest:
      required:
      - "amount"
      - "from"
      - "id"
      - "purpose"
      - "to"
      type: "object"
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: "string"
          description: "Идентификатор платежа. Должен быть уникален в пределах интеграции."
        from:
          $ref: "#/components/schemas/PayerRequisites"
        to:
          $ref: "#/components/schemas/ReceiverRequisites"
        uin:
          pattern: "0|[А-Яа-яA-Za-z0-9]{4}|[А-ЯA-Z0-9]{15}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{20}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{25}"
          type: "string"
          description: "Уникальный идентификатор платежа. Поле платежки 22.

            Обязательное поле для налоговых платежей.

            <a href=\"https://www.glavbukh.ru/art/98739-uin-v-platejnom-poruchenii-2021\">Подробнее</a>."
        tax:
          $ref: "#/components/schemas/TaxPaymentParameters"
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа.



            При заполнении назначения платежа для налоговых платежей за третьих лиц следуйте шаблону:

            ИНН того, кто перечисляет / КПП того, кто перечисляет / наименование лица, за которого происходит оплата / назначение платежа.

            <a href=\"https://glavkniga.ru/situations/s509587\">Подробнее</a>."
        documentNumber:
          minimum: 1
          type: "integer"
          description: "Номер распоряжения, определяемый клиентом. Заполняется на усмотрение плательщика. Номер документа — не больше 6 цифр. "
          format: "int32"
        executionOrder:
          maximum: 5
          minimum: 1
          type: "integer"
          description: "Очередность платежа. По умолчанию — <code>5</code>.



            <code>1</code> — алиментные удержания из заработной платы, компенсации вреда жизни и здоровью. Основания для уплаты — алиментный договор, заверенный у нотариуса, судебный приказ, исполнительный лист от судебных приставов.


            <code>2</code>  — погашение задолженностей по зарплатам сотрудникам, выплаты выходных пособий и авторских вознаграждений. Основание для уплаты — исполнительный лист, судебный приказ.


            <code>3</code> — выплаты зарплат сотрудникам по трудовым соглашениям, принудительная уплата налогов и отчислений во внебюджетные фонды. Основание для уплаты — расчетная документация, платежные требования и инкассовые поручения от ИФНС, ФСС, ПФР.


            <code>4</code> — принудительные выплаты, которые не вошли в первую, вторую и третью очередь, например задолженности по договорам, штрафы, неустойки, коммунальные платежи. Основание для уплаты — исполнительные документы, требования, постановления, приказы, судебные решения.


            <code>5</code> — все остальные, не вошедшие в первую, вторую, третью и четвертую категории — например, добровольная уплата долгов, пеней, штрафов.


            <a href=\"https://www.consultant.ru/document/cons_doc_LAW_9027/04773c69503b27588ace9c3e2c7eda3904ec7282/\">Подробнее</a>"
          format: "int32"
        amount:
          type: "number"
          description: "Сумма платежа в рублях."
        dueDate:
          type: "string"
          description: "Дата, до которой нужно провести платеж. При неуспешных попытках платежа он будет повторен вплоть до указанной даты. Если дату не передать, платеж не будет повторен в случае неуспешной попытки. Время на проведение платежа не может быть больше 30 дней."
          format: "date-time"
        revenueTypeCode:
          type: "string"
          description: "Код вида выплаты. <a href=\"https://www.buhsoft.ru/article/4085-novye-kody-v-platejkah-s-1-maya-2022-goda\">Подробнее</a>."
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        collectionAmount:
          type: "number"
          description: "Удержанная сумма из заработной платы и иных доходов работника в рублях. <a href=\"https://www.b-kontur.ru/enquiry/95\">Подробнее</a>."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON. Сохраняются при создании платежа и возвращаются при получении статуса."
    PaymentRegistryResponse:
      required:
      - "paymentsCount"
      - "status"
      - "totalSum"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/PaymentRegistryStatus"
        companyAccountNumber:
          type: "string"
          description: "

            Номер счета компании, с которого будут списаны деньги для оплаты реестра — при наличии РКО в Т-Банке.<br />

            Если номер счета не передан, средства спишутся с основного счета компании.

            \        "
        loadDate:
          type: "string"
          description: "Дата отправки реестра."
        paymentsCount:
          type: "integer"
          description: "Количество платежей в реестре."
          format: "int32"
        totalSum:
          type: "number"
          description: "Общая сумма платежей в реестре."
        payments:
          type: "array"
          description: "Список платежей внутри реестра."
          items:
            $ref: "#/components/schemas/PaymentInfo"
    CreatePaymentDraftResponse:
      required:
      - "documentId"
      type: "object"
      properties:
        documentId:
          type: "string"
          description: "Идентификатор созданного черновика."
          format: "uuid"
    BeneficiaryScoringInfo:
      oneOf:
      - $ref: "#/components/schemas/InProgress"
      - $ref: "#/components/schemas/Ready"
    Empty:
      type: "object"
    OptionResponse:
      required:
      - "title"
      type: "object"
      properties:
        title:
          type: "string"
          description: "Название детализации."
        documents:
          maxItems: 100
          type: "array"
          description: "Документы, приложенные к анкете."
          items:
            $ref: "#/components/schemas/DocumentResponse"
    BalanceListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество балансов для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество балансов для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество балансов в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего балансов, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список балансов."
          items:
            $ref: "#/components/schemas/BalanceListItem"
    CardStatus:
      type: "string"
      description: "

        Статус карты:

        <ul>

        <li>`NORM` — карта активна;</li>

        <li>`CLOSED` — карта неактивна;</li>

        <li>`BLOCKED` — карта заблокирована.</li>

        </ul>"
      enum:
      - "NORM"
      - "CLOSED"
      - "BLOCKED"
    CreatePaymentInfo:
      required:
      - "accountNumber"
      - "employeeInfo"
      - "number"
      - "paymentPurpose"
      - "sum"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа на стороне клиента."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа данному сотруднику в рамках зарплатного реестра."
        employeeInfo:
          required:
          - "firstName"
          - "lastName"
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "Имя (кириллица)."
            lastName:
              type: "string"
              description: "Фамилия (кириллица)."
            middleName:
              type: "string"
              description: "Отчество (кириллица)."
            employeeId:
              type: "integer"
              description: "Идентификатор сотрудника. Возвращается для реестров в статусе <code>DRAFT</code>, <code>ACCEPTED</code>, <code>PART_EXEC</code> или <code>EXECUTED</code>."
              format: "int32"
          description: "Данные сотрудника, находящегося в статусах `ACTIVE` или `FIRED`."
        sum:
          type: "number"
          description: "Сумма платежа."
        periodStart:
          type: "string"
          description: "Начало периода платежа."
          format: "date"
        periodEnd:
          type: "string"
          description: "Окончание периода платежа."
          format: "date"
        revenueTypeCode:
          type: "string"
          description: "Код вида дохода."
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        collectionAmount:
          type: "number"
          description: "Удержанная сумма."
    CreateApplicationRequest:
      required:
      - "accountNumber"
      - "cardNetwork"
      - "employeeIdentificationApplicationId"
      type: "object"
      properties:
        employeeIdentificationApplicationId:
          type: "string"
          description: "ID заявки на удаленную идентификацию сотрудника."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер счета, к которому выпускается карта."
        cardNetwork:
          $ref: "#/components/schemas/CardNetwork"
    EmployeeStatus:
      type: "string"
      description: "Статус сотрудника:<br /><ul><li>ERROR — ошибка создания анкеты сотрудника;</li><li>DRAFT — анкета сотрудника готова к отправке;</li><li>PROCESSING_ERROR — ошибка отправки анкеты — обратитесь к персональному менеджеру для уточнения причины;</li><li>PROCESSING — обрабатываем анкету сотрудника;</li><li>REJECTED — отказ в открытии счета (конечный статус добавления);</li><li>MTNG_WAIT — сотрудник ожидает назначения встречи для доставки карты; </li><li>MTNG_SCHD — встреча для доставки карты сотруднику назначена;</li><li>MTNG_CANC — встреча для доставки карты сотруднику отменена;</li><li>ACTIVE — сотрудник добавлен (конечный статус добавления);</li><li>FIRED — сотрудник уволен;</li><li>DELETED — сотрудник удален из зарплатного проекта.</li></ul>"
      enum:
      - "PROCESSING"
      - "DRAFT"
      - "PROCESSING_ERROR"
      - "ACTIVE"
      - "ERROR"
      - "REJECTED"
      - "FIRED"
      - "DELETED"
      - "MTNG_SCHD"
      - "MTNG_WAIT"
      - "MTNG_CANC"
    DeponentListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество депонентов для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество депонентов для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество депонентов в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего депонентов, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список депонентов этапа сделки."
          items:
            $ref: "#/components/schemas/DeponentResponse"
    AccountInfo3:
      required:
      - "accountNumber"
      - "accountType"
      - "balance"
      - "bankBik"
      - "createdOn"
      - "currency"
      - "mainFlag"
      - "name"
      - "status"
      - "tariffCode"
      - "tariffName"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Расчетный счет организации."
        name:
          type: "string"
          description: "Наименование счета."
        status:
          type: "string"
          description: "Статус счета. Возможные значения: <ul><li><code>BLLE</code> — первичная блокировка договора ЮЛ. Находится в этом статусе до момента активации (переход в NORM) или закрытия (переход в CLSC/CLSB).</li><li><code>ARSS</code> — частичный арест.</li><li><code>ARSF</code> — полный арест.</li><li><code>ARMF</code> — полная блокировка.</li><li><code>CAIN</code> — картотека.</li><li><code>CLBL</code> — в процессе закрытия.</li><li><code>CLSC</code> — закрыт по инициативе клиента.</li><li><code>CLSB</code> — закрыт по инициативе банка.</li></ul>"
        tariffName:
          type: "string"
          description: "Пользовательское наименование тарифа."
        tariffCode:
          type: "string"
          description: "Код тарифа."
        currency:
          type: "string"
          description: "Код валюты счета по ОКВ (цифрами)."
        createdOn:
          type: "string"
          description: "Дата открытия счета."
          format: "date"
        mainFlag:
          type: "string"
          description: "Флаг основного счета: <ul><li>Y.</li><li>N.</li></ul>"
        bankBik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка."
        accountType:
          type: "string"
          description: "Тип счета. Список вариантов значений может пополняться.

            * `Current` — расчетный счет.

            * `Tax` — счет Т-Бухгалтерии.

            * `Tender` — специальный счет для участия в госзакупках.

            * `Overnight` — счет Overnight.

            * `Trust` — специальный счет доверительного управляющего ПИФ.

            * `Broker` — специальный брокерский счет.

            * `BankPaymentAgent` — специальный счет банковского платежного агента.

            * `PaymentAgent` — счет платежного агента.

            * `Nominal` — номинальный счет.

            * `NominalIpo` — номинальный счет оператора инвестиционной платформы.

            * `TrustManagementSmp` — специальный счет доверительного управления.

            * `Cashbox` — бизнес-копилка.

            * `Invest` — инвестиционный счет."
        activationDate:
          type: "string"
          description: "Дата активации."
          format: "date"
        balance:
          $ref: "#/components/schemas/Balance1"
        transitAccount:
          $ref: "#/components/schemas/TransitAccount"
        brokerCurrencyBalance:
          type: "array"
          description: "Информация о брокерских счетах. Актуально для инвестиционных счетов."
          items:
            $ref: "#/components/schemas/PositionInfo"
    PaymentRegistryStatus:
      type: "string"
      description: "Статус платежного реестра:<br /><ul><li>DRAFT — готов к отправке;</li><li>ERROR — ошибка создания платежного реестра;</li><li>ACCEPTED — ожидает поступления денежных средств;</li><li>EXECUTED — исполнен;</li><li>PART_EXEC — исполнен частично;</li><li>REJECTED — отклонен банком;</li><li>CANCELLED — отменен;</li><li>DELETED — удален.</li></ul>"
      enum:
      - "DRAFT"
      - "ERROR"
      - "ACCEPTED"
      - "EXECUTED"
      - "PART_EXEC"
      - "REJECTED"
      - "CANCELLED"
      - "DELETED"
    AgreementNumberRequisites:
      required:
      - "agreementNumber"
      type: "object"
      properties:
        agreementNumber:
          type: "string"
          description: "Номер договора."
      description: "Номер договора получателя."
    PaymentRegistrySubmitRequest:
      required:
      - "correlationId"
      - "paymentRegistryId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
    ReissuedVirtualCardInfo:
      required:
      - "cardBin"
      - "cardLastFourDigits"
      - "newUcid"
      - "oldUcid"
      type: "object"
      properties:
        oldUcid:
          type: "integer"
          description: "Уникальный идентификатор старой карты"
          format: "int64"
        newUcid:
          type: "integer"
          description: "Уникальный идентификатор новой карты"
          format: "int64"
        cardBin:
          maxLength: 6
          minLength: 6
          pattern: "\\d{6}"
          type: "string"
          description: "Первые 6 цифр номера новой карты (BIN карты)"
        cardLastFourDigits:
          maxLength: 4
          minLength: 4
          pattern: "\\d{4}"
          type: "string"
          description: "Последние 4 цифры номера новой карты"
      description: "Данные перевыпущенной карты. Присутствует в ответе, если status = READY"
    CreateEmployeesRequest:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        employees:
          type: "array"
          description: "Список сотрудников на создание."
          items:
            $ref: "#/components/schemas/EmployeeCreateData"
    DocumentType:
      type: "string"
      description: "Тип документа."
      enum:
      - "Паспорт"
      - "Иностранный паспорт"
      - "Загр. паспорт иностранного гр."
      - "Служебный/официальный паспорт"
      - "Дипломатический паспорт"
      - "Миграционная карта"
      - "Разр. на временное проживание"
      - "Виза"
      - "Вид на жительство"
    Attachment:
      required:
      - "id"
      - "type"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Идентификатор документа."
        type:
          type: "string"
          description: "Тип документа."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON."
    CreateLegalEntityReceiptRequest:
      required:
      - "customerInn"
      - "customerOrganization"
      - "incomeType"
      type: "object"
      properties:
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход:

            * `FROM_INDIVIDUAL` — от физического лица;

            * `FROM_LEGAL_ENTITY` — от компании или ИП;

            * `FROM_FOREIGN_AGENCY` — от иностранной компании."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Ожидается в ISO-8601 формате <b>yyyy-MM-ddTHH:mm:ss<.fff><TZDSuffix></b>, где:

            * HH — часы в 24-часовой нотации. Допускаются значения от 00 до 23.

            * .fff — опциональная часть, содержащая доли секунд. Допускается не больше трех знаков.

            * TZDSuffix — опциональный суффикс. Допускается значение <code>Z</code> или <code>+00:00</code>."
          format: "date-time"
        services:
          type: "array"
          description: "Список услуг."
          items:
            $ref: "#/components/schemas/ReceiptService"
        customerInn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН организации или ИП, которому самозанятый оказывал услуги."
        customerOrganization:
          type: "string"
          description: "Название организации или ИП, которому самозанятый оказывал услуги."
    Application:
      required:
      - "changedAt"
      - "status"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ApplicationStatus"
        subStatus:
          $ref: "#/components/schemas/ApplicationSubStatus"
        changedAt:
          type: "string"
          description: "Дата и время последнего изменения данных по заявке в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        result:
          $ref: "#/components/schemas/ApplicationResult"
        reason:
          type: "string"
          description: "Причина, по которой рассмотрение заявки не завершилось успехом. Может быть у заявок в статусе DONE."
        reasonDescription:
          type: "string"
          description: "Более подробное описание причины неуспеха. Может быть у заявок в статусе DONE."
      description: "Объект с информацией о последней заявке на изменение самозанятости в Т-Банке. Изначально имеет статус IN_PROGRESS и переходит в DONE при завершении процесса (как успешном, так и с ошибкой). Если от пользователя требуется выдать права в ЛК ФНС, то будет иметь subStatus PERMISSION_REQUESTED. После создания новой заявки — предыдущая исчезает. Нельзя завести новую заявку, если текущая IN_PROGRESS."
    Recipient:
      required:
      - "inn"
      type: "object"
      properties:
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН получателя."
        name:
          type: "string"
          description: "Наименование получателя."
        account:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Счет получателя."
      description: "Информация о получателе."
    CreateRegularPaymentRequest:
      required:
      - "accountNumber"
      - "amount"
      - "beneficiaryId"
      - "purpose"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип платежа:

            * `REGULAR` — обычный.

            * `TAX` — налоговый."
          enum:
          - "REGULAR"
          - "TAX"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма платежа."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
    BankDetails:
      oneOf:
      - $ref: "#/components/schemas/CardBankDetails"
      - $ref: "#/components/schemas/RkcBankDetails"
      - $ref: "#/components/schemas/SbpBankDetails"
    TacqOperationResponse:
      type: "object"
      properties:
        lastTransactionDate:
          type: "string"
          description: "Последняя дата совершения транзакции для выборки в UTC. Формат — `yyyy-MM-ddTHH:mm:ssZ`."
          format: "date-time"
        operations:
          type: "array"
          description: "Список операций по терминалу."
          items:
            $ref: "#/components/schemas/Operation"
    SelfEmployedReceiptsRequestStatus:
      type: "string"
      description: "Статус запроса на получение чеков."
      enum:
      - "FINISHED"
      - "IN_PROGRESS"
      - "ERROR"
    AddressType:
      type: "string"
      description: "Тип адреса."
      enum:
      - "Жительства"
      - "Регистрации"
      - "Работы"
    ListOfArrest:
      required:
      - "sum"
      type: "object"
      properties:
        sum:
          type: "number"
          description: "Список блокировок."
        values:
          type: "array"
          items:
            $ref: "#/components/schemas/Arrest"
      description: "Данные о блокировках."
    JobInfo:
      type: "object"
      properties:
        position:
          type: "string"
          description: "Должность."
      description: "Информация о работе."
    PaymentInfoRegistryStatus:
      type: "string"
      description: "Статус платежа:<br /><ul><li>WAITING — ожидает отправки реестра;</li><li>ACCEPTED — ожидает исполнения реестра;</li><li>EXECUTED — исполнен;</li><li>REJECTED — отклонен банком;</li><li>CANCELLED — отменен;</li><li>DELETED — удален.</li></ul>"
      enum:
      - "ACCEPTED"
      - "EXECUTED"
      - "REJECTED"
      - "CANCELLED"
      - "DELETED"
      - "WAITING"
    BeneficiaryScoringResult:
      required:
      - "isInBlacklist"
      - "isInnValid"
      - "isPassportValid"
      type: "object"
      properties:
        isInnValid:
          type: "boolean"
          description: "Индикатор валидности ИНН."
        isPassportValid:
          type: "boolean"
          description: "Индикатор валидности паспортных данных."
        isInBlacklist:
          type: "boolean"
          description: "Индикатор нахождения бенефициара в черном списке."
    PaymentInfoRegistryStatus1:
      type: "string"
      description: "Статус платежа:<br /><ul><li>WAITING — платеж ожидает отправки реестра;</li><li>ACCEPTED — платеж ожидает исполнения реестра;</li><li>EXECUTED — платеж исполнен;</li><li>REJECTED — платеж отклонен банком;</li><li>CANCELLED — платеж отменен;</li><li>DELETED — платеж удален.</li></ul>"
      enum:
      - "ACCEPTED"
      - "EXECUTED"
      - "REJECTED"
      - "CANCELLED"
      - "DELETED"
      - "WAITING"
    MigrationCard:
      required:
      - "date"
      - "expireDate"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    BeneficiaryUlResidentRequest:
      required:
      - "inn"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        name:
          type: "string"
          description: "Наименование организации."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона. phoneNumber или email обязателен к заполнению."
        email:
          type: "string"
          description: "Электронная почта. phoneNumber или email обязателен к заполнению."
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        opf:
          type: "string"
          description: "Организационно-правовая форма."
        inn:
          pattern: "^(\\d{10})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{13})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    SelfEmployedListRequest:
      type: "object"
      properties:
        recipientIds:
          type: "array"
          description: "Список идентификаторов самозанятых."
          items:
            type: "integer"
            format: "int32"
        inn:
          type: "array"
          description: "ИНН самозанятых."
          items:
            type: "string"
        status:
          type: "array"
          description: "Статусы самозанятых."
          items:
            type: "string"
        selfEmployedStatus:
          type: "array"
          description: "Статусы самозанятости."
          items:
            type: "string"
        creationDate:
          $ref: "#/components/schemas/SelfEmployedCreationDate"
        offset:
          type: "integer"
          description: "Количество получателей, которых мы пропустим при выдаче с начала списка."
          format: "int32"
        limit:
          type: "integer"
          description: "Максимальное количество самозанятых, информацию по которым отдадим в ответе. Максимум и по умолчанию — 900."
          format: "int32"
    AddCardRequestRequest:
      required:
      - "terminalKey"
      type: "object"
      properties:
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
    SelfEmployedCreatePaymentInfo:
      required:
      - "accountNumber"
      - "number"
      - "paymentPurpose"
      - "selfEmployedInfo"
      - "sum"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа на стороне клиента."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета самозанятого."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа."
        selfEmployedInfo:
          required:
          - "firstName"
          - "lastName"
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "Имя (кириллица)."
            lastName:
              type: "string"
              description: "Фамилия (кириллица)."
            middleName:
              type: "string"
              description: "Отчество (кириллица)."
          description: "Данные самозанятого."
        sum:
          type: "number"
          description: "Сумма платежа в рублях."
        revenueTypeCode:
          type: "string"
          description: "Код вида дохода."
          enum:
          - "1"
          - "2"
          - "3"
          - "4"
          - "5"
        collectionAmount:
          type: "number"
    ReceiptFailedOperation:
      required:
      - "createdAt"
      - "errorCode"
      - "status"
      - "type"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ReceiptOperationStatus"
        type:
          $ref: "#/components/schemas/ReceiptOperationType"
        createdAt:
          type: "string"
          description: "Дата и время создания операции в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
        errorCode:
          type: "string"
          description: "Код ошибки."
        errorMessage:
          type: "string"
          description: "Описание ошибки."
    ThirdPartyInfo:
      required:
      - "inn"
      - "kpp"
      - "name"
      type: "object"
      properties:
        inn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН третьего лица."
        kpp:
          pattern: "^(\\d{9}|0)$"
          type: "string"
          description: "КПП третьего лица."
        name:
          type: "string"
          description: "ФИО третьего лица."
      description: "Информация для совершения налоговых платежей за третьих лиц."
    ExpiryDate:
      required:
      - "month"
      - "year"
      type: "object"
      properties:
        year:
          type: "integer"
          description: "Год окончания срока действия карты."
          format: "int32"
        month:
          type: "integer"
          description: "Месяц окончания срока действия карты."
          format: "int32"
      description: "Объект с датой окончания срока действия карты."
    CreationRegisterStatus:
      type: "string"
      description: "Статус создания:<br /><ul><li>QUEUED — платежный реестр стоит в очереди на создание;</li><li>CREATED — платежный реестр создан;</li><li>ERROR — платежный реестр не был создан, ошибки перечислены в параметре <b>errors</b>.</li></ul>"
      enum:
      - "CREATED"
      - "ERROR"
      - "QUEUED"
    BankStatementOperation:
      required:
      - "amount"
      - "chargeDate"
      - "creatorStatus"
      - "date"
      - "drawDate"
      - "id"
      - "operationId"
      - "operationType"
      - "payerBank"
      - "payerBic"
      - "payerName"
      - "paymentPurpose"
      - "recipient"
      - "recipientAccount"
      - "recipientBank"
      - "recipientBic"
      type: "object"
      properties:
        operationId:
          type: "string"
          description: "Уникальный идентификатор операции."
        id:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата документа."
          format: "date"
        amount:
          type: "number"
          description: "Сумма платежа."
        drawDate:
          type: "string"
          description: "Дата списания средств с р/с плательщика."
          format: "date"
        payerName:
          type: "string"
          description: "Имя плательщика."
        payerInn:
          type: "string"
          description: "ИНН плательщика."
        payerAccount:
          type: "string"
          description: "Номер счета плательщика."
        payerCorrAccount:
          type: "string"
          description: "Корреспондентский счет плательщика."
        payerBic:
          type: "string"
          description: "БИК плательщика."
        payerBank:
          type: "string"
          description: "Банк плательщика."
        chargeDate:
          type: "string"
          description: "Дата поступления средств на р/с получателя."
          format: "date"
        recipient:
          type: "string"
          description: "Получатель платежа."
        recipientInn:
          type: "string"
          description: "ИНН получателя платежа."
        recipientAccount:
          type: "string"
          description: "Номер счета получателя платежа."
        recipientCorrAccount:
          type: "string"
          description: "Корреспондентский счет получателя платежа."
        recipientBic:
          type: "string"
          description: "БИК получателя платежа."
        recipientBank:
          type: "string"
          description: "Банк получателя платежа."
        paymentType:
          type: "string"
          description: "Вид платежа."
        operationType:
          pattern: "\\d{2}"
          type: "string"
          description: "Условное обозначение (шифр) документа, проводимого по счету в кредитной организации. <a href=\"https://www.consultant.ru/document/cons_doc_LAW_436264/f0d58093feca12dbef02bd44fd633f1c94b49da1/\">Перечень условных обозначений</a>."
        uin:
          type: "string"
          description: "Уникальный идентификатор платежа. <a href=\"https://www.consultant.ru/law/podborki/unikalnyj_identifikator_platezha/\">Подробнее</a>."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа."
        creatorStatus:
          type: "string"
          description: "Статус составителя расчетного документа."
        payerKpp:
          type: "string"
          description: "КПП плательщика."
        recipientKpp:
          type: "string"
          description: "КПП получателя."
        kbk:
          type: "string"
          description: "Код бюджетной классификации."
        oktmo:
          type: "string"
          description: "Код ОКТМО территории, на которой мобилизуются денежные средства от уплаты налога, сбора и иного платежа."
        taxEvidence:
          type: "string"
          description: "Основание налогового платежа."
        taxPeriod:
          type: "string"
          description: "Налоговый период / код таможенного органа."
        taxDocNumber:
          type: "string"
          description: "Номер налогового документа."
        taxDocDate:
          type: "string"
          description: "Дата налогового документа."
        taxType:
          type: "string"
          description: "Тип налогового платежа."
        executionOrder:
          type: "string"
          description: "Очередность платежа."
    InvalidRequestResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          maxLength: 50
          type: "string"
          description: "Уникальный идентификатор ошибки."
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
        errorDetails:
          type: "object"
          description: "Дополнительные данные об ошибке."
    FormDataResponse:
      required:
      - "casVersion"
      - "createdAt"
      - "isResident"
      - "type"
      - "year"
      type: "object"
      properties:
        year:
          type: "integer"
          description: "Год, за который подается декларация."
          format: "int32"
        isResident:
          type: "boolean"
          description: "Был ли клиент налоговым резидентом в выбранный год."
        type:
          $ref: "#/components/schemas/DeclarationType"
        incomeSources:
          maxItems: 100
          type: "array"
          description: "Группы источников дохода."
          items:
            $ref: "#/components/schemas/IncomeSourceResponse"
        taxReturnReasons:
          maxItems: 100
          type: "array"
          description: "Группы налоговых вычетов."
          items:
            $ref: "#/components/schemas/TaxReturnReasonResponse"
        casVersion:
          type: "integer"
          description: "Версия анкеты."
          format: "int32"
        createdAt:
          type: "string"
          description: "Дата создания."
          format: "date-time"
      description: "Заполненная анкета клиента."
    BankInfo1:
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        agreementNumber:
          type: "string"
          description: "Номер договора сотрудника."
      description: "Банковская информация сотрудника."
    CardNetwork:
      type: "string"
      description: "Международная платежная система."
      enum:
      - "MASTERCARD"
      - "VISA"
      - "MIR"
    CreateIndividualReceiptRequest:
      required:
      - "incomeType"
      type: "object"
      properties:
        incomeType:
          type: "string"
          description: "От кого самозанятый получил доход:

            * `FROM_INDIVIDUAL` — от физического лица;

            * `FROM_LEGAL_ENTITY` — от компании или ИП;

            * `FROM_FOREIGN_AGENCY` — от иностранной компании."
          enum:
          - "FROM_INDIVIDUAL"
          - "FROM_LEGAL_ENTITY"
          - "FROM_FOREIGN_AGENCY"
        incomeReceivedAt:
          type: "string"
          description: "Дата и время получения дохода в UTC. Ожидается в ISO-8601 формате <b>yyyy-MM-ddTHH:mm:ss<.fff><TZDSuffix></b>, где:

            * `HH` — часы в 24-часовой нотации. Допускаются значения от 00 до 23.

            * `.fff` — опциональная часть, содержащая доли секунд. Допускается не больше трех знаков.

            * `TZDSuffix` — опциональный суффикс. Допускается значение <code>Z</code> или <code>+00:00</code>."
          format: "date-time"
        services:
          type: "array"
          description: "Список услуг."
          items:
            $ref: "#/components/schemas/ReceiptService"
    UploadTaskFileResponse:
      required:
      - "id"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Идентификатор документа."
    RecipientResponse:
      required:
      - "amount"
      - "beneficiaryId"
      - "dealId"
      - "recipientId"
      - "stepId"
      type: "object"
      properties:
        dealId:
          type: "string"
          description: "Идентификатор сделки."
          format: "uuid"
        stepId:
          type: "string"
          description: "Идентификатор этапа сделки."
          format: "uuid"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        recipientId:
          type: "string"
          description: "Идентификатор реципиента."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма реципиента."
        tax:
          type: "number"
          description: "Налог реципиента."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        keepOnVirtualAccount:
          type: "boolean"
          description: "Вывод на виртуальный счет в рамках номинального счета — <code>true</code>, на реальные реквизиты — <code>false</code>.


            При создании реципиента без банковских реквизитов, платеж в рамках сделки автоматически будет выполнен на виртуальный счет бенефициара."
    AuthStatus:
      type: "string"
      description: "Статус авторизации"
      enum:
      - "succeed"
      - "cancelled"
    CreateTaxPaymentRequest:
      required:
      - "accountNumber"
      - "amount"
      - "bankDetails"
      - "beneficiaryId"
      - "purpose"
      - "tax"
      - "type"
      - "uin"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип платежа:

            * `REGULAR` — обычный.

            * `TAX` — налоговый."
          enum:
          - "REGULAR"
          - "TAX"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        bankDetails:
          $ref: "#/components/schemas/BankDetails"
        amount:
          type: "number"
          description: "Сумма платежа."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        uin:
          pattern: "0|[А-Яа-яA-Za-z0-9]{4}|[А-ЯA-Z0-9]{15}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{20}|[а-яА-Яa-zA-Z0-9№\\s!\"#$%;'()*+,-\\.\\/:;;=>?@\\]\\[\\\\\\^_`{|}~]{25}"
          type: "string"
          description: "Уникальный идентификатор платежа."
        tax:
          $ref: "#/components/schemas/TaxPaymentParameters"
    BeneficiaryScoringInfoV2:
      oneOf:
      - $ref: "#/components/schemas/FAILED"
      - $ref: "#/components/schemas/IN_PROGRESS"
      - $ref: "#/components/schemas/SUCCEEDED"
    Address1:
      required:
      - "fullAddress"
      type: "object"
      properties:
        fullAddress:
          type: "string"
          description: "Полный адрес."
        zipCode:
          type: "string"
          description: "Почтовый индекс."
        country:
          type: "string"
          description: "Страна."
        region:
          type: "string"
          description: "Регион."
        area:
          type: "string"
          description: "Район."
        city:
          type: "string"
          description: "Город."
        street:
          type: "string"
          description: "Улица."
        house:
          type: "string"
          description: "Дом."
        building:
          type: "string"
          description: "Корпус."
        flat:
          type: "string"
          description: "Квартира."
        construction:
          type: "string"
          description: "Строение."
        settlement:
          type: "string"
          description: "Поселение."
      description: "Адрес, по которому нужно получить доступные интервалы для назначения встречи."
    BeneficiaryFlNonresidentResponse:
      required:
      - "beneficiaryId"
      - "birthDate"
      - "citizenship"
      - "firstName"
      - "isSelfEmployed"
      - "lastName"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        firstName:
          type: "string"
          description: "Имя."
        middleName:
          type: "string"
          description: "Отчество."
        lastName:
          type: "string"
          description: "Фамилия."
        isSelfEmployed:
          type: "boolean"
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          pattern: "^([A-Z]{2})$"
          type: "string"
          description: "Гражданство. Код страны в формате `ISO 3166-1 alpha-2`."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта."
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document2"
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        inn:
          pattern: "^(\\d{12})$"
          type: "string"
          description: "ИНН."
    Arrest:
      required:
      - "amount"
      - "currency"
      - "date"
      - "id"
      - "status"
      - "unblockDate"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Уникальный идентификатор."
        externalId:
          type: "string"
          description: "Внешний идентификатор требования. Обеспечивается связь нескольких блокировок."
        amount:
          type: "number"
          description: "Сумма требования."
        currency:
          pattern: "^\\d{3}$"
          type: "string"
          description: "Код валюты по ОКВ."
        status:
          $ref: "#/components/schemas/EptArrestStatus"
        date:
          type: "string"
          description: "Дата регистрации требования."
          format: "date-time"
        unblockDate:
          type: "string"
          description: "Дата отмены блокировки."
          format: "date-time"
        circumstances:
          type: "string"
          description: "Обстоятельства."
        officeName:
          type: "string"
          description: "Наименование площадки."
    SelfEmployedReceipt:
      required:
      - "number"
      - "selfEmployedInfo"
      - "status"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа на стороне клиента."
          format: "int32"
        selfEmployedInfo:
          required:
          - "firstName"
          - "lastName"
          type: "object"
          properties:
            firstName:
              type: "string"
              description: "Имя (кириллица)."
            lastName:
              type: "string"
              description: "Фамилия (кириллица)."
            middleName:
              type: "string"
              description: "Отчество (кириллица)."
            recipientId:
              type: "integer"
              description: "Идентификатор самозанятого."
              format: "int32"
          description: "Данные самозанятого."
        link:
          type: "string"
          description: "Ссылка на чек."
        status:
          $ref: "#/components/schemas/SelfEmployedReceiptsStatus"
        error:
          required:
          - "errorCode"
          - "errorMessage"
          type: "object"
          properties:
            errorCode:
              type: "string"
              description: "Код ошибки."
            errorMessage:
              type: "string"
              description: "Описание ошибки."
          description: "Ошибка во время получения чека."
    RecipientListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество реципиентов для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество реципиентов для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество реципиентов в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего реципиентов, подходящих под условия запроса."
          format: "int32"
        results:
          type: "array"
          description: "Список реципиентов этапа сделки."
          items:
            $ref: "#/components/schemas/RecipientResponse"
    CobrandResponse:
      required:
      - "programStatus"
      type: "object"
      properties:
        programStatus:
          type: "boolean"
          description: "`true/false` — признак наличия кобрэнда."
        accounts:
          type: "array"
          description: "Список аккаунтов."
          items:
            $ref: "#/components/schemas/CobrandAccount"
    BlockCardRequest:
      required:
      - "reason"
      type: "object"
      properties:
        reason:
          type: "string"
          description: "Причина блокировки:

            * `LOST` — карта утеряна;

            * `STOLEN` — карта украдена;

            * `BROKEN` — карта повреждена;

            * `FRAUD` — мошенничество;

            * `CLIENTINITIATED` — другая причина."
          enum:
          - "LOST"
          - "STOLEN"
          - "BROKEN"
          - "FRAUD"
          - "CLIENTINITIATED"
        comment:
          type: "string"
          description: "Комментарий."
    PaymentInfo:
      required:
      - "employeeInfo"
      - "status"
      - "sum"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа на стороне клиента."
          format: "int32"
        status:
          $ref: "#/components/schemas/PaymentInfoRegistryStatus"
        employeeInfo:
          $ref: "#/components/schemas/EmployeeInfo"
        accountNumber:
          type: "string"
          description: "Номер счета сотрудника."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа."
        sum:
          type: "number"
          description: "Сумма платежа."
        periodStart:
          type: "string"
          description: "Начало периода платежа."
          format: "date"
        periodEnd:
          type: "string"
          description: "Окончание периода платежа."
          format: "date"
    BalanceListItem:
      required:
      - "accountNumber"
      - "amount"
      - "amountOnHold"
      - "beneficiaryId"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        amount:
          type: "number"
          description: "Текущий баланс бенефициара."
        amountOnHold:
          type: "number"
          description: "Заблокированные средства бенефициара."
    Employee:
      required:
      - "bankInfo"
      - "firstName"
      - "id"
      - "lastName"
      - "status"
      type: "object"
      properties:
        id:
          type: "integer"
          description: "Идентификатор сотрудника."
          format: "int32"
        status:
          $ref: "#/components/schemas/EmployeeStatus"
        firstName:
          type: "string"
          description: "Имя."
        lastName:
          type: "string"
          description: "Фамилия."
        middleName:
          type: "string"
          description: "Отчество."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        phones:
          type: "array"
          description: "Номера телефонов."
          items:
            $ref: "#/components/schemas/Phone"
        documents:
          type: "array"
          description: "Документы."
          items:
            $ref: "#/components/schemas/Document"
        jobInfo:
          $ref: "#/components/schemas/JobInfo"
        bankInfo:
          $ref: "#/components/schemas/BankInfo1"
    UpdateRecipientBankDetailsRequest:
      required:
      - "bankDetailsId"
      type: "object"
      properties:
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
    CreateTaskRequest:
      required:
      - "template"
      type: "object"
      properties:
        template:
          type: "string"
          description: "Шаблон, определяющий бизнес-логику задания."
        commentForAgent:
          type: "string"
          description: "Комментарий к заданию для представителя."
        parentTaskId:
          type: "string"
          description: "Идентификатор родительского задания."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON."
        contacts:
          type: "array"
          description: "Группа объектов с информацией о данных каждого участника задания, подлежащего удостоверению на встрече."
          items:
            $ref: "#/components/schemas/Contact"
    StepRequest:
      required:
      - "description"
      type: "object"
      properties:
        description:
          maxLength: 4096
          minLength: 3
          type: "string"
          description: "Описание этапа сделки."
    DealResponse:
      required:
      - "accountNumber"
      - "dealId"
      - "status"
      type: "object"
      properties:
        dealId:
          type: "string"
          description: "Идентификатор сделки."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        status:
          type: "string"
          description: "Статус сделки.\


            ![payment-statuses](https://business.t-static.ru/static/images/opensme/nominal-accounts/deal-statuses.svg)

            * `DRAFT` — сделка создана и доступна для редактирования.

            * `ACCEPTED` — параметры сделки подтверждены, средства зарезервированы.

            * `IN_PROGRESS` — сделка в процессе.

            * `CANCELLED` — сделка отменена.

            * `COMPLETED` — сделка успешно завершена."
          enum:
          - "DRAFT"
          - "ACCEPTED"
          - "IN_PROGRESS"
          - "CANCELLED"
          - "COMPLETED"
    Etp:
      required:
      - "amount"
      - "bank"
      - "currency"
      - "date"
      - "id"
      - "payedAmount"
      - "recipient"
      - "senderInn"
      - "status"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Уникальный идентификатор."
        externalId:
          type: "string"
          description: "Внешний идентификатор требования. Обеспечивается связь нескольких блокировок."
        amount:
          type: "number"
          description: "Сумма требования."
        currency:
          pattern: "^\\d{3}$"
          type: "string"
          description: "Код валюты по ОКВ."
        status:
          $ref: "#/components/schemas/EptArrestStatus"
        date:
          type: "string"
          description: "Дата регистрации требования."
          format: "date-time"
        payedAmount:
          type: "number"
          description: "Оплаченная сумма."
        paymentPurpose:
          type: "string"
          description: "Назначение платежа."
        senderInn:
          pattern: "^(\\d{12}|\\d{10}|0{1})$"
          type: "string"
          description: "ИНН плательщика."
        recipient:
          $ref: "#/components/schemas/Recipient"
        bank:
          $ref: "#/components/schemas/Bank"
        officeName:
          type: "string"
          description: "Наименование площадки."
    BeneficiaryUlNonresidentResponse:
      required:
      - "beneficiaryId"
      - "name"
      - "registrationDate"
      - "registrationNumber"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        name:
          type: "string"
          description: "Наименование организации."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта."
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        nza:
          type: "string"
          description: "Номер записи об аккредитации."
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        registrationNumber:
          type: "string"
          description: "Номер регистрации."
        opf:
          type: "string"
          description: "Организационно-правовая форма."
        inn:
          pattern: "^(\\d{10})$"
          type: "string"
          description: "ИНН."
        kio:
          type: "string"
          description: "Код иностранной организации."
    BeneficiaryRequest:
      oneOf:
      - $ref: "#/components/schemas/BeneficiaryFlNonresidentRequest"
      - $ref: "#/components/schemas/BeneficiaryFlResidentRequest"
      - $ref: "#/components/schemas/BeneficiaryIpNonresidentRequest"
      - $ref: "#/components/schemas/BeneficiaryIpResidentRequest"
      - $ref: "#/components/schemas/BeneficiaryLiteContactRequest"
      - $ref: "#/components/schemas/BeneficiaryUlNonresidentRequest"
      - $ref: "#/components/schemas/BeneficiaryUlResidentRequest"
    CreateDocument1:
      required:
      - "date"
      - "organization"
      - "serial"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/CreateDocumentType"
        serial:
          type: "string"
          description: "Серия."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
        division:
          type: "string"
          description: "Код подразделения."
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    SelfEmployedResponse:
      type: "object"
      properties:
        recipients:
          type: "array"
          description: "Список самозанятых."
          items:
            $ref: "#/components/schemas/SelfEmployed"
    DeliveryTask:
      required:
      - "id"
      - "status"
      - "template"
      type: "object"
      properties:
        id:
          type: "string"
          description: "Идентификатор задания."
        status:
          type: "string"
          description: "Статус задания."
        template:
          type: "string"
          description: "Шаблон задания."
        meetResult:
          type: "string"
        resolution:
          type: "string"
          description: "Результат задания."
        subResolution:
          type: "string"
          description: "Детальное описание результата задания."
        parentTaskId:
          type: "string"
          description: "Идентификатор родительского задания."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные метаданные в формате JSON."
        attachments:
          type: "array"
          description: "Группа объектов с информацией о документах, относящихся к заданию. Может быть пустым, если документы не нужны в качестве результатов задания."
          items:
            $ref: "#/components/schemas/Attachment"
        photos:
          type: "array"
          description: "Группа объектов с информацией о фото, относящихся к заданию."
          items:
            $ref: "#/components/schemas/Photo"
    IdentificationDocumentType:
      type: "string"
      description: "Тип документа"
      enum:
      - "PASSPORT"
    CreateSelfEmployedRequest:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        recipients:
          type: "array"
          description: "Список самозанятых на создание."
          items:
            $ref: "#/components/schemas/CreateSelfEmployedData"
    AmountDistributionItem:
      required:
      - "amount"
      - "beneficiaryId"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма пополнения."
    CardInfoResponse:
      required:
      - "accountNumber"
      - "cardBin"
      - "cardLastFourDigits"
      - "embossedName"
      - "isActive"
      - "status"
      - "ucid"
      type: "object"
      properties:
        ucid:
          type: "integer"
          description: "Уникальный идентификатор карты."
          format: "int64"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер расчетного счета, к которому привязана карта."
        cardBin:
          maxLength: 6
          minLength: 6
          pattern: "\\d{6}"
          type: "string"
          description: "Первые 6 цифр номера карты (BIN карты)."
        cardLastFourDigits:
          maxLength: 4
          minLength: 4
          pattern: "\\d{4}"
          type: "string"
          description: "Последние 4 цифры номера карты."
        isActive:
          type: "boolean"
          description: "Флаг активации карты."
        status:
          $ref: "#/components/schemas/CardStatus"
        embossedName:
          type: "string"
          description: "Имя держателя карты."
    EmployeeInfo:
      required:
      - "firstName"
      - "lastName"
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "Имя (кириллица)."
        lastName:
          type: "string"
          description: "Фамилия (кириллица)."
        middleName:
          type: "string"
          description: "Отчество (кириллица)."
        employeeId:
          type: "integer"
          description: "Идентификатор сотрудника. Возвращается для реестров в статусе <code>DRAFT</code>, <code>ACCEPTED</code>, <code>PART_EXEC</code> или <code>EXECUTED</code>."
          format: "int32"
      description: "Данные сотрудника."
    ContractGPD:
      required:
      - "date"
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    CreatePhone1:
      required:
      - "number"
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/CreatePhoneType"
        number:
          type: "string"
          description: "Номер телефона."
    AccountOperation:
      required:
      - "accountAmount"
      - "accountNumber"
      - "amount"
      - "authDateTime"
      - "card"
      - "currency"
      - "operationStatus"
      - "operationType"
      type: "object"
      properties:
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер счета"
        authDateTime:
          type: "string"
          description: "Дата авторизации"
          format: "date-time"
        trxnDateTime:
          type: "string"
          description: "Дата транзакции"
          format: "date-time"
        authId:
          type: "string"
          description: "Идентификатор авторизации"
        trxnId:
          type: "string"
          description: "Идентификатор транзакции"
        authStatus:
          $ref: "#/components/schemas/AuthStatus"
        operationType:
          $ref: "#/components/schemas/AccountOperationType"
        operationStatus:
          $ref: "#/components/schemas/AccountOperationStatus"
        amount:
          type: "number"
          description: "Сумма операции в валюте операции"
        currency:
          type: "string"
          description: "Валюта операции"
        accountAmount:
          type: "number"
          description: "Сумма операции в валюте счета"
        description:
          type: "string"
          description: "Назначение платежа"
        card:
          $ref: "#/components/schemas/Card"
        merch:
          $ref: "#/components/schemas/Merch"
        rrn:
          type: "string"
          description: "RRN"
        acquirerId:
          type: "string"
          description: "acquirerId"
    CardIssueApplicationStatus:
      type: "string"
      description: "

        Статус заявки:

        <ul>

        <li>`NEW` — заявка принята, в работу еще не взята;</li>

        <li>`IDENTIFICATION` — производится удаленная идентификация сотрудника, на которого выпускается бизнес-карта;</li>

        <li>`ISSUING` — бизнес-карта выпускается;</li>

        <li>`FAILED_FATAL` — в процессе возникла фатальная ошибка, выпустить бизнес-карту на этого сотрудника нельзя;</li>

        <li>`FAILED_NON_FATAL` — в процессе возникла ошибка, подайте новую заявку;</li>

        <li>`CARD_ISSUED` — карта выпущена.</li>

        \ </ul>"
      enum:
      - "NEW"
      - "IDENTIFICATION"
      - "ISSUING"
      - "FAILED_FATAL"
      - "FAILED_NON_FATAL"
      - "CARD_ISSUED"
    FAILED:
      required:
      - "beneficiaryId"
      - "status"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        status:
          type: "string"
          description: "Статус проверки в финансовом мониторинге."
          enum:
          - "IN_PROGRESS"
          - "SUCCEEDED"
          - "FAILED"
        warnings:
          type: "array"
          items:
            $ref: "#/components/schemas/BeneficiaryScoringError"
        errors:
          type: "array"
          items:
            $ref: "#/components/schemas/BeneficiaryScoringError"
    DebitAccount:
      required:
      - "accountNumber"
      - "bank"
      - "name"
      type: "object"
      properties:
        name:
          type: "string"
          description: "Получатель (ФИО)."
        accountNumber:
          type: "string"
          description: "Счет получателя платежа."
        bank:
          $ref: "#/components/schemas/BankInfo"
    CreateMeetingRequest:
      required:
      - "appointmentId"
      - "intervalEndTime"
      - "intervalStartTime"
      type: "object"
      properties:
        appointmentId:
          type: "string"
          description: "Идентификатор назначения встречи."
        intervalStartTime:
          type: "string"
          description: "Время начала интервала."
        intervalEndTime:
          type: "string"
          description: "Время окончания интервала."
        commentForAgent:
          type: "string"
          description: "Комментарий к встрече для представителя."
    HoldListItem:
      required:
      - "accountNumber"
      - "amount"
      - "beneficiaryId"
      - "holdId"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        holdId:
          type: "string"
          description: "ID холда."
          format: "uuid"
        dealId:
          type: "string"
          description: "ID сделки, под которую сделан холд."
          format: "uuid"
        stepId:
          type: "string"
          description: "ID этапа сделки, под который сделан холд."
          format: "uuid"
        recipientId:
          type: "string"
          description: "ID реципиента этапа сделки, под которого сделан холд."
          format: "uuid"
        paymentId:
          type: "string"
          description: "ID выплаты, под которую сделан холд."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма холда."
    BusinessErrorResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          maxLength: 50
          type: "string"
          description: "Уникальный идентификатор ошибки."
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
        errorDetails:
          type: "object"
          description: "Дополнительные данные об ошибке."
    CreateAddressType:
      type: "string"
      description: "Тип адреса."
      enum:
      - "Жительства"
      - "Регистрации"
    InternalServerErrorResponse:
      required:
      - "errorCode"
      - "errorId"
      - "errorMessage"
      type: "object"
      properties:
        errorId:
          maxLength: 50
          type: "string"
          description: "Уникальный идентификатор ошибки."
        errorMessage:
          maxLength: 400
          type: "string"
          description: "Текст ошибки."
        errorCode:
          maxLength: 50
          type: "string"
          description: "Код ошибки."
    SelfEmployedPayPaymentRegistryRequest:
      required:
      - "correlationId"
      - "paymentRegistryId"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    AccountOperationStatus:
      type: "string"
      enum:
      - "authorization"
      - "transaction"
    BindTaxpayerRequest:
      required:
      - "firstName"
      - "lastName"
      - "phoneNumber"
      type: "object"
      properties:
        firstName:
          type: "string"
          description: "Имя самозанятого."
        lastName:
          type: "string"
          description: "Фамилия самозанятого."
        middleName:
          type: "string"
          description: "Отчество самозанятого."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона самозанятого."
    SpendLimit:
      required:
      - "limitPeriod"
      - "limitRemain"
      - "limitValue"
      type: "object"
      properties:
        limitValue:
          type: "number"
          description: "Лимит на покупки и снятия наличных в валюте счета, к которому привязана карта"
        limitRemain:
          type: "number"
          description: "Доступный остаток расходного лимита в валюте счета, к которому привязана карта"
        limitPeriod:
          type: "string"
          description: "

            Период обновления доступного остатка расходного лимита:

            <ul>

            <li>`DAY\" — доступный остаток станет равным лимиту в начале следующих суток;</li>

            <li>`MONTH` — доступный остаток станет равным лимиту в начале следующего месяца;</li>

            <li>`IRREGULAR` — доступный остаток станет равным лимиту только при обновлении лимита;</li>

            <li>`CUSTOM` — период обновления лимита установлен в дополнительное состояние вручную — его можно узнать у вашего персонального менеджера.</li>

            </ul>"
          enum:
          - "DAY"
          - "MONTH"
          - "IRREGULAR"
          - "CUSTOM"
      description: "Объект с информацией о расходном лимите."
    Bank:
      type: "object"
      properties:
        bik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка получателя.



            С 1 января 2021 года при перечислении налоговых платежей указываются новые значения БИК банков получателя.



            <a href=\"https://spmag.ru/articles/polya-platezhnogo-porucheniya-v-2021-godu-obrazec\">Подробнее о полях платежного поручения</a> "
        corAccount:
          pattern: "\\d{20}"
          type: "string"
          description: "Корреспондентский счет банка получателя.



            С 1 января 2021 года при уплате налогов указывается номер счета банка получателя, входящий в состав единого казначейского счета (ЕКС). Раньше это поле заполнялось нулями. "
        name:
          maxLength: 255
          minLength: 1
          type: "string"
          description: "Наименование банка получателя.



            С 1 января 2021 года при заполнении платежей на перечисление налогов после названия банка указывается название счета казначейства через знак <code>//</code>. "
      description: "Информация о банке получателя."
    PaymentStatusResponse:
      required:
      - "status"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/PaymentStatus"
        errorMessage:
          type: "string"
          description: "Описание ошибки."
        meta:
          type: "object"
          additionalProperties:
            type: "string"
          description: "Дополнительные данные, переданные в поле <b>meta</b> запроса платежа."
    ApiForeignAgentResponse:
      required:
      - "isForeignAgent"
      type: "object"
      properties:
        isForeignAgent:
          type: "boolean"
          description: "Является ли пользователь иностранным агентом."
    RegularPaymentResponse:
      required:
      - "accountNumber"
      - "amount"
      - "bankDetails"
      - "beneficiaryId"
      - "paymentId"
      - "purpose"
      - "status"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип платежа:

            * `REGULAR` — обычный.

            * `TAX` — налоговый."
          enum:
          - "REGULAR"
          - "TAX"
        paymentId:
          type: "string"
          description: "Идентификатор платежа."
          format: "uuid"
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        accountNumber:
          pattern: "^(\\d{20}|\\d{22})$"
          type: "string"
          description: "Номер номинального счета."
        bankDetails:
          $ref: "#/components/schemas/BankDetails"
        dealId:
          type: "string"
          description: "Идентификатор сделки."
          format: "uuid"
        stepId:
          type: "string"
          description: "Идентификатор этапа сделки."
          format: "uuid"
        recipientId:
          type: "string"
          description: "Идентификатор реципиента."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма платежа."
        status:
          type: "string"
          description: "Статус платежа\


            ![payment-statuses](https://business.t-static.ru/static/images/opensme/nominal-accounts/payment-statuses.svg)

            * `PENDING` — Ожидает обработки.

            * `IN_PROGRESS` — В процессе.

            * `FAILED` — Неуспешен.

            * `CANCELLED` — Отменен.

            * `SUCCEEDED` — Успешно завершен."
          enum:
          - "PENDING"
          - "IN_PROGRESS"
          - "FAILED"
          - "CANCELLED"
          - "SUCCEEDED"
        errorMessage:
          type: "string"
          description: "Описание ошибки в случае неуспешности платежа."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        operationId:
          type: "string"
          description: "Уникальный ID операции."
          format: "uuid"
    EmployeeRegistryCreateTypeRequest:
      type: "string"
      description: "

        Может принимать одно из двух значений:

        <ul>

        <li>IGNORE_ERRORS — реестр будет создан из всех корректных платежей, его идентификатор вернется в поле <b>paymentRegistryId</b> метода <a href=\"/docs/api/self-employed-get-payment-registry-create-result\">Получить результат создания черновика платежного реестра</a>. Если корректных платежей нет, реестр не создастся.</li>

        <li>FAIL_ERRORS — если есть ошибочные платежи, реестр не создастся. Значение по умолчанию — FAIL_ERRORS.</li>

        </ul>\n"
      enum:
      - "IGNORE_ERRORS"
      - "FAIL_ERRORS"
    StepResponse:
      required:
      - "dealId"
      - "description"
      - "status"
      - "stepId"
      - "stepNumber"
      type: "object"
      properties:
        dealId:
          type: "string"
          description: "Идентификатор сделки."
          format: "uuid"
        stepId:
          type: "string"
          description: "Идентификатор этапа сделки."
          format: "uuid"
        stepNumber:
          type: "integer"
          description: "Порядковый номер этапа сделки."
          format: "int32"
        description:
          maxLength: 4096
          minLength: 3
          type: "string"
          description: "Описание этапа сделки."
        status:
          type: "string"
          description: "Статус этапа сделки.\


            ![payment-statuses](https://business.t-static.ru/static/images/opensme/nominal-accounts/step-statuses.svg)

            * `NEW` — создан.

            * `PAYMENT_IN_PROGRESS` — одна или несколько выплат этапа сделки в процессе.

            * `PAYMENT_FAILED` — одна или несколько выплат этапа сделки неуспешны.

            * `CANCELLED` — отменен.

            * `COMPLETED` — успешно завершен."
          enum:
          - "NEW"
          - "PAYMENT_IN_PROGRESS"
          - "PAYMENT_FAILED"
          - "CANCELLED"
          - "COMPLETED"
    SelfEmployedReceiptsRequest:
      required:
      - "correlationId"
      - "paymentRegistryId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
        paymentRegistryId:
          type: "integer"
          description: "Номер платежного реестра. Необходимо, чтобы ранее по реестру была проведена регистрация дохода."
          format: "int32"
    ReceiptSuccessOperation:
      required:
      - "createdAt"
      - "status"
      - "type"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ReceiptOperationStatus"
        type:
          $ref: "#/components/schemas/ReceiptOperationType"
        createdAt:
          type: "string"
          description: "Дата и время создания операции в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
    BankInfo2:
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Номер счета самозанятого."
        agreementNumber:
          type: "string"
          description: "Номер договора самозанятого."
        bankBic:
          type: "string"
          description: "БИК банка самозанятого."
      description: "Банковская информация самозанятого."
    RecipientRequest:
      required:
      - "amount"
      - "beneficiaryId"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        amount:
          type: "number"
          description: "Сумма реципиента."
        tax:
          type: "number"
          description: "Налог реципиента."
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        bankDetailsId:
          type: "string"
          description: "Идентификатор банковских реквизитов."
          format: "uuid"
        keepOnVirtualAccount:
          type: "boolean"
          description: "Вывод на виртуальный счет в рамках номинального счета — <code>true</code>, на реальные реквизиты — <code>false</code>.


            При создании реципиента без банковских реквизитов, платеж в рамках сделки автоматически будет выполнен на виртуальный счет бенефициара."
    CreateCardPaymentRequest:
      required:
      - "amount"
      - "from"
      - "id"
      - "purpose"
      - "to"
      type: "object"
      properties:
        id:
          maxLength: 64
          minLength: 1
          type: "string"
          description: "Идентификатор платежа. Должен быть уникален в пределах интеграции <a href=\"/docs/api/payments-core-pay\">платежей по банковским реквизитам</a>."
        from:
          $ref: "#/components/schemas/CardPayerRequisites"
        to:
          $ref: "#/components/schemas/AgreementNumberRequisites"
        purpose:
          maxLength: 210
          minLength: 1
          type: "string"
          description: "Назначение платежа."
        documentNumber:
          minimum: 1
          type: "integer"
          description: "Номер распоряжения, определяемый клиентом. Заполняется на усмотрение плательщика. Номер документа — не больше 6 цифр. "
          format: "int32"
        amount:
          type: "number"
          description: "Сумма платежа в рублях"
        executionOrder:
          maximum: 5
          minimum: 1
          type: "integer"
          description: "Очередность платежа."
          format: "int32"
          deprecated: true
        dueDate:
          type: "string"
          description: "Дата, до которой нужно провести платеж. При неуспешных попытках платежа он будет повторен вплоть до указанной даты. Если дату не передать, платеж не будет повторен в случае неуспешной попытки. Время на проведение платежа не может быть больше 30 дней."
          format: "date-time"
    ReceiptInProgressOperation:
      required:
      - "createdAt"
      - "status"
      - "type"
      type: "object"
      properties:
        status:
          $ref: "#/components/schemas/ReceiptOperationStatus"
        type:
          $ref: "#/components/schemas/ReceiptOperationType"
        createdAt:
          type: "string"
          description: "Дата и время создания операции в UTC. Возвращается в формате ISO-8601."
          format: "date-time"
    IncomingTransactionListResponse:
      required:
      - "limit"
      - "offset"
      - "size"
      - "total"
      type: "object"
      properties:
        offset:
          type: "integer"
          description: "Запрошенное количество неидентифицированных пополнений для пропуска."
          format: "int32"
        limit:
          type: "integer"
          description: "Запрошенное количество неидентифицированных пополнений для вывода."
          format: "int32"
        size:
          type: "integer"
          description: "Количество неидентифицированных пополнений в ответе."
          format: "int32"
        total:
          type: "integer"
          description: "Всего неидентифицированных пополнений."
          format: "int32"
        results:
          type: "array"
          description: "Список неидентифицированных пополнений."
          items:
            $ref: "#/components/schemas/IncomingTransactionListItem"
    IdentificationStatusResponse:
      required:
      - "isIdentified"
      type: "object"
      properties:
        isIdentified:
          type: "boolean"
          description: "Идентифицирован ли пользователь."
    ForeignPassportOfForeignCitizens:
      required:
      - "date"
      - "number"
      - "organization"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип документа."
          enum:
          - "PASSPORT"
          - "FOREIGN_PASSPORT"
          - "FOREIGN_PASSPORT_OF_FOREIGN_CITIZENS"
          - "OFFICIAL_PASSPORT"
          - "DIPLOMATIC_PASSPORT"
          - "MIGRATION_CARD"
          - "TEMPORARY_RESIDENCE_PERMIT"
          - "VISA"
          - "RESIDENCE_PERMIT"
          - "CONTRACT"
          - "CONTRACT_GPD"
          - "PATENT"
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата выдачи."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
    EptArrestStatus:
      type: "string"
      description: "Статус требования."
      enum:
      - "PAYED"
      - "ACTIVE"
      - "PAUSE"
      - "CANCELED"
    CreateReceiptRequest:
      oneOf:
      - $ref: "#/components/schemas/CreateForeignAgencyReceiptRequest"
      - $ref: "#/components/schemas/CreateIndividualReceiptRequest"
      - $ref: "#/components/schemas/CreateLegalEntityReceiptRequest"
    PaymentError1:
      required:
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор платежа, переданный клиентом при создании."
          format: "int32"
        accountNumber:
          type: "string"
          description: "Номер счета самозанятого."
        errors:
          type: "array"
          description: "Ошибки валидации."
          items:
            $ref: "#/components/schemas/FieldValidationError"
    ReceiptStatus:
      type: "string"
      description: "Статус чека."
      enum:
      - "IN_PROGRESS"
      - "REGISTERED"
      - "DECLINED"
      - "REGISTERED_OFFLINE"
      - "CANCELLED"
    OutputLimitPeriod:
      type: "string"
      description: "

        Период обновления доступного остатка лимита на снятия наличных:

        <ul>

        <li>`DAY\" — доступный остаток станет равным лимиту в начале следующих суток;</li>

        <li>`MONTH` — доступный остаток станет равным лимиту в начале следующего месяца;</li>

        <li>`IRREGULAR` — доступный остаток станет равным лимиту только при обновлении лимита;</li>

        <li>`CUSTOM` — период обновления лимита установлен в дополнительное состояние вручную — его можно узнать у вашего персонального менеджера.</li>

        </ul>"
      enum:
      - "DAY"
      - "MONTH"
      - "IRREGULAR"
      - "CUSTOM"
    SelfEmployedPayPaymentRegistryResultResponse:
      required:
      - "count"
      - "paymentRegistryId"
      - "status"
      type: "object"
      properties:
        paymentRegistryId:
          type: "integer"
          description: "Идентификатор платежного реестра."
          format: "int32"
        status:
          $ref: "#/components/schemas/OrderPayStatus"
        count:
          type: "integer"
          description: "Количество платежей в реестре."
          format: "int32"
        error:
          required:
          - "errorCode"
          - "errorDescription"
          type: "object"
          properties:
            errorCode:
              type: "string"
              description: "Код ошибки."
            errorDescription:
              type: "string"
              description: "Описание ошибки."
          description: "Общая ошибка, произошедшая при создании реестра."
        paymentResults:
          type: "array"
          description: "Результаты оплаты."
          items:
            $ref: "#/components/schemas/PaymentPayResult"
    AccountInfo2:
      required:
      - "accountNumber"
      - "accountType"
      - "balance"
      - "bankBik"
      - "currency"
      - "name"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Расчетный счет организации."
        name:
          type: "string"
          description: "Наименование счета."
        currency:
          type: "string"
          description: "Код валюты счета по ОКВ (цифрами)."
        bankBik:
          pattern: "\\d{9}"
          type: "string"
          description: "БИК банка."
        accountType:
          type: "string"
          description: "Тип счета. Список вариантов значений может пополняться.

            * `Current` — расчетный счет.

            * `Tax` — счет Т-Бухгалтерии.

            * `Tender` — специальный счет для участия в госзакупках.

            * `Overnight` — счет Overnight.

            * `Trust` — специальный счет доверительного управляющего ПИФ.

            * `Broker` — специальный брокерский счет.

            * `BankPaymentAgent` — специальный счет банковского платежного агента.

            * `PaymentAgent` — счет платежного агента.

            * `Nominal` — номинальный счет.

            * `NominalIpo` — номинальный счет оператора инвестиционной платформы.

            * `TrustManagementSmp` — специальный счет доверительного управления.

            * `Cashbox` — бизнес-копилка."
        activationDate:
          type: "string"
          description: "Дата активации."
          format: "date"
        balance:
          $ref: "#/components/schemas/Balance"
        transitAccount:
          $ref: "#/components/schemas/TransitAccount"
    SelfEmployedPaymentRegistrySubmitResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    PhoneType:
      type: "string"
      description: "Тип телефона."
      enum:
      - "Мобильный"
      - "По месту жительства"
      - "Рабочий"
    VirtualCardRequisitesResponse:
      required:
      - "cvc"
      - "embossedName"
      - "expiryDate"
      - "number"
      type: "object"
      properties:
        number:
          pattern: "^\\d{16,19}$"
          type: "string"
          description: "Немаскированный номер карты."
        embossedName:
          type: "string"
          description: "Имя держателя карты."
        cvc:
          pattern: "^\\d{3,4}$"
          type: "string"
          description: "CVC карты."
        expiryDate:
          $ref: "#/components/schemas/ExpiryDate"
    CreatePaymentRequest1:
      oneOf:
      - $ref: "#/components/schemas/CreateRegularPaymentRequest"
      - $ref: "#/components/schemas/CreateTaxPaymentRequest"
    InputLimitPeriod:
      type: "string"
      description: "

        Период обновления доступного остатка:

        <ul>

        <li>\"DAY\" &ndash; доступный остаток станет равным лимиту в начале следующих суток</li>

        <li>\"MONTH\" &ndash; доступный остаток станет равным лимиту в начале следующего месяца</li>

        <li>\"IRREGULAR\" &ndash; доступный остаток станет равным лимиту только при обновлении лимита</li>

        </ul>"
      enum:
      - "DAY"
      - "MONTH"
      - "IRREGULAR"
    AccountInfo:
      required:
      - "accountNumber"
      - "balance"
      - "currency"
      type: "object"
      properties:
        accountNumber:
          type: "string"
          description: "Расчетный счет организации."
        currency:
          type: "string"
          description: "Код валюты счета по ОКВ (цифрами)."
        balance:
          $ref: "#/components/schemas/Balance"
    CreateEmployeeResultResponse:
      type: "object"
      properties:
        employeeResults:
          type: "array"
          description: "Список результатов создания сотрудников."
          items:
            $ref: "#/components/schemas/EmployeesResponse"
    CreationRegistryStatus:
      type: "string"
      description: "Статус создания:<br /><ul><li>QUEUED — платежный реестр стоит в очереди на создание.</li><li>CREATED — платежный реестр создан.</li><li>ERROR — платежный реестр не был создан. Ошибки перечислены в параметре <b>errors</b>.</li></ul>"
      enum:
      - "CREATED"
      - "ERROR"
      - "QUEUED"
    OrderPayStatus:
      type: "string"
      description: "Статус создания платежного реестра."
      enum:
      - "SEND_IN_PROGRESS"
      - "SENT"
      - "REJECTED"
      - "EXECUTED"
      - "PART_EXEC"
      - "ERROR"
    IncomeSourceResponse:
      required:
      - "title"
      type: "object"
      properties:
        title:
          type: "string"
          description: "Название группы"
        options:
          maxItems: 100
          type: "array"
          description: "Детализация источников дохода в рамках группы"
          items:
            $ref: "#/components/schemas/OptionResponse"
    EmployeeCreateData:
      required:
      - "birthDate"
      - "birthPlace"
      - "citizenship"
      - "firstName"
      - "jobInfo"
      - "lastName"
      - "number"
      type: "object"
      properties:
        number:
          type: "integer"
          description: "Идентификатор сотрудника на стороне клиента."
          format: "int32"
        firstName:
          type: "string"
          description: "Имя (кириллица)."
        lastName:
          type: "string"
          description: "Фамилия (кириллица)."
        middleName:
          type: "string"
          description: "Отчество (кириллица)."
        birthDate:
          type: "string"
          description: "Дата рождения."
          format: "date"
        birthPlace:
          type: "string"
          description: "Место рождения."
        citizenship:
          type: "string"
          description: "Гражданство."
        email:
          type: "string"
          description: "Электронная почта."
        latinFirstName:
          type: "string"
          description: "Имя (латиница)."
        latinLastName:
          type: "string"
          description: "Фамилия (латиница)."
        phones:
          type: "array"
          description: "Телефон — обязательно укажите мобильный телефон."
          items:
            $ref: "#/components/schemas/CreatePhone"
        addresses:
          type: "array"
          description: "Адреса — обязательно укажите адреса жительства, регистрации и работы."
          items:
            $ref: "#/components/schemas/CreateAddress"
        documents:
          type: "array"
          description: "Для граждан РФ укажите данные паспорта.


            Для иностранных граждан укажите:

            <ul>

            \  <li>Один из основных документов — «Иностранный паспорт», «Загр. паспорт иностранного гр.», «Служебный/официальный паспорт», «Дипломатический паспорт».</li>

            \  <li>Один из миграционных документов — «Миграционная карта», «Разр. на временное проживание», «Вид на жительство\".</li>

            </ul>\n"
          items:
            $ref: "#/components/schemas/CreateDocument"
        jobInfo:
          $ref: "#/components/schemas/CreateJobInfo"
    SelfEmployedCreatePaymentRegistryResponse:
      required:
      - "correlationId"
      type: "object"
      properties:
        correlationId:
          type: "string"
          description: "Идентификатор, связывающий запрос создания с запросом получения ответа."
          format: "uuid"
    Document:
      required:
      - "type"
      type: "object"
      properties:
        type:
          $ref: "#/components/schemas/DocumentType"
        serial:
          type: "string"
          description: "Серия."
        number:
          type: "string"
          description: "Номер документа."
        date:
          type: "string"
          description: "Дата."
          format: "date"
        organization:
          type: "string"
          description: "Кем выдан."
        division:
          type: "string"
          description: "Код подразделения."
        expireDate:
          type: "string"
          description: "Дата истечения."
          format: "date"
    GetIntervalsRequest:
      required:
      - "address"
      type: "object"
      properties:
        taskIds:
          type: "array"
          description: "Cписок идентификаторов заданий, по которым нужно получить доступные интервалы для назначения встреч."
          items:
            type: "string"
        address:
          $ref: "#/components/schemas/Address1"
    BeneficiaryUlResidentResponse:
      required:
      - "beneficiaryId"
      - "inn"
      - "type"
      type: "object"
      properties:
        beneficiaryId:
          type: "string"
          description: "Идентификатор бенефициара."
          format: "uuid"
        type:
          type: "string"
          description: "Тип бенефициара:

            * `FL_RESIDENT` — физическое лицо, резидент.

            * `FL_NONRESIDENT` — физическое лицо, нерезидент.

            * `UL_RESIDENT` — юридическое лицо, резидент.

            * `UL_NONRESIDENT` — юридическое лицо, нерезидент.

            * `IP_RESIDENT` — ИП, резидент.

            * `IP_NONRESIDENT` — ИП, нерезидент.

            * `LITE_CONTACT` — легкий контакт."
          enum:
          - "FL_RESIDENT"
          - "FL_NONRESIDENT"
          - "UL_RESIDENT"
          - "UL_NONRESIDENT"
          - "IP_RESIDENT"
          - "IP_NONRESIDENT"
          - "LITE_CONTACT"
        name:
          type: "string"
          description: "Наименование организации."
        phoneNumber:
          pattern: "^((\\+[0-9])([0-9]){6,14})$"
          type: "string"
          description: "Номер телефона."
        email:
          type: "string"
          description: "Электронная почта."
        addresses:
          type: "array"
          description: "Адреса."
          items:
            $ref: "#/components/schemas/Address"
        registrationDate:
          type: "string"
          description: "Дата регистрации."
          format: "date"
        opf:
          type: "string"
          description: "Организационно-правовая форма."
        inn:
          pattern: "^(\\d{10})$"
          type: "string"
          description: "ИНН."
        ogrn:
          pattern: "^(\\d{13})$"
          type: "string"
          description: "Основной государственный регистрационный номер."
    PermissionTypeEnum:
      type: "string"
      enum:
      - "PAYMENT_INFORMATION"
      - "TAXPAYER_UPDATE"
      - "CANCEL_ANY_INCOME"
      - "CANCEL_INCOME"
      - "INCOME_SUMMARY"
      - "INCOME_REGISTRATION"
      - "INCOME_LIST"
      - "PERMISSIONS_MGMT"
      - "TAX_PAYMENT"
    CardBankDetailsRequest:
      required:
      - "cardData"
      - "terminalKey"
      - "type"
      type: "object"
      properties:
        type:
          type: "string"
          description: "Тип банковских реквизитов:

            * `PAYMENT_DETAILS` — По реквизитам счета.

            * `CARD` — На карту.

            * `SBP` — Через СБП."
          enum:
          - "PAYMENT_DETAILS"
          - "CARD"
          - "SBP"
        isDefault:
          type: "boolean"
          description: "Являются ли реквизиты основными для бенефициара. По умолчанию для первых добавленных реквизитов — `true`, для следующих — `false`."
        terminalKey:
          maxLength: 256
          minLength: 1
          type: "string"
          description: "Ключ терминала."
        cardData:
          maxLength: 512
          minLength: 1
          type: "string"
          description: "

            Зашифрованные данные карты.

            Объект `CardData` собирается в виде списка «ключ=значение» (разделитель «;») и зашифровывается открытым ключом (X509 RSA 2048). Получившееся бинарное значение кодируется в Base64.

            Список значений:


            * `PAN` — обязательный параметр, номер карты. Число.

            * `ExpDate` — необязательный параметр, месяц и год срока действия карты в формате MMYY. Число.

            * `CardHolder` — необязательный параметр, имя и фамилия держателя карты — как на карте. Строка.

            * `CVV` — необязательный параметр, код защиты с обратной стороны карты. Строка.


            Пример: `PAN=4300000000000777;ExpDate=0523;CardHolder=IVAN PETROV;CVV=111`


            Открытый ключ генерируется банком. Чтобы получить открытый ключ для шифрования `CardData`, напишите на acq_help@tbank.ru или обратитесь к сотруднику, который помогал вам с процессом выпуска терминала.\n"
  securitySchemes:
    httpAuth:
      type: "http"
      scheme: "bearer"
x-layers:
- type: "k8s"
  hostnames:
  - "api-common-bambini-prod.internal.m1-prod2.prod.k8s.tcsbank.ru"
  - "api-common-bambini-prod.internal.bm-ix-m4-prod1.prod.k8s.tcsbank.ru"
  - "api-common-bambini-prod.internal.ds-prod2.prod.k8s.tcsbank.ru"
x-service-catalog: "https://devplatform.tcsbank.ru/tenants/t-family/software/services/view/99562047-b363-46f8-922e-ef864b4bc055"
x-tagGroups:
  name: "Методы:"
  tags:
  - "T-Business ID. Информация о компании"
  - "T-ID. Информация о пользователе"
  - "T-ID. Делегированная идентификация"
  - "Счета и выписки"
  - "Платежи"
  - "Зарплатный проект"
  - "Выплаты самозанятым"
  - "Самозанятые"
  - "Выставление счетов"
  - "Номинальные счета"
  - "Безакцептные списания"
  - "Специальные счета"
  - "Торговый эквайринг"
  - "Проверка контрагентов"
  - "Бизнес-карты"
  - "Рейтинги продуктов"
  - "Корзина. Работа с заказом"
  - "Кредитные продукты"
  - "Интернет-эквайринг. Диспуты"
  - "Партнерская доставка"
  - "Декларации 3-НДФЛ"
  - "ESOP"
  - "ESOP Сотрудники"
  - "T-ID"
  - "Бенефициары и реквизиты"
  - "Биллинг"
  - "Депоненты и реципиенты"
  - "Инвестиционные продукты внешних партнеров"
  - "Налоговые консультации"
  - "Овернайты"
  - "Партнерские методы для работы с заявкой на выдачу кредита наличными"
  - "Партнерские методы для работы с заявкой на покупку в кредит (Prod)"
  - "Партнерские методы для работы с заявкой на покупку в кредит (Test)"
  - "Платежные требования"
  - "Правила"
  - "Соглашения"
  - "Управление сделками"
  - "Управление этапами сделок"
  - "Школьные карты «Джуниор»"
x-tenant-name: "t-family"