openapi: 3.0.3
info:
  title: API Яндекс Маркета для продавцов
  description: |
    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.

    В числе возможностей интеграции:

    * управление каталогом товаров и витриной,

    * обработка заказов,

    * изменение настроек магазина,

    * получение отчетов.
  version: LATEST
  license:
    name: BSD 3-Clause
    url: https://opensource.org/license/bsd-3-clause/
servers:
  - url: https://api.partner.market.yandex.ru
security:
  - ApiKey: []
  - OAuth:
      - market:partner-api
externalDocs:
  description: Документация :no-translate[API]
  url: https://yandex.ru/dev/market/partner-api/doc/
paths:
  /businesses/{businessId}/settings:
    post:
      tags:
        - businesses
        - dbs
        - fbs
        - fby
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getBusinessSettings
      summary: Настройки кабинета
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getBusinessSettings.md) %}\n\nВозвращает информацию о настройках кабинета, идентификатор которого указан в запросе.\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      responses:
        '200':
          description: Настройки кабинета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessSettingsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns:
    get:
      tags:
        - campaigns
        - dbs
        - express
        - fbs
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getCampaigns
      summary: Список магазинов пользователя
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getCampaigns.md) %}\n\n**Для Api-Key-токена:** возвращает список магазинов в кабинете, для которого выдан токен. Нельзя получить список только подагентских магазинов.\n\n**Для OAuth-токена:** возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/PageNum'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: Магазины пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}:
    get:
      tags:
        - campaigns
        - dbs
        - express
        - fbs
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getCampaign
      summary: Информация о магазине
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getCampaign.md) %}\n\nВозвращает информацию о магазине.\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      responses:
        '200':
          description: Информация о магазине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/settings:
    get:
      tags:
        - campaigns
        - dbs
        - fbs
        - express
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getCampaignSettings
      summary: Настройки магазина
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getCampaignSettings.md) %}\n\nВозвращает информацию о настройках магазина, идентификатор которого указан в запросе.\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      responses:
        '200':
          description: Настройки магазина.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignSettingsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}:
    get:
      tags:
        - orders
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - communication
        - finance-and-accounting
      operationId: getOrder
      summary: Информация об одном заказе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrder.md) %}

        Возвращает информацию о заказе.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый заказ или изменится его статус. А полную информацию можно получить с помощью этого метода или [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация о заказе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders:
    get:
      tags:
        - orders
        - fbs
        - dbs
        - fby
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - communication
        - finance-and-accounting
      operationId: getOrders
      summary: Информация о нескольких заказах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrders.md) %}

        Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.

        По умолчанию данные о тестовых заказах не приходят. Чтобы их получить, передайте значение `true` в параметре `fake`.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый заказ или изменится его статус. А полную информацию можно получить с помощью этого метода или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Доступна фильтрация по нескольким характеристикам заказов:

        * дате оформления;

        * статусу;

        * идентификаторам заказов;

        * этапу обработки или причине отмены;

        * типу (настоящий или тестовый);

        * дате отгрузки в службу доставки;

        * дате и времени обновления заказа.

        Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).

        Максимальный диапазон дат за один запрос к ресурсу — 30 дней.

        Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.

        Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/GetOrdersOrderIds'
        - $ref: '#/components/parameters/GetOrdersStatus'
        - $ref: '#/components/parameters/GetOrdersSubstatus'
        - $ref: '#/components/parameters/GetOrdersFromDate'
        - $ref: '#/components/parameters/GetOrdersToDate'
        - $ref: '#/components/parameters/GetOrdersSupplierShipmentDateFrom'
        - $ref: '#/components/parameters/GetOrdersSupplierShipmentDateTo'
        - $ref: '#/components/parameters/GetOrdersUpdatedAtFrom'
        - $ref: '#/components/parameters/GetOrdersUpdatedAtTo'
        - $ref: '#/components/parameters/GetOrdersDispatchType'
        - $ref: '#/components/parameters/GetOrdersFake'
        - $ref: '#/components/parameters/GetOrdersHasCis'
        - $ref: '#/components/parameters/GetOrdersOnlyWaitingForCancellationApprove'
        - $ref: '#/components/parameters/GetOrdersOnlyEstimatedDelivery'
        - $ref: '#/components/parameters/GetOrdersBuyerType'
        - $ref: '#/components/parameters/PageNum'
        - $ref: '#/components/parameters/PageSize'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      responses:
        '200':
          description: Информация о заказах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/identifiers:
    put:
      tags:
        - orders
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: provideOrderItemIdentifiers
      summary: Передача кодов маркировки единиц товара
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/provideOrderItemIdentifiers.md) %}

        {% note warning "Если вы работаете по модели :no-translate[FBS]" %}

        Используйте метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).

        {% endnote %}

        Передает Маркету коды маркировки для единиц товара в указанном заказе.

        Маркировка товаров в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) **необязательна** для заказов от физических лиц, но **обязательна** для заказов от бизнеса.

        Принимаются коды следующих типов:

        * Коды в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).
        * УИН для ювелирных изделий.
        * РНПТ и ГТД для импортных прослеживаемых товаров.

        {% note warning "Прежде чем работать с этим методом" %}

        Обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).

        {% endnote %}

        Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderItemIdentifiersRequest'
      responses:
        '200':
          description: Ответ `200` обозначает, что коды успешно записались. Ответ содержит краткие сведения о промаркированных товарах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvideOrderItemIdentifiersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/items:
    put:
      tags:
        - orders
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateOrderItems
      summary: Удаление товаров из заказа или уменьшение их числа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOrderItems.md) %}

        {% note warning "Если вы работаете по модели FBS" %}

        Используйте метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).

        {% endnote %}

        Удаляет один или несколько товаров из заказа, если магазин не может поставить их все.

        Заказ должен находится в статусе `"status": "PROCESSING"` этапа обработки `"substatus": "STARTED"`. Изменить состав нельзя после передачи статуса `"substatus": "READY_TO_SHIP"`.

        {% cut "Уменьшить количество одинаковых товаров" %}

        Передайте обновленное значение в параметре `count`.

        {% endcut %}

        {% cut "Удалить товар из заказа" %}

        Передайте значение `0` в параметре `count` или не передавайте `item`.

        {% endcut %}

        Нельзя удалить или уменьшить количество товара, если он:

        * добавлен по акции;
        * составляет 99% стоимости заказа;
        * единственный товар в заказе.

        В таком случае отмените заказ — в методе [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.

        ### Как вернутся деньги {#money}

          Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:

          * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;

          * при оплате через :no-translate[Apple Pay] или :no-translate[Google Pay] — с момента, когда магазин удалит товар из заказа.

        {% endcut %}

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemRequest'
      responses:
        '200':
          description: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/status:
    put:
      tags:
        - orders
        - fbs
        - dbs
        - laas
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateOrderStatus
      summary: Изменение статуса одного заказа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOrderStatus.md) %}

        Изменяет статус заказа. Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
      responses:
        '200':
          description: В случае успешного изменения статуса заказа возвращается обновленная информация о заказе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/status-update:
    post:
      tags:
        - orders
        - fbs
        - dbs
        - laas
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateOrderStatuses
      summary: Изменение статусов нескольких заказов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOrderStatuses.md) %}

        Изменяет статусы нескольких заказов.

        Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"`и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        |**:no-translate[⚙️] Лимит:** 100 000 заказов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusesRequest'
      responses:
        '200':
          description: Возвращается информация об обновленных статусах заказов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes:
    put:
      tags:
        - orders
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setOrderShipmentBoxes
      summary: Передача количества грузовых мест в заказе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setOrderShipmentBoxes.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md)

        {% endnote %}

        Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.

        Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).

        Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.

        Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.

        {% cut "Как было раньше" %}

        Структура тела PUT-запроса:

        ```text translate=no
        {
          "boxes":
          [
            {
              "fulfilmentId": "{string}",
              "weight": {int64},
              "width": {int64},
              "height": {int64},
              "depth": {int64},
              "items":
              [
                {
                  "id": {int64},
                  "count": {int32}
                },
                ...
              ]
            },
            ...
          ]
        }
        ```
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `boxes`       |           | Список грузовых мест.       |

        **Параметры, вложенные в `boxes`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `fulfilmentId`       |  :no-translate[String]   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. |
        | `weight`       | :no-translate[Int64]        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. |
        | `width`       | :no-translate[Int64]   | Ширина грузового места в сантиметрах.       |
        | `height`       | :no-translate[Int64]   | Высота грузового места в сантиметрах.       |
        | `depth`       | :no-translate[Int64]   | Глубина грузового места в сантиметрах.        |
        | `items`       | :no-translate[Int64]   | Список товаров в грузовом месте.       |

        **Параметры, вложенные в `items`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `id`       | :no-translate[Int64]     | Идентификатор товара в рамках заказа.   |
        | `count`    | :no-translate[Int32]     | Количество единиц товара в грузовом месте.       |

        {% endcut %}

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ShipmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderShipmentBoxesRequest'
      responses:
        '200':
          description: Имеет значение только тип ответа. Если ответ `ОК`, количество грузомест записано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOrderShipmentBoxesResponse'
        '400':
          description: Для указанного заказа сейчас нельзя задать количество грузомест, так как у заказа неподходящий статус.
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/cancellation/accept:
    put:
      tags:
        - orders
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: acceptOrderCancellation
      summary: Отмена заказа покупателем
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/acceptOrderCancellation.md) %}

        Подтверждает или отклоняет заявку покупателя на отмену заказа, который передан службе доставки.

        Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (статус `PROCESSING`), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.

        Если заказ уже передан службе доставки (статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов.

          * Служба доставки узнала об отмене до передачи заказа покупателю — подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md).
          * Заказ уже доставлен — отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.

        **Как узнать об отмененных заказах:**

          * Отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его :no-translate[URL] добавьте входной параметр `onlyWaitingForCancellationApprove=true`.
          * В кабинете или через почту — на нее придет уведомление об отмене.
          * Подключите API-уведомления. Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новая заявка на отмену заказа. [{#T}](../../push-notifications/index.md)

        Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.

        |**:no-translate[⚙️] Лимит:** 500 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOrderCancellationRequest'
      responses:
        '200':
          description: Ответ на отмену заказа был успешно передан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods:
    post:
      tags:
        - orders
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      x-restrictions:
        - market-yandex-go
      operationId: provideOrderDigitalCodes
      summary: Передача ключей цифровых товаров
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/provideOrderDigitalCodes.md) %}

        Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации. Если письмо будет доставлено, Маркет переведет заказ в финальный статус `DELIVERED`.

        {% note tip "После передачи кода покупателю статус заказа изменится не сразу" %}

        Подключите API-уведомления — Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда заказ перейдет в статус `DELIVERED`.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.

        Если в один заказ входят несколько ключей, передавайте их все в одном запросе.

        Каждый товар с уникальным `id` передавайте в виде отдельного элемента в массиве `items`, а ключи товара — в массиве `codes`.

        {% cut "Пример" %}

        ```json translate=no
        {
          "items": [
            {
              "id": 1,
              "codes": [
                "code1", "code2", "code3"
              ],
              "slip": "slip",
              "activate_till": "2025-02-18"
            },
            {
              "id": 2,
              "codes": [
                "code4", "code5", "code6"
              ],
              "slip": "slip",
              "activate_till": "2025-02-18"
            }
          ]
        }
        ```
        {% endcut %}

        Товары с одинаковыми `id` также можно передавать разными элементами в массиве `items`.

        {% cut "Пример" %}

        ```json translate=no
        {
          "items": [
            {
              "id": 1,
              "codes": [
                "code1", "code2"
              ],
              "slip": "slip",
              "activate_till": "2025-02-18"
            },
            {
              "id": 1,
              "codes": [
                "code3"
              ],
              "slip": "slip",
              "activate_till": "2025-02-18"
            }
          ]
        }
        ```
        {% endcut %}


        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderDigitalCodesRequest'
      responses:
        '200':
          description: |
            Пустой ответ.

            {% note warning "Ответ 200 сам по себе не значит, что ключи переданы покупателю" %}

            Если письмо с ключами удалось доставить, Маркет переведет заказ в финальный статус `DELIVERED`.

            Статус заказа можно узнать с помощью метода [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) или [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).

            {% endnote %}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/boxes:
    put:
      tags:
        - orders
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setOrderBoxLayout
      summary: Подготовка заказа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setOrderBoxLayout.md) %}

        {% note tip "Подходит и для :no-translate[DBS]" %}

        Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.

        {% endnote %}

        Позволяет выполнить три операции:

        * передать Маркету информацию о распределении товаров по коробкам;
        * передать Маркету коды маркировки для товаров;
        * удалить товар из заказа, если его не оказалось на складе.

        Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудьте перепечатать их и наклеить заново.

        ## Как передать информацию о распределении товаров

        В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:

        * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.

        * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.

        ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.

        ## Как передавать коды маркировки

        {% note info "Маркировка товаров в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) необязательна для заказов от физических лиц" %}

        Для заказов от бизнеса все еще нужно передавать коды маркировки.

        {% endnote %}

        Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)

        Принимаются коды следующих типов:

        * Коды в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).
        * УИН для ювелирных изделий.
        * РНПТ и ГТД для импортных прослеживаемых товаров.

        Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.

        Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.

        {% note warning "Для заказов, в которых есть ювелирные изделия" %}

        Заказ перейдет в статус `READY_TO_SHIP`, только когда:

        1. Вы передадите Маркету УИНы по каждому ювелирному изделию в заказе.
        2. Все УИНы успешно пройдут проверку. [Как получить статусы проверки УИНов](../../reference/orders/getOrderIdentifiersStatus.md)

        {% endnote %}

        ## Как удалить товар из заказа

        Чтобы удалить товар из заказа:

        1. Добавьте в запрос `allowRemove: true`.
        2. Передайте распределение по коробкам без товара, который нужно удалить.

        {% note warning "Удаление нельзя отменить" %}

        Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.

        {% endnote %}

        Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.

        Нельзя удалить или уменьшить количество товара, если он:

        * добавлен по акции;
        * составляет 99% стоимости заказа;
        * единственный товар в заказе.

        Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.

        {% note info "Увеличить заказ нельзя" %}

        С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.

        {% endnote %}

        ## Примеры

        {% cut "Товар умещается в коробку" %}

        Вот как будет выглядеть запрос, если в одной коробке едут:

          * три единицы одного товара, требующего маркировки;
          * одна единица другого товара, не требущего маркировки.

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "fullCount": 3,
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  },
                                  {
                                      "cis": "010304109478gftJ14545762!\u001dhGt264"
                                  },
                                  {
                                      "cis": "010304109478fRs28323ks23!\u001dhet201"
                                  }
                              ]
                          },
                          {
                              "id": 654321,
                              "fullCount": 1
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        {% cut "Товар едет в разных коробках" %}

        Вот как будет выглядеть запрос, если товар едет в двух коробках:

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        {% cut "Одинаковые товары, где каждый едет в нескольких коробках" %}

        Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderBoxLayoutRequest'
      responses:
        '200':
          description: |
            В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOrderBoxLayoutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/external-id:
    post:
      tags:
        - orders
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateExternalOrderId
      summary: Передача или изменение внешнего идентификатора заказа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateExternalOrderId.md) %}

        При первом использовании запроса передает Маркету идентификатор заказа в системе магазина. При повторном — изменяет его в системе Маркета.

        Этот идентификатор отражается в документах отгрузки: акте приема-передачи, листе сборки и ярлыках.

        Передать данные можно до перехода заказа в статус `PROCESSING` с подстатусом `READY_TO_SHIP`.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExternalOrderIdRequest'
      responses:
        '200':
          description: Внешний идентификатор заказа успешно передан или изменен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/identifiers/status:
    post:
      tags:
        - orders
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getOrderIdentifiersStatus
      summary: Статусы проверки УИНов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrderIdentifiersStatus.md) %}

        Возвращает статусы проверки [УИНов](:no-translate[*uin]) в заказе.

        Заказ, в котором есть ювелирные изделия, перейдет в статус `READY_TO_SHIP`, только когда:

        1. Вы передадите Маркету УИНы по каждому ювелирному изделию в заказе — метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).
        2. Все УИНы успешно пройдут проверку.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация по проверке УИНов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderIdentifiersStatusResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/date:
    put:
      tags:
        - order-delivery
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setOrderDeliveryDate
      summary: Изменение даты доставки заказа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setOrderDeliveryDate.md) %}

        Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryDateRequest'
      responses:
        '200':
          description: Успешное изменение даты доставки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/track:
    post:
      tags:
        - order-delivery
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setOrderDeliveryTrackCode
      summary: Передача трек‑номера посылки
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setOrderDeliveryTrackCode.md) %}

        Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки. Если покупатели смогут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.

        Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryTrackCodeRequest'
      responses:
        '200':
          description: Трек‑номер посылки и идентификатор службы доставки были успешно переданы.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/buyer:
    get:
      tags:
        - order-delivery
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getOrderBuyerInfo
      summary: Информация о покупателе — физическом лице
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrderBuyerInfo.md) %}

        Возвращает информацию о покупателе по идентификатору заказа.

        {% note info "Как получить информацию о покупателе, который является юридическим лицом" %}

        Воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).

        {% endnote %}

        Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.

        |**:no-translate[⚙️] Лимит:** 3 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация о покупателе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/verifyEac:
    put:
      tags:
        - order-delivery
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: verifyOrderEac
      summary: Передача кода подтверждения
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/verifyOrderEac.md) %}

        Отправляет Маркету код подтверждения для его проверки.

        **Если у магазина настроена работа с кодами подтверждения:**

          В запросах [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) в параметре `delivery`, вложенном в `order`, возвращается параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.

          Возможные значения:

          * `MERCHANT_TO_COURIER` (временно не возвращается) — продавец передает код курьеру для получения невыкупа;
          * `COURIER_TO_MERCHANT` — курьер передает код продавцу для получения заказа.

          Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOrderEacRequest'
      responses:
        '200':
          description: Проверка кода выполнена успешно.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOrderEacResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit:
    put:
      tags:
        - order-delivery
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateOrderStorageLimit
      summary: Продление срока хранения заказа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOrderStorageLimit.md) %}

        Продлевает срок хранения заказа в пункте выдачи продавца.

        Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.

        Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStorageLimitRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label:
    get:
      tags:
        - order-labels
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: generateOrderLabel
      summary: Готовый ярлык‑наклейка для коробки в заказе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateOrderLabel.md) %}

        Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/generateOrderLabel_ShipmentId'
        - $ref: '#/components/parameters/BoxId'
        - $ref: '#/components/parameters/PageFormat'
      responses:
        '200':
          description: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу с ярлыком.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels:
    get:
      tags:
        - order-labels
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: generateOrderLabels
      summary: Готовые ярлыки‑наклейки на все коробки в одном заказе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateOrderLabels.md) %}

        Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).

        На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/PageFormat'
      responses:
        '200':
          description: PDF‑файл с ярлыками на все коробки.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data:
    get:
      tags:
        - order-labels
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getOrderLabelsData
      summary: Данные для самостоятельного изготовления ярлыков
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrderLabelsData.md) %}

        Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация для печати ярлыков.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderLabelsDataResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/business-buyer:
    post:
      tags:
        - order-business-information
        - fbs
        - fby
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getOrderBusinessBuyerInfo
      summary: Информация о покупателе — юридическом лице
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrderBusinessBuyerInfo.md) %}

        Возвращает информацию о покупателе по идентификатору заказа.

        {% note info "Как получить информацию о покупателе, который является физическим лицом" %}

        Воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        {% endnote %}

        Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.

        |**:no-translate[⚙️] Лимит:** 3 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация о покупателе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessBuyerInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/documents:
    post:
      tags:
        - order-business-information
        - fbs
        - fby
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getOrderBusinessDocumentsInfo
      summary: Информация о документах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrderBusinessDocumentsInfo.md) %}

        Возвращает информацию о документах по идентификатору заказа.

        Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.

        |**:no-translate[⚙️] Лимит:** 3 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
      responses:
        '200':
          description: Информация о документах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessDocumentsInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/returns:
    get:
      tags:
        - returns
        - fbs
        - dbs
        - express
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getReturns
      summary: Список невыкупов и возвратов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getReturns.md) %}

        Получает список невыкупов и возвратов.

        Чтобы получить информацию по одному невыкупу или возврату, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый невыкуп или возврат.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
        - description: |
            Идентификаторы заказов — для фильтрации результатов.

            Несколько идентификаторов перечисляются через запятую без пробела.
          in: query
          name: orderIds
          required: false
          schema:
            type: array
            maxItems: 50
            uniqueItems: true
            items:
              type: integer
              format: int64
              example: 123543
        - description: |
            Статусы невыкупов или возвратов — для фильтрации результатов.

            Несколько статусов перечисляются через запятую.
          in: query
          name: statuses
          required: false
          example: STARTED_BY_USER,WAITING_FOR_DECISION
          schema:
            type: array
            uniqueItems: true
            items:
              $ref: '#/components/schemas/RefundStatusType'
        - description: |
            Тип заказа для фильтрации:

            * `UNREDEEMED` — невыкуп.

            * `RETURN` — возврат.

            Если не указать, в ответе будут и невыкупы, и возвраты.
          in: query
          name: type
          required: false
          schema:
            $ref: '#/components/schemas/ReturnType'
        - description: |
            Начальная дата для фильтрации невыкупов или возвратов по дате обновления.

            Формат: `ГГГГ-ММ-ДД`.
          in: query
          name: fromDate
          required: false
          example: '2022-10-31'
          schema:
            type: string
            format: date
        - description: |
            Конечная дата для фильтрации невыкупов или возвратов по дате обновления.

            Формат: `ГГГГ-ММ-ДД`.
          in: query
          name: toDate
          required: false
          example: '2022-11-30'
          schema:
            type: string
            format: date
        - description: "{% note warning \"Вместо него используйте `fromDate`.\" %}\n\n\_\n\n{% endnote %}\n\nНачальная дата для фильтрации невыкупов или возвратов по дате обновления.\n"
          deprecated: true
          in: query
          name: from_date
          required: false
          example: '2022-10-31'
          schema:
            type: string
            format: date
        - description: "{% note warning \"Вместо него используйте `toDate`.\" %}\n\n\_\n\n{% endnote %}\n\nКонечная дата для фильтрации невыкупов или возвратов по дате обновления.\n"
          deprecated: true
          in: query
          name: to_date
          required: false
          example: '2022-11-30'
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Постраничные невыкупы или возвраты магазина.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}:
    get:
      tags:
        - returns
        - fbs
        - dbs
        - express
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getReturn
      summary: Информация о невыкупе или возврате
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getReturn.md) %}

        Получает информацию по одному невыкупу или возврату.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый невыкуп или возврат.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ReturnId'
      responses:
        '200':
          description: Детали невыкупа или возврата.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision:
    post:
      tags:
        - returns
        - dbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setReturnDecision
      summary: Принятие или изменение решения по возврату
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setReturnDecision.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md)

        {% endnote %}


        Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ReturnId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReturnDecisionRequest'
      responses:
        '200':
          description: Детали возврата.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit:
    post:
      tags:
        - returns
        - dbs
        - fbs
        - express
        - fby
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: submitReturnDecision
      summary: Передача и подтверждение решения по возврату
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/submitReturnDecision.md) %}

        Позволяет выполнить одну из операций:

        * **Для моделей :no-translate[FBS], Экспресс и :no-translate[DBS]:** передать список решений по возврату и подтвердить их.

        * **Для модели :no-translate[DBS]:** подтвердить решение, переданное в [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md). Для этого используйте запрос без тела.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ReturnId'
      requestBody:
        required: false
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitReturnDecisionRequest'
      responses:
        '200':
          description: Статус выполнения операции.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application:
    get:
      tags:
        - returns
        - fbs
        - fby
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getReturnApplication
      summary: Получение заявления на возврат
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getReturnApplication.md) %}

        Загружает заявление покупателя на возврат товара.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ReturnId'
      responses:
        '200':
          description: Заявление на возврат.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}:
    get:
      tags:
        - returns
        - fbs
        - dbs
        - express
        - fby
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getReturnPhoto
      summary: Получение фотографий товаров в возврате
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getReturnPhoto.md) %}

        Получает фотографии товаров, которые покупатель приложил к заявлению на возврат.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OrderId'
        - $ref: '#/components/parameters/ReturnId'
        - $ref: '#/components/parameters/ItemId'
        - $ref: '#/components/parameters/ImageHash'
      responses:
        '200':
          description: Фотография товаров.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /regions:
    get:
      tags:
        - regions
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: searchRegionsByName
      summary: Поиск регионов по их имени
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/searchRegionsByName.md) %}

        Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.

        Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**:no-translate[⚙️] Лимит:** 50 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/RegionName'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      responses:
        '200':
          description: Список найденных регионов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /regions/{regionId}:
    get:
      tags:
        - regions
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: searchRegionsById
      summary: Информация о регионе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/searchRegionsById.md) %}

        Возвращает информацию о регионе.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**:no-translate[⚙️] Лимит:** 50 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/RegionId'
      responses:
        '200':
          description: Найденный регион.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /regions/{regionId}/children:
    get:
      tags:
        - regions
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: searchRegionChildren
      summary: Информация о дочерних регионах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/searchRegionChildren.md) %}

        Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**:no-translate[⚙️] Лимит:** 50 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/RegionId'
        - $ref: '#/components/parameters/PageNum'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: Регионы, являющиеся дочерними к указанному в запросе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionWithChildrenResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /regions/countries:
    post:
      tags:
        - regions
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getRegionsCodes
      summary: Список допустимых кодов стран
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getRegionsCodes.md) %}

        Возвращает список стран с их кодами в формате :no-translate[ISO 3166-1 alpha-2].

        Страна производства `countryCode` понадобится при продаже товаров из-за рубежа для бизнеса. [Инструкция](../../step-by-step/business-info.md)

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      responses:
        '200':
          description: Список стран с их кодами в формате :no-translate[ISO 3166-1 alpha-2].
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsCodesResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/shipments/reception-transfer-act:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentReceptionTransferAct
      summary: Подтверждение ближайшей отгрузки и получение акта приема-передачи для нее
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentReceptionTransferAct.md) %}\n\nЗапрос подтверждает ближайшую отгрузку и возвращает акт приема-передачи в формате :no-translate[PDF.\n\n{% note warning \"Экспресс‑доставка\" %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Яндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nВ акт входят собранные и готовые к отправке заказы, которые отгружаются в сортировочный центр или пункт приема или курьерам Маркета.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut \"Данные, из которых Маркет формирует акт\" %}\n\n#|\n|| **Данные в акте**\t                                 | **Описание**                                                                                                                                                                                                                                                         ||\n|| Отправитель\t                                       | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         ||\n|| Исполнитель                                         | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                ||\n|| № отправления в системе заказчика                   |\n  {% note warning \"Поле больше не используется\" %}\n\n  \_\n\n  {% endnote %}\n\n  Ваш идентификатор заказа, который вы указали в ответе на запрос `POST order/accept` от Маркета.                                                                                                                                                                      ||\n|| № отправления в системе исполнителя (субподрядчика) | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             ||\n|| Объявленная ценность                                | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       ||\n|| Стоимость всех товаров в заказе                     | Стоимость всех заказанных товаров.                                                                                                                                                                                                                                   ||\n|| Вес                                                 | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). ||\n|| Количество мест                                     | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     ||\n|#\n\n{% endcut %}\n\nВ распечатанном акте укажите отправителя и исполнителя. Они должны подписать акт и указать фамилию и инициалы рядом с подписью. При необходимости также заполните реквизиты доверенности.\n\n|**:no-translate[⚙️] Лимит:** 100 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - description: Идентификатор склада.
          in: query
          name: warehouse_id
          required: false
          example: 123123
          schema:
            type: integer
            format: int32
            minimum: 1
        - description: "Логин пользователя в Яндекс\_ID, от имени которого будет подписываться электронный акт приема-передачи.\n\nУказывается без `@yandex.ru`.\n\nГде его найти:\n\n* на странице [Яндекс\_ID](https://id.yandex.ru);\n* в [кабинете продавца на Маркете](https://partner.market.yandex.ru/):\n\n  * слева снизу под иконкой пользователя;\n  * на странице **Настройки** → **Сотрудники и доступы**.\n"
          in: query
          name: signatory
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Акт приема-передачи в формате :no-translate[PDF].
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          description: |
            | **Описание**                                                                                                                  | **Пояснение**                                                                    | **Способы решения|
            |-------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------||
            | :no-translate[**Closest shipment for reception transfer act generation not found**]                                                          | Отгрузки в статусе **Можно обрабатывать** не найдены.                            | Создайте заявку на поставку или дождитесь перехода существующей заявки в нужный статус.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |
            | :no-translate[**No orders for closest shipment found**]                                                                                      | Нет заказов в ближайшей отгрузке.                                                | Проверьте, что у заказов параметр `status` имеет значение `PROCESSING`, а параметр `substatus` — `READY_TO_SHIP`. Получить статусы и даты отгрузки заказов можно с помощью запросов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) и [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md), изменить статусы заказов — с помощью запросов [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и [POST campaigns/{campaignId}/orders/status‑update](../../reference/orders/updateOrderStatuses.md).  |
            | :no-translate[**Some orders are in the process of being excluded from shipment {orders id}. Please wait up to 30 minutes and try again**]    | Идентификаторы заказов в ближайшей отгрузке, которые в процессе удаления из нее. | Перенос заказов может занимать до 30 минут. Дождитесь окончания переноса и попробуйте снова.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |
            | :no-translate[**Some orders have not been processed yet. Please change the status of orders to READY_TO_SHIP and try again. {orders id}**]   | Идентификаторы заказов в ближайшей отгрузке, которые еще не обработаны.          | Передайте для заказов с указанными идентификаторами `status: PROCESSING` и `substatus: READY_TO_SHIP` и попробуйте еще раз. Изменить статусы заказов можно с помощью запросов [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и [POST campaigns/{campaignId}/orders/status‑update](../../reference/orders/updateOrderStatuses.md).                                                                                                                                                                                                                    |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getShipment
      summary: Получение информации об одной отгрузке
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getShipment.md) %}

        Возвращает информацию об отгрузке по ее идентификатору.
        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
        - $ref: '#/components/parameters/CancelledOrders'
      responses:
        '200':
          description: Найденная отгрузка.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getShipmentOrdersInfo
      summary: Получение информации о возможности печати ярлыков
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getShipmentOrdersInfo.md) %}

        Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке.
        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      responses:
        '200':
          description: Информация по годным/негодным для печати ярлыков заказам в отгрузке.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentOrdersInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm:
    post:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: confirmShipment
      summary: Подтверждение отгрузки
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/confirmShipment.md) %}

        Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов.
        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmShipmentRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentAct
      summary: Получение акта приема-передачи
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentAct.md) %}\n\n{% note warning \"Экспресс‑доставка\" %}\n\nЕсли ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.\n\n{% endnote %}\n\nЗапрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате :no-translate[PDF]. В акте содержатся собранные и готовые к отправке заказы.\n\nПри формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:\n\n{% cut \"Данные, из которых Маркет формирует акт\" %}\n\n#|\n|| **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         ||\n|| Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        ||\n|| Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         ||\n|| Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                ||\n|| № отправления в системе заказчика                         |\n  {% note warning \"Поле больше не используется\" %}\n\n  \_\n\n  {% endnote %}\n\n  Ваш идентификатор заказа, который вы указали в ответе на запрос `POST order/accept` от Маркета.                                                                                                                                                                      ||\n|| № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             ||\n|| Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       ||\n|| Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). ||\n|| Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     ||\n|#\n\n{% endcut %}\n\nВ распечатанном акте укажите отправителя и исполнителя. Они должны подписать акт и указать фамилию и инициалы рядом с подписью. При необходимости также заполните реквизиты доверенности.\n\n|**:no-translate[⚙️] Лимит:** 100 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      responses:
        '200':
          description: Акт приема-передачи для отгрузки в формате :no-translate[PDF].
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentInboundAct
      summary: Получение фактического акта приема-передачи
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentInboundAct.md) %}

        Возвращает фактический акт приема-передачи для заданной отгрузки.

        Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.

        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      responses:
        '200':
          description: Акт в формате :no-translate[PDF].
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentTransportationWaybill
      summary: Получение транспортной накладной
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentTransportationWaybill.md) %}

        Возвращает транспортную накладную для заданной отгрузки, если Маркет забирает товары с вашего склада. Подробнее о таком способе отгрузки читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/fbs/settings/shipment#at-your-warehouse).

        Накладная не возвращается, если вы привозите товары в ПВЗ или сортировочный центр.

        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      responses:
        '200':
          description: Транспортная накладная в формате :no-translate[XLSX].
          content:
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentDiscrepancyAct
      summary: Получение акта расхождений
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentDiscrepancyAct.md) %}

        Возвращает акт расхождений для заданной отгрузки.
        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      responses:
        '200':
          description: Акт расхождений в формате :no-translate[XLSX].
          content:
            application/vnd.ms-excel:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets:
    put:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: setShipmentPalletsCount
      summary: Передача количества упаковок в отгрузке
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/setShipmentPalletsCount.md) %}

        Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).

        Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md).
        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetShipmentPalletsCountRequest'
      responses:
        '200':
          description: Имеет значение только тип ответа. Если ответ `ОК`, количество упаковок записано.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels:
    get:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: downloadShipmentPalletLabels
      summary: Ярлыки для доверительной приемки
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/downloadShipmentPalletLabels.md) %}

        PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).

        Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.

        Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md).
        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
        - $ref: '#/components/parameters/ShipmentPalletLabelsPageFormat'
      responses:
        '200':
          description: PDF‑файл с ярлыками на все упаковки в отгрузке.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments:
    put:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: searchShipments
      summary: Получение информации о нескольких отгрузках
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/searchShipments.md) %}

        Возвращает информацию об отгрузках по заданным параметрам:

        * дате;
        * статусу;
        * идентификаторам заказов.

        Результаты возвращаются постранично.
        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchShipmentsRequest'
      responses:
        '200':
          description: Найденные отгрузки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchShipmentsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer:
    post:
      tags:
        - shipments
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: transferOrdersFromShipment
      summary: Перенос заказов в следующую отгрузку
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/transferOrdersFromShipment.md) %}

        Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)

        Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.

        {% note warning "Такие переносы снижают индекс качества магазина" %}

        Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)

        {% endnote %}

        Переносить заказы можно, если до формирования отгрузки осталось больше получаса.

        Перенос происходит не мгновенно, а занимает несколько минут.

        |**:no-translate[⚙️] Лимит:** 200 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_ShipmentId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOrdersFromShipmentRequest'
      responses:
        '200':
          description: Запрос на перенос заказов проверен и принят, и они будут перенесены спустя несколько минут.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          description: "Ошибка 400 обозначает, что в переданном вами списке заказов что-то не так — например, не все они относятся к заданной отгрузке. В сообщении об ошибке будут все подробности.\n\n{% note warning \"Частичное выполнение запроса невозможно\" %}\n\nЕсли в списке есть хотя бы один проблемный идентификатор, не будет перенесен ни один заказ из списка.\n\n{% endnote %}\n\n\_\n"
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings/delete:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: deleteOffers
      summary: Удаление товаров из каталога
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteOffers.md) %}

        Удаляет товары из каталога.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersRequest'
      responses:
        '200':
          description: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getOfferMappings
      summary: Информация о товарах в каталоге
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOfferMappings.md) %}

        Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.

        Можно использовать тремя способами:
        * задать список интересующих :no-translate[SKU];
        * задать фильтр — в этом случае результаты возвращаются постранично;
        * не передавать тело запроса, чтобы получить список всех товаров в каталоге.

        |**:no-translate[⚙️] Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/CatalogLanguage'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferMappingsRequest'
      responses:
        '200':
          description: Информация о товарах в каталоге.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings/update:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: updateOfferMappings
      summary: Добавление товаров в каталог и изменение информации о них
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOfferMappings.md) %}

        Добавляет товары в каталог и передает:

        * их категории на Маркете и категорийные характеристики;
        * основные характеристики;
        * цены на товары в кабинете.

        Также объединяет товары на карточке, редактирует и удаляет информацию об уже добавленных товарах, в том числе цены в кабинете и категории товаров.

        Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).

        {% cut "Добавить новый товар" %}

        Передайте его с новым идентификатором, который раньше никогда не использовался в каталоге.

        Обязательно укажите параметры: `offerId`, `name`, `marketCategoryId`, `pictures`, `vendor`, `description`.

        Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой.

        Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**:no-translate[SKU] на Маркете**) в поле `marketSKU`.

        **Для продавцов Market Yandex Go:**

        Когда вы добавляете товары в каталог, указывайте значения параметров `name` и `description` на русском языке. Чтобы на витрине они отображались и на другом языке, еще раз выполните запрос `POST businesses/{businessId}/offer-mappings/update`, где укажите:

          * язык в параметре `language`;
          * значения параметров `name` и `description` на указанном языке.

          Повторно передавать остальные характеристики товара не нужно.

        {% endcut %}

        {% cut "Изменить информацию о товаре" %}

        Передайте новые данные, указав в `offerId` соответствующий **ваш :no-translate[SKU]**.

        Поля, в которых ничего не меняется, можно не передавать.

        {% endcut %}

        {% cut "Удалить переданные ранее параметры товара" %}

        В `deleteParameters` укажите значения параметров, которые хотите удалить. Можно передать сразу несколько значений.

        Для параметров с типом `string` также можно передать пустое значение.

        {% endcut %}

        Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.

        {% note warning "Правила использования :no-translate[SKU]" %}

        * У каждого товара :no-translate[SKU] должен быть свой.

        * Уже заданный :no-translate[SKU] нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

        :no-translate[SKU] товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

        {% endnote %}

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 100 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/CatalogLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingsRequest'
      responses:
        '200':
          description: |
            Запрос выполнен корректно, данные обработаны.

            {% note warning "Ответ 200 сам по себе не значит, что переданные значения корректны" %}

            Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.

            Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.

            {% endnote %}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferMappingsResponse'
        '400':
          description: |
            Убедитесь, что все обязательные поля заполнены.

            ⚠️ Даже если проблема связана всего с одним товаром в запросе, в каталог не отправится ни один.

            | **Описание**                                                                      | **Пояснение**                                                                                                   | **Способы решения**                                                                                                                                                                                                                                |
            |-----------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            | :no-translate[**Offer at index ... cannot have parameter ... deleted and set at the same time**] | Можно передать либо значение параметра в `deleteParameters`, либо соответствующий параметр в `UpdateOfferDTO`.  |Чтобы удалить ранее переданный параметр, укажите его значение в `deleteParameters` и не передавайте в `UpdateOfferDTO`.<br><br>Если хотите установить новое значение параметра, передайте его в `UpdateOfferDTO` и не указывайте в `deleteParameters`.|
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings/suggestions:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getSuggestedOfferMappings
      summary: Просмотр карточек на Маркете, которые подходят вашим товарам
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getSuggestedOfferMappings.md) %}\n\nВозвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.\n\nПользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.\n\n**Как пользоваться запросом**\n\n1. Передайте Маркету список товаров, которые нужно проверить.\n2. В ответ вы получите список :no-translate[SKU] на Маркете с расшифровкой: названием, идентификатором модели, категорией.\n3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`.\n4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.\n\n{% note info \"Как определить `marketSku` товара, найденного на Маркете?\" %}\n\nОн есть в адресе страницы товара — расположен после `sku=`.\n\nНапример, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 100\_000 товаров в час|\n|-|\n"
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingsRequest'
      responses:
        '200':
          description: |
            Подобранные карточки на Маркете.

            По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings/archive:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: addOffersToArchive
      summary: Добавление товаров в архив
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/addOffersToArchive.md) %}

        Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.

        {% note warning "В архив нельзя отправить товар, который хранится на складе Маркета" %}

        Вначале такой товар нужно распродать или вывезти.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOffersToArchiveRequest'
      responses:
        '200':
          description: |
            Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.

            Список успешно добавленных товаров не возвращается.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOffersToArchiveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-mappings/unarchive:
    post:
      tags:
        - business-offer-mappings
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: deleteOffersFromArchive
      summary: Удаление товаров из архива
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteOffersFromArchive.md) %}

        Восстанавливает товары из архива.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersFromArchiveRequest'
      responses:
        '200':
          description: |
            Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.

            Список успешно восстановленных товаров не возвращается.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersFromArchiveResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-mapping-entries:
    get:
      tags:
        - offer-mappings
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getOfferMappingEntries
      summary: Список товаров в каталоге
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOfferMappingEntries.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md)

        {% endnote %}

        Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:

        * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.
        * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.

        Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.

        {% note info "Как считается количество товаров в каталоге магазина" %}

        По данным за последние семь дней (не включая сегодня).

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OfferIds'
        - $ref: '#/components/parameters/OfferShopSkus'
        - $ref: '#/components/parameters/OfferMappingKind'
        - $ref: '#/components/parameters/OfferProcessingStatuses'
        - $ref: '#/components/parameters/OfferAvailabilityStatuses'
        - $ref: '#/components/parameters/CategoryIds'
        - $ref: '#/components/parameters/VendorNames'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      responses:
        '200':
          description: Информация о товарах в каталоге.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingEntriesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-mapping-entries/updates:
    post:
      tags:
        - offer-mappings
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: updateOfferMappingEntries
      summary: Добавление и редактирование товаров в каталоге
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOfferMappingEntries.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md)

        {% endnote %}

        Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.

        Информацию о товарах нужно передать в теле POST-запроса.

        У каждого товара должен быть ваш :no-translate[SKU] — уникальный код, который вы используете для идентификации товара:

        * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш :no-translate[SKU], которого еще нет в каталоге.
        * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш :no-translate[SKU] этого товара в каталоге.

        В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.

        Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (:no-translate[SKU] на Маркете) во входном параметре `mapping`. Получить :no-translate[SKU] на Маркете рекомендованной карточки товара можно через кабинет. Если :no-translate[SKU] на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код :no-translate[400 Bad Request], и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        В одном запросе можно добавить не более 500 товаров.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 5 000 товаров в минуту|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingEntryRequest'
      responses:
        '200':
          description: Статус выполнения операции.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-mapping-entries/suggestions:
    post:
      tags:
        - offer-mappings
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getSuggestedOfferMappingEntries
      summary: Рекомендованные карточки для товаров
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getSuggestedOfferMappingEntries.md) %}

        Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.

        Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — :no-translate[SKU] на Маркете. Он указывается в :no-translate[URL] карточки товара, после :no-translate[«...sku=»], например:

        ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##

        Чтобы получить для товаров рекомендованные :no-translate[SKU] на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.

        Полученные :no-translate[SKU] можно передать вместе с информацией о ваших товарах с помощью запроса [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        В одном запросе можно получить не более 500 рекомендаций.

        |**:no-translate[⚙️] Лимит:** 100 000 рекомендаций в час|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesRequest'
      responses:
        '200':
          description: Информация о товарах в каталоге.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-prices/updates:
    post:
      tags:
        - prices
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - pricing
      operationId: updateBusinessPrices
      summary: Установка цен на товары для всех магазинов
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/updateBusinessPrices.md) %}\n\nУстанавливает цены, которые действуют во всех магазинах. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\nПри необходимости передавайте НДС с помощью параметра `vat` в запросе [POST campaigns/{campaignId}/offers/update](../../reference/assortment/updateCampaignOffers.md).\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 10\_000 товаров в минуту, не более 500 товаров в одном запросе|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessPricesRequest'
      responses:
        '200':
          description: Маркет принял информацию о новых ценах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-prices/updates:
    post:
      tags:
        - prices
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - pricing
      operationId: updatePrices
      summary: Установка цен на товары в конкретном магазине
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/updatePrices.md) %}\n\nУстанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).\n\n{% note warning \"Метод только для отдельных магазинов\" %}\n\nВам доступен этот метод, если в кабинете продавца на Маркете есть возможность установить уникальные цены в отдельных магазинах. Как это проверить — в методе [POST businesses/{businessId}/settings](../../reference/businesses/getBusinessSettings.md) в параметре `onlyDefaultPrice` возвращается значение `false`.\n\nВ ином случае используйте метод управления ценами, которые действуют во всех магазинах, — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).\n\n{% endnote %}\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 10\_000 товаров в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricesRequest'
      responses:
        '200':
          description: Маркет принял информацию о новых ценах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          description: |
            Возможны две причины такой ошибки.

            * В кабинете используются цены для всех магазинов. Установить цену для отдельного магазина не получится.
            * Магазин находится в процессе переноса в другой кабинет.
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-prices:
    get:
      tags:
        - prices
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getPrices
      summary: Список цен
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getPrices.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md)

        {% endnote %}

        Возвращает список цен, установленных вами на товары любым способом: например, через :no-translate[API] или в файле с каталогом.

        {% note info "Как считается общее количество товаров" %}

        По данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.

        {% endnote %}

        Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).

        |**:no-translate[⚙️] Лимит:** 150 000 товаров в минуту|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
        - description: Фильтр по нахождению в архиве.
          in: query
          name: archived
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Список всех товаров с установленными ценами.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - prices
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getPricesByOfferIds
      summary: Просмотр цен на указанные товары в конкретном магазине
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getPricesByOfferIds.md) %}

        Возвращает список цен на указанные товары в магазине.

        {% note warning "Метод только для отдельных магазинов" %}

        Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.

        Для просмотра цен, которые действуют во всех магазинах, используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 150 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPricesByOfferIdsRequest'
      responses:
        '200':
          description: Список товаров с установленными для заданного магазина ценами.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesByOfferIdsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offer-prices/suggestions:
    post:
      tags:
        - prices
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getSuggestedPrices
      summary: Цены для продвижения товаров
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getSuggestedPrices.md) %}\n\n{% note warning \"Не используйте его, это может привести к ошибкам. Информацию о ценах вы можете получить в помощью [отчета «Цены на рынке»](../../reference/reports/generatePricesReport.md).\" %}\n\n\_\n\n{% endnote %}\n\n{% note warning \"Метод только для некоторых магазинов\" %}\n\nЭтот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.\n\n{% endnote %}\n\nВозвращает цены для продвижения товаров, которые вы размещаете на Маркете.\n\nТовары, для которых нужно получить цены, передаются в теле POST-запроса.\n\nЦены для продвижения зависят от цен, установленных на товары другими магазинами. Если один товар поставляют несколько магазинов, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.\n\nВыходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.\n\nУстановить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.\n\nПодробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).\n\n|**:no-translate[⚙️] Лимит:** 100 000 товаров в час|\n|-|\n"
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestPricesRequest'
      responses:
        '200':
          description: Список цен для продвижения на Маркете.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestPricesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-prices:
    post:
      tags:
        - prices
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getDefaultPrices
      summary: Просмотр цен на указанные товары во всех магазинах
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getDefaultPrices.md) %}\n\nВозвращает список цен, которые вы установили для всех магазинов любым способом. Например, через API или с помощью Excel-шаблона.\n\nО способах установки цен читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).\n\n|**:no-translate[⚙️] Лимит:** 10\_000 товаров в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetDefaultPricesRequest'
      responses:
        '200':
          description: Список всех товаров с установленными ценами.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDefaultPricesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/price-quarantine:
    post:
      tags:
        - price-quarantine
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getBusinessQuarantineOffers
      summary: Список товаров, находящихся в карантине по цене в кабинете
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getBusinessQuarantineOffers.md) %}

        Возвращает список товаров, которые находятся в карантине по цене, установленной для всех магазинов кабинета.

        Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).

        {% note info "Что такое карантин?" %}

        Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
      responses:
        '200':
          description: Список товаров в карантине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/price-quarantine/confirm:
    post:
      tags:
        - price-quarantine
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - pricing
      operationId: confirmBusinessPrices
      summary: Удаление товара из карантина по цене в кабинете
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/confirmBusinessPrices.md) %}

        Подтверждает во всех магазинах цену на товары, которые попали в карантин, и удаляет их из карантина.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
      responses:
        '200':
          description: Ответ 200 обозначает, что цены подтверждены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/price-quarantine:
    post:
      tags:
        - price-quarantine
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      operationId: getCampaignQuarantineOffers
      summary: Список товаров, находящихся в карантине по цене в магазине
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getCampaignQuarantineOffers.md) %}

        Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.

        Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).

        {% note info "Что такое карантин?" %}

        Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
      responses:
        '200':
          description: Список товаров в карантине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/price-quarantine/confirm:
    post:
      tags:
        - price-quarantine
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - pricing
      operationId: confirmCampaignPrices
      summary: Удаление товара из карантина по цене в магазине
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/confirmCampaignPrices.md) %}

        Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
      responses:
        '200':
          description: Ответ 200 обозначает, что цены подтверждены.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/hidden-offers:
    post:
      tags:
        - hidden-offers
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: addHiddenOffers
      summary: Скрытие товаров и настройки скрытия
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/addHiddenOffers.md) %}

        Скрывает товары магазина на Маркете.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        description: Запрос на скрытие оферов.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHiddenOffersRequest'
      responses:
        '200':
          description: Настройки скрытия получены и скоро вступят в силу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - hidden-offers
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getHiddenOffers
      summary: Информация о скрытых вами товарах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getHiddenOffers.md) %}

        Возвращает список скрытых вами товаров для заданного магазина.

        В списке будут товары, скрытые любым способом — через :no-translate[API], с помощью YML-фида, в кабинете и так далее.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/params_OfferIds'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      responses:
        '200':
          description: Информация о скрытых вами товарах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHiddenOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/hidden-offers/delete:
    post:
      tags:
        - hidden-offers
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: deleteHiddenOffers
      summary: Возобновление показа товаров
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteHiddenOffers.md) %}

        Возобновляет показ скрытых вами товаров магазина на Маркете.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        description: Запрос на возобновление показа оферов.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHiddenOffersRequest'
      responses:
        '200':
          description: Показ товаров возобновлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offers/stocks:
    put:
      tags:
        - stocks
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: updateStocks
      summary: Передача информации об остатках
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/updateStocks.md) %}\n\nПередает данные об остатках товаров на витрине.\n\nДля группы складов передавайте остатки только для **одного любого склада**. Информация для остальных складов в этой группе обновится автоматически.\n\nОбязательно указывайте :no-translate[SKU] **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных :no-translate[SKU].\n\n{% note info \"Данные в каталоге обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 100\_000 товаров в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStocksRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - stocks
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getStocks
      summary: Информация об остатках и оборачиваемости
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getStocks.md) %}

        Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](:no-translate[*turnover]) товаров (для модели :no-translate[FBY]).

        **Для модели :no-translate[FBY]:** информация об остатках может возвращаться с нескольких складов Маркета, у которых будут разные `warehouseId`. Получить список складов Маркета можно с помощью метода [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).

        {% note info "По умолчанию данные по оборачивамости не возращаются" %}

        Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 100 000 товаров в минуту|
        |-|

        [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWarehouseStocksRequest'
      responses:
        '200':
          description: Остатки товаров на складах.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehouseStocksResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /delivery/services:
    get:
      tags:
        - delivery-services
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getDeliveryServices
      summary: Справочник служб доставки
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getDeliveryServices.md) %}

        Возвращает справочник служб доставки: идентификаторы и наименования.
        |**:no-translate[⚙️] Лимит:** 5 000 запросов в час|
        |-|
      responses:
        '200':
          description: Информация о службах доставки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliveryServicesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/stats/orders:
    post:
      tags:
        - orders-stats
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getOrdersStats
      summary: Детальная информация по заказам
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getOrdersStats.md) %}\n\nВозвращает информацию по заказам на Маркете, в которых есть ваши товары.\n\nС помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом и\_т.\_п.\n\n{% note tip \"Информация по созданным или обновленным заказам может появиться с задержкой до 40 минут\" %}\n\nЧтобы получить данные без задержки, используйте [метод получения информации о заказах](../../reference/orders/getOrders.md).\n\n{% endnote %}\n\nВ одном запросе можно получить информацию не более чем по 200 заказам.\n\n|**:no-translate[⚙️] Лимит:** 1 000 000 заказов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrdersStatsRequest'
      responses:
        '200':
          description: Информация по заказам.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersStatsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/stats/skus:
    post:
      tags:
        - goods-stats
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getGoodsStats
      summary: Отчет по товарам
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getGoodsStats.md) %}\n\nВозвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.\n\n|**:no-translate[⚙️] Лимит:** 5\_000 товаров в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsStatsRequest'
      responses:
        '200':
          description: Отчет по товарам.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsStatsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/info/{reportId}:
    get:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getReportInfo
      summary: Получение заданного отчета или документа
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getReportInfo.md) %}

        Возвращает статус генерации заданного отчета или документа и, если он готов, ссылку для скачивания.

        Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета или документа. [Инструкция](../../step-by-step/reports.md)

        |**:no-translate[⚙️] Лимит:** 100 запросов в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportId'
      responses:
        '200':
          description: "Статус генерации отчета или документа и ссылка, если она уже есть.\n\n{% note tip \"Статус генерации `FAILED` или `NO_DATA`\" %}\n\nПроверьте корректность запроса на генерацию. Например, верно ли указан идентификатор кампании, период или номер платежного поручения.\n\n{% endnote %}\n\n\_\n"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/united-netting/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
      operationId: generateUnitedNettingReport
      summary: Отчет по платежам
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateUnitedNettingReport.md) %}

        Запускает генерацию отчета по платежам за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#all-pay)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        Тип отчета зависит от того, какие поля заполнены в запросе:

        #|
        || **Тип отчета** | **Какие поля нужны** ||
        || О платежах за период | `dateFrom` и `dateTo` ||
        || О платежном поручении | `bankOrderId` и `bankOrderDateTime` ||
        || [О баллах Маркета](:no-translate[*баллы_маркета]) | `monthOfYear` ||
        |#

        Заказать отчеты нескольких типов одним запросом нельзя.

        {% include notitle [:no-translate[reports]](../../_auto/reports/united/netting/generator/united_netting.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
        - $ref: '#/components/parameters/ReportLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedNettingReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/united-marketplace-services/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
      operationId: generateUnitedMarketplaceServicesReport
      summary: Отчет по стоимости услуг
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateUnitedMarketplaceServicesReport.md) %}

        Запускает генерацию отчета по стоимости услуг за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#reports)

        Тип отчета зависит от того, какие поля заполнены в запросе:

        |**Тип отчета**               |**Какие поля нужны**             |
        |-----------------------------|---------------------------------|
        |По дате начисления услуги    |`dateFrom` и `dateTo`            |
        |По дате формирования акта    |`year` и `month`                 |

        Заказать отчеты обоих типов одним запросом нельзя.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/united/services/generator/united_marketplace_services.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
        - $ref: '#/components/parameters/ReportLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedMarketplaceServicesReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/united-orders/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - promotion
        - inventory-and-order-processing
      operationId: generateUnitedOrdersReport
      summary: Отчет по заказам
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateUnitedOrdersReport.md) %}

        Запускает генерацию отчета по заказам за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#get-report)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/united/orders/generator/united_orders.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
        - $ref: '#/components/parameters/ReportLanguage'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedOrdersRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/united-returns/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - inventory-and-order-processing
      operationId: generateUnitedReturnsReport
      summary: Отчет по невыкупам и возвратам
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateUnitedReturnsReport.md) %}

        Запускает генерацию сводного отчета по невыкупам и возвратам за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/orders/returns/logistic#rejected-orders)

        Отчет содержит информацию о невыкупах и возвратах за указанный период, а также о тех, которые готовы к выдаче.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/united/returns/generator/united_returns.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedReturnsRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/goods-realization/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - express
        - dbs
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
      operationId: generateGoodsRealizationReport
      summary: Отчет по реализации
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateGoodsRealizationReport.md) %}

        Запускает генерацию отчета по реализации за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#sales-report)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% list tabs %}

        - :no-translate[FBY, FBS,] Экспресс

          {% include notitle [:no-translate[reports]](../../_auto/reports/united/statistics/generator/united_statistics_v2.md) %}

        - :no-translate[DBS]

          {% include notitle [:no-translate[reports]](../../_auto/reports/united/statistics/generator/united_statistics_v2_dbs.md) %}

        {% endlist %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsRealizationReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/prices/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - pricing
        - promotion
      operationId: generatePricesReport
      summary: Отчет «Цены на рынке»
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generatePricesReport.md) %}

        Запускает генерацию отчета «Цены на рынке».

        В отчете возвращается информация только по 50 000 товаров. Если у вас их больше, используйте фильтры.

        {% note warning "Данные в этом отчете постоянно обновляются" %}

        Поэтому информация в нем и в кабинете продавца на Маркете на странице **Цены** может отличаться.

        {% endnote %}

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/prices/business_prices_v2.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePricesReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/stocks-on-warehouses/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: generateStocksOnWarehousesReport
      summary: Отчет по остаткам на складах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateStocksOnWarehousesReport.md) %}

        Запускает генерацию отчета по остаткам на складах. [Что это за отчет](https://yandex.ru/support/marketplace/ru/storage/logistics#remains-history)

        **Какая информация вернется:**

        * Для модели :no-translate[FBY] — об остатках на складах Маркета.
        * Для остальных моделей, если указать `businessId`, — об остатках на всех складах магазинов в кабинете, кроме :no-translate[FBY]. Используйте фильтр `campaignIds`, чтобы указать определенные магазины.
        * Для остальных моделей, если указать `campaignId`, — об остатках на соответствующем складе магазина. Этот тип отчета скоро станет недоступен.

        ⚠️ Не передавайте одновременно `campaignId` и `businessId`.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% list tabs %}

        - Склад Маркета

          {% include notitle [:no-translate[reports]](../../_auto/reports/stocks/stocks_on_warehouses.md) %}

        - Склад магазина

          {% include notitle [:no-translate[reports]](../../_auto/reports/offers/mass/mass_shared_stocks_business_csv_config.md) %}

        - Все склады магазинов в кабинете, кроме :no-translate[FBY]

          {% include notitle [:no-translate[reports]](../../_auto/reports/offers/stocks_business_config.md) %}

        {% endlist %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStocksOnWarehousesReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/goods-movement/generate:
    post:
      tags:
        - reports
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
        - inventory-and-order-processing
      operationId: generateGoodsMovementReport
      summary: Отчет по движению товаров
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateGoodsMovementReport.md) %}

        Запускает генерацию отчета по движению товаров. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/sku/movement/movement_config.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsMovementReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/shows-sales/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
      operationId: generateShowsSalesReport
      summary: Отчет «Аналитика продаж»
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateShowsSalesReport.md) %}

        Запускает генерацию отчета «Аналитика продаж» за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/masterstat/sales_funnel_promotions.md) %}

        |**:no-translate[⚙️] Лимит:** 10 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShowsSalesReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/competitors-position/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - promotion
        - finance-and-accounting
      operationId: generateCompetitorsPositionReport
      summary: Отчет «Конкурентная позиция»
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateCompetitorsPositionReport.md) %}

        Запускает генерацию отчета «Конкурентная позиция» за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% note info "Значение -1 в отчете" %}

        Если в CSV-файле в столбце :no-translate[**POSITION**] стоит -1, в этот день не было заказов с товарами в указанной категории.

        {% endnote %}

        {% include notitle [:no-translate[reports]](../../_auto/reports/masterstat/competitors_position.md) %}

        |**:no-translate[⚙️] Лимит:** 10 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCompetitorsPositionReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/goods-turnover/generate:
    post:
      tags:
        - reports
        - fby
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
        - finance-and-accounting
      operationId: generateGoodsTurnoverReport
      summary: Отчет по оборачиваемости
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateGoodsTurnoverReport.md) %}

        Запускает генерацию отчета по оборачиваемости за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/ru/storage/logistics#turnover)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/turnover/turnover.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsTurnoverRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/boost-consolidated/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - promotion
        - finance-and-accounting
      x-restrictions:
        - market-yandex-go
      operationId: generateBoostConsolidatedReport
      summary: Отчет по бусту продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateBoostConsolidatedReport.md) %}

        Запускает генерацию сводного отчета по бусту продаж за заданный период. [Что такое буст продаж](https://yandex.ru/support/marketplace/ru/marketing/campaigns)

        Отчет содержит информацию по всем кампаниям, созданным и через :no-translate[API], и в кабинете.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/boost/consolidated/business_boost_consolidated.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBoostConsolidatedRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/documents/shipment-list/generate:
    post:
      tags:
        - reports
        - fbs
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: generateShipmentListDocumentReport
      summary: Получение листа сборки
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateShipmentListDocumentReport.md) %}

        Запускает генерацию **листа сборки** для отгрузки.

        Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShipmentListDocumentReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый документ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/shelf-statistics/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - promotion
      operationId: generateShelfsStatisticsReport
      summary: Отчет по полкам
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateShelfsStatisticsReport.md) %}

        Запускает генерацию сводного отчета по полкам — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/incuts/shelfs_statistics.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShelfsStatisticsRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/documents/labels/generate:
    post:
      tags:
        - reports
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: generateMassOrderLabelsReport
      summary: Готовые ярлыки‑наклейки на все коробки в нескольких заказах
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/generateMassOrderLabelsReport.md) %}\n\nЗапускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).\n\nУзнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/MassOrderLabelsGenerationPageFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMassOrderLabelsRequest'
      responses:
        '200':
          description: |
            В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.

            Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/goods-feedback/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - communication
      x-restrictions:
        - market-yandex-go
      operationId: generateGoodsFeedbackReport
      summary: Отчет по отзывам о товарах
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateGoodsFeedbackReport.md) %}

        Запускает генерацию отчета по отзывам о товарах. [Что это за отчет](https://yandex.ru/support/marketplace/ru/marketing/plus-reviews#stat)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/paid_opinion_models/paid_opinion_models.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsFeedbackRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/shows-boost/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - promotion
        - finance-and-accounting
      x-restrictions:
        - market-yandex-go
      operationId: generateShowsBoostReport
      summary: Отчет по бусту показов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateShowsBoostReport.md) %}

        Запускает генерацию сводного отчета по бусту показов за заданный период. [Что такое буст показов](https://yandex.ru/support/marketplace/ru/marketing/boost-shows)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/cpm_boost/business_cpm_boost_consolidated.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShowsBoostRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/banners-statistics/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - promotion
      x-restrictions:
        - market-yandex-go
      operationId: generateBannersStatisticsReport
      summary: Отчет по охватному продвижению
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateBannersStatisticsReport.md) %}

        Запускает генерацию сводного отчета по охватному продвижению. Что это за отчет: [для баннеров](https://yandex.ru/support/marketplace/ru/marketing/advertising-tools/banner#statistics), [для пуш-уведомлений](https://yandex.ru/support/marketplace/ru/marketing/advertising-tools/push-notifications#statistics).

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/incuts/banners_statistics.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBannersStatisticsRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/closure-documents/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - finance-and-accounting
      operationId: generateClosureDocumentsReport
      summary: Закрывающие документы
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateClosureDocumentsReport.md) %}

        Возвращает ZIP-архив с закрывающими документами в формате PDF за указанный месяц.

        {% cut "Состав документов в зависимости от типа договора" %}

        * **Договор на размещение**

          * [акт об оказанных услугах](:no-translate[*acts-main-act])
          * [счет-фактура](:no-translate[*acts-main-invoice])
          * [сводный отчет по данным статистики](:no-translate[*acts-main-report])
          * [отчет об исполнении поручения и о зачете взаимных требований](:no-translate[*acts-main-agent]) (отчет агента)

        * **Договор на продвижение** (в России не заключается после 30 сентября 2024 года)

          * [акт об оказании услуг](:no-translate[*acts-discounts-act])
          * [счет-фактура](:no-translate[*acts-discounts-invoice]), если этого требует схема налогообложения

        * **Договор на маркетинг**

          * [акт об оказанных услугах](:no-translate[*acts-marketing-act])
          * [счет-фактура](:no-translate[*acts-main-invoice])
          * [счет-фактура на аванс](:no-translate[*acts-marketing-invoice])
          * [выписка по лицевому счету](:no-translate[*acts-marketing-account])
          * [детализация к акту](:no-translate[*acts-marketing-details])

        {% endcut %}

        Узнать статус генерации и получить ссылку на архив можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateClosureDocumentsRequest'
      responses:
        '200':
          description: |
            ZIP-архив с закрывающими документами в формате :no-translate[PDF].
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/jewelry-fiscal/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
        - inventory-and-order-processing
      operationId: generateJewelryFiscalReport
      summary: Отчет по заказам с ювелирными изделиями
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateJewelryFiscalReport.md) %}

        Запускает генерацию отчета по заказам с ювелирными изделиями.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/identifiers/jewelry/orders_jewelry_fiscal.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateJewelryFiscalReportRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/sales-geography/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - finance-and-accounting
      operationId: generateSalesGeographyReport
      summary: Отчет по географии продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateSalesGeographyReport.md) %}

        Запускает генерацию отчета по географии продаж. [Что это за отчет](https://yandex.ru/support/marketplace/ru/analytics/sales-geography)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/locality/locality_offers_report_v2.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSalesGeographyRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/key-indicators/generate:
    post:
      tags:
        - reports
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - promotion
        - finance-and-accounting
      operationId: generateKeyIndicatorsReport
      summary: Отчет по ключевым показателям
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateKeyIndicatorsReport.md) %}

        Запускает генерацию отчета по ключевым показателям. [Что это за отчет](https://yandex.ru/support/marketplace/ru/analytics/key-metrics)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [:no-translate[reports]](../../_auto/reports/key_indicators/key_indicators.md) %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateKeyIndicatorsRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /reports/closure-documents/detalization/generate:
    post:
      tags:
        - reports
        - fby
        - dbs
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - finance-and-accounting
      operationId: generateClosureDocumentsDetalizationReport
      summary: Отчет по схождению с закрывающими документами
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/generateClosureDocumentsDetalizationReport.md) %}

        Запускает генерацию отчета по схождению с закрывающими документами в зависимости от типа договора.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% list tabs %}

        - Договор на размещение

          {% include notitle [:no-translate[reports]](../../_auto/reports/period_closure/period_closure_income.md) %}

        - Договор на продвижение

          {% include notitle [:no-translate[reports]](../../_auto/reports/period_closure/period_closure_outcome.md) %}

        - Договор на маркетинг

          {% include notitle [:no-translate[reports]](../../_auto/reports/advertiser_billing_operations/advertiser_billing_operations.md) %}

        {% endlist %}

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ReportFormat'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateClosureDocumentsDetalizationRequest'
      responses:
        '200':
          description: В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый отчет.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/outlets:
    post:
      tags:
        - outlets
        - dbs
      x-auth-scopes:
        - all-methods
        - settings-management
      operationId: createOutlet
      summary: Создание точки продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/createOutlet.md) %}

        Создает точку продаж магазина на Маркете.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
      responses:
        '200':
          description: Информация о созданной точке продаж.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutletResponse'
        '400':
          description: |
            | **Описание**                       | **Пояснение**                                                                                                                                                               | **Способы решения**                                                                                  |
            |------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|
            | :no-translate[**datediff-is-to-big-local**]       | При доставке по своему региону разница между максимальным и минимальным сроком доставки не должна превышать двух дней.                                                      | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает двух дней.           |
            | :no-translate[**datediff-is-to-big-remote**]      | При доставке в другие регионы разница между максимальным и минимальным сроком доставки не должна превышать четырех дней.                                                    | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает четырех дней.        |
            | :no-translate[**datediff-is-to-big-long-period**] | При доставке в другие регионы, где минимальный срок доставки больше 18 дней, разница между максимальным и минимальным сроком доставки не должна превышать минимальный срок. | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает `minDeliveryDays`.   |
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - outlets
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
      operationId: getOutlets
      summary: Информация о нескольких точках продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOutlets.md) %}

        Возвращает список точек продаж магазина.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - description: |
            Идентификатор региона.
            Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов.
            Идентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md).
          name: region_id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - description: Идентификатор точки продаж, присвоенный магазином.
          name: shop_outlet_code
          in: query
          required: false
          schema:
            type: string
        - description: "{% note warning \"Вместо него используйте `region_id`.\" %}\n\n\_\n\n{% endnote %}\n"
          name: regionId
          deprecated: true
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Информация о точках продаж.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/outlets/{outletId}:
    put:
      tags:
        - outlets
        - dbs
      x-auth-scopes:
        - all-methods
        - settings-management
      operationId: updateOutlet
      summary: Изменение информации о точке продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOutlet.md) %}

        Изменяет информацию о точке продаж магазина на Маркете.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OutletId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          description: |
            | **Описание**                                  | **Пояснение**                                                                                                                                                                                                                                                                               | **Способы решения**                                                                                 |
            |-----------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------|
            | :no-translate[**datediff-is-to-big-local**]                  | При доставке по своему региону разница между максимальным и минимальным сроком доставки не должна превышать двух дней.                                                                                                                                                                      | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает двух дней.          |
            | :no-translate[**datediff-is-to-big-remote**]                 | При доставке в другие регионы разница между максимальным и минимальным сроком доставки не должна превышать четырех дней.                                                                                                                                                                    | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает четырех дней.       |
            | :no-translate[**datediff-is-to-big-long-period**]            | При доставке в другие регионы, где минимальный срок доставки больше 18 дней, разница между максимальным и минимальным сроком доставки не должна превышать минимальный срок.                                                                                                                 | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает `minDeliveryDays`.  |
            | :no-translate[**Outlet is disabled for editing by partner**] | Нельзя изменить информацию о точке продажи магазина, так как вы отказались от доставки в пункты выдачи заказов Маркета. Подробнее о правилах доставки для DBS-магазинов читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/settings/pvz#rules). | Обратитесь в службу поддержки, если вы готовы включить доставку в пункты выдачи заказов Маркета.    |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - outlets
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
      operationId: getOutlet
      summary: Информация об одной точке продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOutlet.md) %}

        Возвращает информацию о точках продаж магазина.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OutletId'
      responses:
        '200':
          description: Информация о точке продаж.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - outlets
        - dbs
      x-auth-scopes:
        - all-methods
        - settings-management
      operationId: deleteOutlet
      summary: Удаление точки продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteOutlet.md) %}

        Удаляет точку продаж магазина на Маркете.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OutletId'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          description: |
            | **Описание**                                  | **Пояснение**                                                                                                                                                                                                                                                                 | **Способы решения**                                                                              |
            |-----------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------|
            | :no-translate[**Outlet is disabled for editing by partner**] | Нельзя удалить точку продажи магазина, так как вы отказались от доставки в пункты выдачи заказов Маркета. Подробнее о правилах доставки для DBS-магазинов читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/settings/pvz#rules). | Обратитесь в службу поддержки, если вы готовы включить доставку в пункты выдачи заказов Маркета. |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/outlets/licenses:
    get:
      tags:
        - outlet-licenses
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
      operationId: getOutletLicenses
      summary: Информация о лицензиях для точек продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOutletLicenses.md) %}

        Возвращает информацию о лицензиях для точек продаж.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/OutletIds'
        - description: |
            Список идентификаторов лицензий, информацию о которых нужно получить.

            Идентификаторы указываются через запятую. Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии.

            В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.
          $ref: '#/components/parameters/LicenseIds'
      responses:
        '200':
          description: Найденные лицензии собственных точек продаж.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletLicensesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    delete:
      tags:
        - outlet-licenses
        - dbs
      x-auth-scopes:
        - all-methods
        - settings-management
      operationId: deleteOutletLicenses
      summary: Удаление лицензий для точек продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteOutletLicenses.md) %}

        Удаляет информацию о лицензиях для точек продаж.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - description: |
            Список идентификаторов лицензий, информацию о которых нужно удалить.

            Идентификаторы указываются через запятую. Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии.
          $ref: '#/components/parameters/DeleteLicenseIds'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - outlet-licenses
        - dbs
      x-auth-scopes:
        - all-methods
        - settings-management
      operationId: updateOutletLicenses
      summary: Создание и изменение лицензий для точек продаж
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOutletLicenses.md) %}

        Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.

        Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutletLicenseRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/goods-feedback:
    post:
      tags:
        - goods-feedback
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getGoodsFeedbacks
      summary: Получение отзывов о товарах продавца
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getGoodsFeedbacks.md) %}

        Возвращает отзывы о товарах продавца по указанным фильтрам. **Исключение:** отзывы, которые удалили покупатели или Маркет.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый отзыв. А полную информацию о нем можно получить с помощью этого метода.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Результаты возвращаются постранично, одна страница содержит не более 50 отзывов.

        Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsFeedbackRequest'
      responses:
        '200':
          description: Список отзывов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsFeedbackResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/goods-feedback/skip-reaction:
    post:
      tags:
        - goods-feedback
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: skipGoodsFeedbacksReaction
      summary: Пропуск реакции на отзывы
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/skipGoodsFeedbacksReaction.md) %}

        Пропускает реакцию на отзыв — параметр `needReaction` принимает значение `false` в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkipGoodsFeedbackReactionRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/goods-feedback/comments/update:
    post:
      tags:
        - goods-feedback
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: updateGoodsFeedbackComment
      summary: Добавление нового или изменение созданного комментария
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateGoodsFeedbackComment.md) %}

        Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.

        Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.

        Чтобы добавить комментарий к другому комментарию, передайте:

        * `feedbackId` — идентификатор отзыва;
        * `comment.parentId` — идентификатор родительского комментария.

        Чтобы изменить комментарий, передайте:

        * `feedbackId`— идентификатор отзыва;
        * `comment.id` — идентификатор комментария, который нужно изменить.

        Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGoodsFeedbackCommentRequest'
      responses:
        '200':
          description: Информация о добавленном или измененном комментарии.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGoodsFeedbackCommentResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/goods-feedback/comments/delete:
    post:
      tags:
        - goods-feedback
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: deleteGoodsFeedbackComment
      summary: Удаление комментария к отзыву
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteGoodsFeedbackComment.md) %}

        Удаляет комментарий магазина.

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGoodsFeedbackCommentRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/goods-feedback/comments:
    post:
      tags:
        - goods-feedback
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getGoodsFeedbackComments
      summary: Получение комментариев к отзыву
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getGoodsFeedbackComments.md) %}

        Возвращает комментарии к отзыву, кроме:

          * тех, которые удалили пользователи или Маркет;
          * комментариев к удаленным отзывам.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый комментарий. А полную информацию о нем можно получить с помощью этого метода.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Результаты возвращаются постранично, одна страница содержит не более 50 комментариев.

        Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsFeedbackCommentsRequest'
      responses:
        '200':
          description: Дерево комментариев к отзыву.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsFeedbackCommentsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offers:
    post:
      tags:
        - offers
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getCampaignOffers
      summary: Информация о товарах, которые размещены в заданном магазине
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getCampaignOffers.md) %}

        Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCampaignOffersRequest'
      responses:
        '200':
          description: Список товаров, размещенных в заданном магазине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offers/update:
    post:
      tags:
        - offers
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: updateCampaignOffers
      summary: Изменение условий продажи товаров в магазине
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateCampaignOffers.md) %}

        Изменяет параметры размещения товаров в конкретном магазине: доступность товара, продажа квантами и применяемый НДС.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignOffersRequest'
      responses:
        '200':
          description: Ответ 200 обозначает, что новые параметры получены Маркетом и скоро вступят в силу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/offers/delete:
    post:
      tags:
        - offers
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: deleteCampaignOffers
      summary: Удаление товаров из ассортимента магазина
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deleteCampaignOffers.md) %}

        Удаляет заданные товары из заданного магазина.

        {% note warning "Запрос удаляет товары из конкретного магазина" %}

        На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.

        {% endnote %}

        Товар не получится удалить, если он хранится на складах Маркета.

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignOffersRequest'
      responses:
        '200':
          description: Если удалось удалить не все товары, с ответом 200 вернется список тех, что были в запросе, но остались в магазине.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCampaignOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offers/recommendations:
    post:
      tags:
        - offers
        - dbs
        - fby
        - fbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getOfferRecommendations
      summary: Рекомендации Маркета, касающиеся цен
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOfferRecommendations.md) %}

        Метод возвращает рекомендации нескольких типов.

        1. Порог для привлекательной цены.
        2. Оценка привлекательности цен на витрине.

        Рекомендации показывают, какие цены нужно установить, чтобы привлечь покупателя.

        В запросе можно использовать фильтры. Результаты возвращаются постранично.

        |**:no-translate[⚙️] Лимит:** 100 запросов в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferRecommendationsRequest'
      responses:
        '200':
          description: Список товаров с рекомендациями.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferRecommendationsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /models:
    post:
      tags:
        - models
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getModels
      summary: Информация о нескольких моделях
      deprecated: true
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getModels.md) %}

        Возвращает информацию о моделях товаров.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**:no-translate[⚙️] Лимит:** 100 000 моделей в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ModelRegionId'
        - $ref: '#/components/parameters/Currency'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
      responses:
        '200':
          description: Информация о моделях.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - models
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      x-restrictions:
        - market-yandex-go
      operationId: searchModels
      summary: Поиск модели товара
      deprecated: true
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/searchModels.md) %}

        Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**:no-translate[⚙️] Лимит:** 100 000 моделей в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ModelQuery'
        - $ref: '#/components/parameters/ModelRegionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/PageNum'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: Информация о моделях.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchModelsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /models/{modelId}:
    get:
      tags:
        - models
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getModel
      summary: Информация об одной модели
      deprecated: true
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getModel.md) %}

        Возвращает информацию о модели товара.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**:no-translate[⚙️] Лимит:** 100 000 моделей в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ModelId'
        - $ref: '#/components/parameters/ModelRegionId'
        - $ref: '#/components/parameters/Currency'
      responses:
        '200':
          description: Информация о модели.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /models/offers:
    post:
      tags:
        - models
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getModelsOffers
      summary: Список предложений для нескольких моделей
      deprecated: true
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getModelsOffers.md) %}

        Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.

        В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.

        Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**:no-translate[⚙️] Лимит:** 100 000 предложений в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ModelRegionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/OrderByPrice'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
      responses:
        '200':
          description: Список предложений для моделей.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /models/{modelId}/offers:
    get:
      tags:
        - models
        - dbs
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getModelOffers
      summary: Список предложений для одной модели
      deprecated: true
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getModelOffers.md) %}

        Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.

        Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**:no-translate[⚙️] Лимит:** 100 000 предложений в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/ModelId'
        - $ref: '#/components/parameters/ModelRegionId'
        - $ref: '#/components/parameters/Currency'
        - $ref: '#/components/parameters/OrderByPrice'
        - $ref: '#/components/parameters/ModelPageCount'
        - $ref: '#/components/parameters/PageNum'
      responses:
        '200':
          description: Список предложений для модели.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/bids:
    put:
      tags:
        - bids
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - pricing
        - promotion
      x-restrictions:
        - market-yandex-go
      operationId: putBidsForBusiness
      summary: Включение буста продаж и установка ставок
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/putBidsForBusiness.md) %}\n\nЗапускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\n{% cut \"Как в кабинете выглядит кампания, созданная через :no-translate[API]\" %}\n\n![](../../_images/api-boost.png)\n\n{% endcut %}\n\nПри первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным :no-translate[SKU] нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким :no-translate[SKU], он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же созданной через :no-translate[API] кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через :no-translate[API] не получится. У созданной через :no-translate[API] кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через :no-translate[API] кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\nУзнать расходы на буст продаж можно с помощью запроса [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md). Сумма содержится в поле `bidFee`.\n\n{% note info \"Данные обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
      responses:
        '200':
          description: |
            Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/bids:
    put:
      tags:
        - bids
        - dbs
        - fbs
        - express
        - fby
      x-auth-scopes:
        - all-methods
        - pricing
        - promotion
      x-restrictions:
        - market-yandex-go
      operationId: putBidsForCampaign
      summary: Включение буста продаж и установка ставок для магазина
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/putBidsForCampaign.md) %}\n\nЗапускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.\n\nПри первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).\n\nЕсли товара с указанным :no-translate[SKU] нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким :no-translate[SKU], он автоматически будет добавлен в кампанию с указанной ставкой.\n\nЗапрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через :no-translate[API] кампании всегда наибольший приоритет над остальными — изменить его нельзя.\n\nВыполнение запроса включает кампанию и ценовую стратегию, если они были отключены.\n\nВнести другие изменения в созданную через :no-translate[API] кампанию можно в кабинете:\n\n* выключить или включить кампанию;\n* изменить ее название;\n* выключить или включить ценовую стратегию.\n\nЧтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.\n\nПодробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).\n\nУзнать расходы на буст продаж можно с помощью запроса [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md). Сумма содержится в поле `bidFee`.\n\n{% note info \"Данные обновляются не мгновенно\" %}\n\nЭто занимает до нескольких минут.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
      responses:
        '200':
          description: Пустой ответ.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/bids/info:
    post:
      tags:
        - bids
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
        - promotion
        - promotion:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getBidsInfoForBusiness
      summary: Информация об установленных ставках
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getBidsInfoForBusiness.md) %}\n\nВозвращает значения ставок для заданных товаров.\n\n{% note warning \"Получить информацию по кампаниям, созданным в кабинете, не получится\" %}\n\nВ ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md).\n\n{% endnote %}\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsInfoRequest'
      responses:
        '200':
          description: Значения ставок для заданных товаров. В ответ попадают только товары, на которые установлены ставки.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/bids/recommendations:
    post:
      tags:
        - bids
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
        - promotion
        - promotion:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getBidsRecommendations
      summary: Рекомендованные ставки для заданных товаров
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getBidsRecommendations.md) %}\n\nВозвращает рекомендованные ставки для заданных товаров, что обеспечивает вашим предложениям определенную долю показов, и дополнительные инструменты продвижения.\n\nДля одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов и получения дополнительных инструментов продвижения.\n\nЕсли товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.\n\nВ одном запросе может быть максимум 1500 товаров.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в минуту|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        description: description.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsRecommendationsRequest'
      responses:
        '200':
          description: Рекомендованные ставки для заданных товаров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsRecommendationsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/warehouses:
    get:
      tags:
        - warehouses
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getWarehouses
      summary: Список складов и групп складов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getWarehouses.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/warehouses](../../reference/warehouses/getPagedWarehouses.md)

        {% endnote %}

        Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)

        Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.

        |**:no-translate[⚙️] Лимит:** 100 запросов в минуту|
        |-|
      deprecated: true
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      responses:
        '200':
          description: Список складов и групп складов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehousesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    post:
      tags:
        - warehouses
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getPagedWarehouses
      summary: Список складов
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getPagedWarehouses.md) %}\n\nВозвращает список складов и информацию о них.\n\n{% note warning \"Ограничение для параметра `limit`\" %}\n\nНе передавайте значение больше 25.\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPagedWarehousesRequest'
      responses:
        '200':
          description: Список складов и их свойства, которые вы запрашивали.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPagedWarehousesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /warehouses:
    get:
      tags:
        - warehouses
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getFulfillmentWarehouses
      summary: Идентификаторы складов Маркета
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getFulfillmentWarehouses.md) %}

        Возвращает список складов Маркета с их идентификаторами.

        |**:no-translate[⚙️] Лимит:** 100 запросов в минуту|
        |-|
      responses:
        '200':
          description: Список складов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFulfillmentWarehousesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/warehouse/status:
    post:
      tags:
        - warehouses
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - inventory-and-order-processing
      operationId: updateWarehouseStatus
      summary: Изменение статуса склада
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateWarehouseStatus.md) %}

        Отключает или включает склад.

        После отключения склада товары, которые находятся на нем, скрываются через 15 минут. После включения они возвращаются на витрину через 15 минут, а если склад был выключен 30 дней или дольше — через 4 часа.

        |**:no-translate[⚙️] Лимит:** 100 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWarehouseStatusRequest'
      responses:
        '200':
          description: Новый статус склада.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWarehouseStatusResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /category/{categoryId}/parameters:
    post:
      tags:
        - content
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getCategoryContentParameters
      summary: Списки характеристик товаров по категориям
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getCategoryContentParameters.md) %}

        Возвращает список характеристик с допустимыми значениями для заданной листовой категории — той, у которой нет дочерних категорий.

        |**:no-translate[⚙️] Лимит:** 100 категорий в минуту |
        |-|
      parameters:
        - $ref: '#/components/parameters/MarketCategoryId'
        - $ref: '#/components/parameters/BusinessIdQuery'
      responses:
        '200':
          description: Список характеристик товаров из заданной категории.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoryContentParametersResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-cards:
    post:
      tags:
        - content
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getOfferCardsContentStatus
      summary: Получение информации о заполненности карточек магазина
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getOfferCardsContentStatus.md) %}

        Возвращает сведения о состоянии контента для заданных товаров:

        * создана ли карточка товара и в каком она статусе;
        * рейтинг карточки — на сколько процентов она заполнена;
        * переданные характеристики товаров;
        * есть ли ошибки или предупреждения, связанные с контентом;
        * рекомендации по заполнению карточки.

        |**:no-translate[⚙️] Лимит:** 600 запросов в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferCardsContentStatusRequest'
      responses:
        '200':
          description: Информация о карточках указанных товаров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferCardsContentStatusResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/offer-cards/update:
    post:
      tags:
        - content
        - dbs
        - fby
        - fbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - offers-and-cards-management
      operationId: updateOfferContent
      summary: Редактирование категорийных характеристик товара
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updateOfferContent.md) %}

        Редактирует характеристики товара, которые специфичны для категории, к которой он относится.

        {% note warning "Здесь только то, что относится к конкретной категории" %}

        Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        {% endnote %}

        Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 товаров в минуту|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferContentRequest'
      responses:
        '200':
          description: |
            Запрос выполнен корректно, данные обработаны.

            {% note warning "Ответ 200 сам по себе не значит, что переданные значения корректны" %}

            Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.

            Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.

            {% endnote %}

            Если в `status` вернулось `ERROR`, убедитесь, что:

            * все обязательные характеристики заполнены;
            * характеристики действительно существуют в указанных категориях;
            * значения соответствуют характеристикам;
            * ваши собственные значения имеют нужный тип данных.

            Найти проблемы помогут поля `errors` и `warnings`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferContentResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '423':
          $ref: '#/components/responses/423'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chats/new:
    post:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: createChat
      summary: Создание нового чата с покупателем
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/createChat.md) %}\n\nСоздает новый чат с покупателем.\n\nТипы чатов:\n\n* по заказам;\n* по возвратам (доступны только для FBS- и Экспресс-магазинов).\n\nНельзя создать чат с типом `DIRECT`. Подробнее о сообщениях от покупателей читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/communication/with-users).\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatRequest'
      responses:
        '200':
          description: |
            Все получилось: чат создан.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChatResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chats:
    post:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getChats
      summary: Получение доступных чатов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getChats.md) %}

        Возвращает чаты с покупателями.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatsRequest'
      responses:
        '200':
          description: |
            Список чатов.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chat:
    get:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getChat
      summary: Получение чата по идентификатору
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getChat.md) %}\n\nВозвращает чат по его идентификатору.\n\n{% note tip \"Подключите API-уведомления\" %}\n\nМаркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.\n\n[{#T}](../../push-notifications/index.md)\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/ChatId'
      responses:
        '200':
          description: |
            Информация о чате.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chats/file/send:
    post:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: sendFileToChat
      summary: Отправка файла в чат
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/sendFileToChat.md) %}\n\nОтправляет файл в чат с покупателем.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/ChatId'
      requestBody:
        required: true
        description: description
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendFileToChatRequest'
      responses:
        '200':
          description: Пустой ответ. Означает, что файл отправлен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chats/message:
    post:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - communication
      operationId: sendMessageToChat
      summary: Отправка сообщения в чат
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/sendMessageToChat.md) %}\n\nОтправляет сообщение в чат с покупателем.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/ChatId'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageToChatRequest'
      responses:
        '200':
          description: Пустой ответ. Означает, что сообщение отправлено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
    get:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getChatMessage
      summary: Получение сообщения в чате
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getChatMessage.md) %}\n\nВозвращает сообщение по его идентификатору.\n\n{% note tip \"Подключите API-уведомления\" %}\n\nМаркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.\n\n[{#T}](../../push-notifications/index.md)\n\n{% endnote %}\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/ChatId'
        - $ref: '#/components/parameters/MessageId'
      responses:
        '200':
          description: |
            Сообщение и информация о нем.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatMessageResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/chats/history:
    post:
      tags:
        - chats
        - dbs
        - fbs
        - fby
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - communication
      operationId: getChatHistory
      summary: Получение истории сообщений в чате
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getChatHistory.md) %}

        Возвращает историю сообщений в чате с покупателем.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/ChatId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        description: description
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatHistoryRequest'
      responses:
        '200':
          description: |
            История сообщений.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatHistoryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /tariffs/calculate:
    post:
      tags:
        - tariffs
        - fbs
        - fby
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - finance-and-accounting
        - pricing
        - pricing:read-only
      operationId: calculateTariffs
      summary: Калькулятор стоимости услуг
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/calculateTariffs.md) %}

        Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить,
        для какого товара рассчитана стоимость услуги.

        Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.

        В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.

        |**:no-translate[⚙️] Лимит:** 100 запросов в минуту|
        |-|
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateTariffsRequest'
      responses:
        '200':
          description: Стоимость услуг.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateTariffsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /categories/tree:
    post:
      tags:
        - categories
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      operationId: getCategoriesTree
      summary: Дерево категорий
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getCategoriesTree.md) %}

        Возвращает дерево категорий Маркета.

        |**:no-translate[⚙️] Лимит:** 1 000 запросов в час|
        |-|
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCategoriesRequest'
      responses:
        '200':
          description: Категории Маркета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /categories/max-sale-quantum:
    post:
      deprecated: true
      tags:
        - categories
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - offers-and-cards-management
        - offers-and-cards-management:read-only
      operationId: getCategoriesMaxSaleQuantum
      summary: Лимит на установку кванта продажи и минимального количества товаров в заказе
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getCategoriesMaxSaleQuantum.md) %}

        Возвращает лимит на установку [кванта](:no-translate[*quantum]) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.

        Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.

        Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).

        |**:no-translate[⚙️] Лимит:** 5 000 запросов в час|
        |-|
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumRequest'
      responses:
        '200':
          description: Лимит на установку кванта и минимального количества товаров.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/ratings/quality:
    post:
      tags:
        - ratings
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getQualityRatings
      summary: Индекс качества магазинов
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getQualityRatings.md) %}

        Возвращает значение индекса качества магазинов и его составляющие.

        Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualityRatingRequest'
      responses:
        '200':
          description: Значение индекса качества магазинов и его составляющие.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualityRatingResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/ratings/quality/details:
    post:
      tags:
        - ratings
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
      operationId: getQualityRatingDetails
      summary: Заказы, которые повлияли на индекс качества
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getQualityRatingDetails.md) %}

        Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).

        |**:no-translate[⚙️] Лимит:** 100 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      responses:
        '200':
          description: Информация о заказах, которые повлияли на индекс качества.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualityRatingDetailsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/promos:
    post:
      tags:
        - promos
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - promotion
        - promotion:read-only
        - pricing
        - pricing:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getPromos
      summary: Получение списка акций
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getPromos.md) %}\n\nВозвращает информацию об акциях Маркета. Не возвращает данные об акциях, которые создал продавец.\n\nПо умолчанию возвращаются акции, в которых продавец участвует или может принять участие.\n\nЧтобы получить текущие или завершенные акции, передайте параметр `participation`.\n\nТипы акций, которые возвращаются в ответе:\n\n* прямая скидка;\n* флеш-акция;\n* скидка по промокоду.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPromosRequest'
      responses:
        '200':
          description: Список акций Маркета.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPromosResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/promos/offers:
    post:
      tags:
        - promos
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - pricing
        - pricing:read-only
        - promotion
        - promotion:read-only
      x-restrictions:
        - market-yandex-go
      operationId: getPromoOffers
      summary: Получение списка товаров, которые участвуют или могут участвовать в акции
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/getPromoOffers.md) %}

        Возвращает список товаров, которые участвуют или могут участвовать в акции.

        {% note warning "Условия участия в акциях могут меняться" %}

        Например, `maxPromoPrice`.

        Установленные цены меняться не будут — `price` и `promoPrice`.

        {% endnote %}

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час, не более 500 товаров в запросе|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPromoOffersRequest'
      responses:
        '200':
          description: Список товаров, которые участвуют или могут участвовать в акции.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPromoOffersResponse'
        '400':
          description: |
            | **Описание**        | **Пояснение**      | **Способы решения**                                                                                                                                   |
            |---------------------|--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|
            | :no-translate[**Promo has ended**] | Акция закончилась. | Чтобы узнать, в каких акциях можно поучаствовать, воспользуйтесь методом [POST /businesses/{businessId}/promos](../../reference/promos/getPromos.md). |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/promos/offers/update:
    post:
      tags:
        - promos
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - pricing
        - promotion
      x-restrictions:
        - market-yandex-go
      operationId: updatePromoOffers
      summary: Добавление товаров в акцию или изменение их цен
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/updatePromoOffers.md) %}

        Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.

        Изменения начинают действовать в течение 4–6 часов.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePromoOffersRequest'
      responses:
        '200':
          description: Результат добавления товаров в акцию или обновления их цен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePromoOffersResponse'
        '400':
          description: |
            | **Описание**        | **Пояснение**      | **Способы решения**                                                                                                                                   |
            |---------------------|--------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------|
            | :no-translate[**Promo has ended**] | Акция закончилась. | Чтобы узнать, в каких акциях можно поучаствовать, воспользуйтесь методом [POST /businesses/{businessId}/promos](../../reference/promos/getPromos.md). |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /businesses/{businessId}/promos/offers/delete:
    post:
      tags:
        - promos
        - fby
        - fbs
        - dbs
        - express
      x-auth-scopes:
        - all-methods
        - pricing
        - promotion
      x-restrictions:
        - market-yandex-go
      operationId: deletePromoOffers
      summary: Удаление товаров из акции
      description: |
        {% include notitle [:no-translate[access]](../../_auto/method_scopes/deletePromoOffers.md) %}

        Убирает товары из акции.

        Изменения начинают действовать в течение 4–6 часов.

        |**:no-translate[⚙️] Лимит:** 10 000 запросов в час|
        |-|
      parameters:
        - $ref: '#/components/parameters/BusinessId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePromoOffersRequest'
      responses:
        '200':
          description: Результат удаления товаров из акции.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePromoOffersResponse'
        '400':
          description: |
            | **Описание**                                                                                                   | **Пояснение**                                                                                               | **Способы решения**                                                                                                                                               |
            |----------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|
            | :no-translate[**Not enough parameters in request: offerIds or deleteAllOffers should be specified**]                          | Не передан параметр для удаления товаров из акции.                                                          | Чтобы убрать все товары, передайте значение `true` в параметре `deleteAllOffers`. Чтобы удалить только некоторые товары, передайте их SKU в параметре `offerIds`. |
            | :no-translate[**Promo has ended**]                                                                                            | Акция закончилась.                                                                                          | Чтобы узнать, в каких акциях можно поучаствовать, воспользуйтесь методом [POST /businesses/{businessId}/promos](../../reference/promos/getPromos.md).             |
            | :no-translate[**Too many parameters in request: only one of parameters offerIds or deleteAllOffers should be specified**]     | Можно либо передать значение `true` в параметре `deleteAllOffers`, либо :no-translate[SKU] товаров в параметре `offerIds`. | Передайте что-то одно  — или значение `true` в параметре `deleteAllOffers`, или SKU товаров в параметре `offerIds`.                                               |
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/supply-requests:
    post:
      tags:
        - supply-requests
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - supplies-management:read-only
      operationId: getSupplyRequests
      summary: Получение информации о заявках на поставку, вывоз и утилизацию
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getSupplyRequests.md) %}\n\nПо указанным фильтрам возвращает заявки на поставку, вывоз и утилизацию, а также информацию по ним.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestsRequest'
      responses:
        '200':
          description: Список заявок и информация по ним.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/supply-requests/items:
    post:
      tags:
        - supply-requests
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - supplies-management:read-only
      summary: Получение товаров в заявке на поставку, вывоз или утилизацию
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getSupplyRequestItems.md) %}\n\nВозвращает список товаров в заявке и информацию по ним.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      operationId: getSupplyRequestItems
      parameters:
        - $ref: '#/components/parameters/CampaignId'
        - $ref: '#/components/parameters/PageToken'
        - $ref: '#/components/parameters/PageLimit'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestItemsRequest'
      responses:
        '200':
          description: Список товаров в заявке и информация по ним.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestItemsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /campaigns/{campaignId}/supply-requests/documents:
    post:
      tags:
        - supply-requests
        - fby
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - supplies-management:read-only
      summary: Получение документов по заявке на поставку, вывоз или утилизацию
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getSupplyRequestDocuments.md) %}\n\nВозвращает документы по заявке.\n\n|**:no-translate[⚙️] Лимит:** 1\_000 запросов в час|\n|-|\n"
      operationId: getSupplyRequestDocuments
      parameters:
        - $ref: '#/components/parameters/CampaignId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestDocumentsRequest'
      responses:
        '200':
          description: Список документов и ссылки на них.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestDocumentsResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
  /auth/token:
    post:
      tags:
        - auth
        - fby
        - fbs
        - dbs
        - express
        - laas
      x-auth-scopes:
        - all-methods
        - all-methods:read-only
        - settings-management
        - finance-and-accounting
        - offers-and-cards-management
        - offers-and-cards-management:read-only
        - pricing
        - pricing:read-only
        - inventory-and-order-processing
        - inventory-and-order-processing:read-only
        - promotion
        - promotion:read-only
        - communication
        - supplies-management:read-only
      summary: Получение информации об авторизационном токене
      description: "{% include notitle [:no-translate[access]](../../_auto/method_scopes/getAuthTokenInfo.md) %}\n\n{% note info \"Метод доступен только для Api-Key-токена.\" %}\n\n\_\n\n{% endnote %}\n\nВозвращает информацию о переданном авторизационном токене.\n\n|**:no-translate[⚙️] Лимит:** 100 запросов в час|\n|-|\n"
      operationId: getAuthTokenInfo
      responses:
        '200':
          description: Информация об авторизационном токене.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '420':
          $ref: '#/components/responses/420'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      name: Api-Key
      in: header
    OAuth:
      type: oauth2
      x-inline: true
      flows:
        implicit:
          authorizationUrl: https://oauth.yandex.ru/authorize
          scopes:
            market:partner-api: ':no-translate[API] Яндекс.Маркета / Поиска по товарам для партнеров'
  parameters:
    BusinessId:
      description: |
        Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [:no-translate[GET campaigns]](:no-translate[../../reference/campaigns/getCampaigns.md]).

        ℹ️ [Что такое кабинет и магазин на Маркете](:no-translate[https://yandex.ru/support/marketplace/account/introduction.html])
      name: businessId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    PageNum:
      name: page
      description: |
        {% note warning "Если в методе есть :no-translate[`page_token`]" %}

        Используйте его вместо параметра :no-translate[`page`].

        [Подробнее о типах пагинации и их использовании](:no-translate[../../concepts/pagination.md])

        {% endnote %}

        Номер страницы результатов.

        Используется вместе с параметром :no-translate[`pageSize`].

        :no-translate[`page`] игнорируется, если задан :no-translate[`page_token`] или :no-translate[`limit`].
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        maximum: 10000
    PageSize:
      name: pageSize
      description: |
        Размер страницы.

        Используется вместе с параметром :no-translate[`page`].

        :no-translate[`pageSize`] игнорируется, если задан :no-translate[`page_token`] или :no-translate[`limit`].
      in: query
      required: false
      schema:
        type: integer
        format: int32
    CampaignId:
      description: |
        Идентификатор кампании.

        Его можно узнать с помощью запроса [:no-translate[GET campaigns]](:no-translate[../../reference/campaigns/getCampaigns.md]) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

          * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
          * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

        ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
      name: campaignId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    OrderId:
      description: Идентификатор заказа.
      name: orderId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    GetOrdersOrderIds:
      description: |
        Фильтрация заказов по идентификаторам.
        <br><br>
        ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
      name: orderIds
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
          format: int64
          minItems: 1
          maxItems: 50
    GetOrdersStatus:
      description: |
        Статус заказа:

        * `CANCELLED` — заказ отменен.

        * `DELIVERED` — заказ получен покупателем.

        * `DELIVERY` — заказ передан в службу доставки.

        * `PICKUP` — заказ доставлен в пункт самовывоза.

        * `PROCESSING` — заказ находится в обработке.

        * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).
      name: status
      in: query
      required: false
      schema:
        type: array
        uniqueItems: true
        items:
          $ref: '#/components/schemas/OrderStatusType'
    GetOrdersSubstatus:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        Возможные значения для заказа в статусе `PROCESSING`:

        * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
        * `READY_TO_SHIP` — заказ собран и готов к отправке.
        * `SHIPPED` — заказ передан службе доставки.

        Возможные значения для заказа в статусе `CANCELLED`:

        * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

        * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

        * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:

          * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;
          * перерыв между первым и третьим звонком не менее 90 минут;
          * соединение не короче 5 секунд.

          Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400

        * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

        * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

        * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

        * `SHOP_FAILED` — магазин не может выполнить заказ.

        * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

        * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

        * `PROCESSING_EXPIRED` — значение более не используется.

        * `PICKUP_EXPIRED` — закончился срок хранения заказа в ПВЗ.

        * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.

        * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.

        * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.

        * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.
      name: substatus
      in: query
      required: false
      schema:
        type: array
        uniqueItems: true
        items:
          $ref: '#/components/schemas/OrderSubstatusType'
    GetOrdersFromDate:
      description: |
        Начальная дата для фильтрации заказов по дате оформления.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.

        Значение по умолчанию: 30 дней назад от текущей даты.
      name: fromDate
      in: query
      required: false
      schema:
        type: string
        format: date
    GetOrdersToDate:
      description: |
        Конечная дата для фильтрации заказов по дате оформления.

        Показываются заказы, созданные до 00:00 указанного дня.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.

        Значение по умолчанию: текущая дата.

        Если промежуток времени между `toDate` и `fromDate` меньше суток, то `toDate` равен `fromDate` + сутки.
      name: toDate
      in: query
      required: false
      schema:
        type: string
        format: date
    GetOrdersSupplierShipmentDateFrom:
      description: |
        Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      name: supplierShipmentDateFrom
      in: query
      required: false
      schema:
        type: string
        format: date
    GetOrdersSupplierShipmentDateTo:
      description: |
        Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.

        Если промежуток времени между `supplierShipmentDateTo` и `supplierShipmentDateFrom` меньше суток, то `supplierShipmentDateTo` равен `supplierShipmentDateFrom` + сутки.
      name: supplierShipmentDateTo
      in: query
      required: false
      schema:
        type: string
        format: date
    GetOrdersUpdatedAtFrom:
      description: |
        Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      name: updatedAtFrom
      in: query
      required: false
      schema:
        type: string
        format: date-time
    GetOrdersUpdatedAtTo:
      description: |
        Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.
      name: updatedAtTo
      in: query
      required: false
      schema:
        type: string
        format: date-time
    GetOrdersDispatchType:
      description: Способ отгрузки
      name: dispatchType
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/OrderDeliveryDispatchType'
    GetOrdersFake:
      description: |
        Фильтрация заказов по типам:

        * `false` — настоящий заказ покупателя.

        * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
      name: fake
      in: query
      required: false
      schema:
        type: boolean
        default: false
    GetOrdersHasCis:
      description: |
        Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]):

        * `true` — да.

        * `false` — нет.

        Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
      name: hasCis
      in: query
      required: false
      schema:
        type: boolean
        default: false
    GetOrdersOnlyWaitingForCancellationApprove:
      description: |
        **Только для модели DBS**

        Фильтрация заказов по наличию запросов покупателей на отмену.

        При значении `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.

        Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).
      name: onlyWaitingForCancellationApprove
      in: query
      required: false
      schema:
        type: boolean
        default: false
    GetOrdersOnlyEstimatedDelivery:
      description: |
        Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:

        * `true` — возвращаются только заказы с неподтвержденной датой доставки.
        * `false` — фильтрация не применяется.
      name: onlyEstimatedDelivery
      in: query
      required: false
      schema:
        type: boolean
        default: false
    GetOrdersBuyerType:
      description: |
        Фильтрация заказов по типу покупателя.
      name: buyerType
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/OrderBuyerType'
    PageToken:
      name: page_token
      description: |
        Идентификатор страницы c результатами.

        Если параметр не указан, возвращается первая страница.

        Рекомендуем передавать значение выходного параметра :no-translate[`nextPageToken`], полученное при последнем запросе.

        Если задан :no-translate[`page_token`] и в запросе есть параметры :no-translate[`page`] и :no-translate[`pageSize`], они игнорируются.
      in: query
      required: false
      example: eyBuZXh0SWQ6IDIzNDIgfQ==
      schema:
        type: string
    PageLimit:
      name: limit
      description: |
        Количество значений на одной странице.
      in: query
      required: false
      example: 20
      schema:
        type: integer
        format: int32
        minimum: 1
    ShipmentId:
      description: |
        Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный :no-translate[URL].
      name: shipmentId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    generateOrderLabel_ShipmentId:
      description: Идентификатор грузоместа.
      name: shipmentId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    BoxId:
      description: Идентификатор коробки.
      name: boxId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    PageFormat:
      description: Настройка размещения ярлыков на странице. Если параметра нет, возвращается :no-translate[PDF] с ярлыками формата :no-translate[A7].
      name: format
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PageFormatType'
    ReturnId:
      description: Идентификатор невыкупа или возврата.
      name: returnId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    ItemId:
      description: Идентификатор товара в возврате.
      name: itemId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    ImageHash:
      description: Хеш ссылки изображения для загрузки.
      name: imageHash
      in: path
      required: true
      schema:
        type: string
    RegionName:
      description: |
        Название региона.

        Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, :no-translate[`Москва`].
      name: name
      in: query
      required: true
      schema:
        type: string
    RegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса [:no-translate[GET regions]](:no-translate[../../reference/regions/searchRegionsByName.md]).
      name: regionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    params_ShipmentId:
      description: Идентификатор отгрузки.
      name: shipmentId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    CancelledOrders:
      description: |
        Возвращать ли отмененные заказы.

        Значение по умолчанию: :no-translate[`true`]. Если возвращать отмененные заказы не нужно, передайте значение :no-translate[`false`].
      name: cancelledOrders
      in: query
      required: false
      schema:
        type: boolean
        default: true
    ShipmentPalletLabelsPageFormat:
      name: format
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ShipmentPalletLabelPageFormatType'
      description: |
        Формат страниц PDF-файла с ярлыками:

        * :no-translate[`A4`] — по 16 ярлыков на странице.
        * :no-translate[`A8`] — по одному ярлыку на странице.
    CatalogLanguage:
      description: |
        Язык, на котором принимаются и возвращаются значения в параметрах :no-translate[`name`] и :no-translate[`description`].

        Значение по умолчанию: :no-translate[`RU`].
      name: language
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CatalogLanguageType'
    OfferIds:
      description: Идентификатор товара в каталоге.
      name: offer_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    OfferShopSkus:
      description: |
        Ваш SKU товара.

        Параметр может быть указан несколько раз, например:

        ```text translate=no
        ...shop_sku=123&shop_sku=129&shop_sku=141...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      name: shop_sku
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ShopSku'
    OfferMappingKind:
      description: Тип маппинга.
      name: mapping_kind
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/OfferMappingKindType'
    OfferProcessingStatuses:
      description: |
        Фильтрация по статусу публикации товара:

        * `READY` — товар прошел модерацию.
        * `IN_WORK` — товар проходит модерацию.
        * `NEED_CONTENT` — для товара без SKU на Маркете `marketSku` нужно найти карточку самостоятельно или создать ее.
        * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.
        * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
        * `OTHER` — товар не прошел модерацию по другой причине.

        Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...status=READY,IN_WORK...
        ...status=READY&status=IN_WORK...
        ```

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
      name: status
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/OfferProcessingStatusType'
    OfferAvailabilityStatuses:
      description: |
        Фильтрация по планам поставок товара:

        * `ACTIVE` — поставки будут.
        * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.
        * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.

        Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...availability=INACTIVE,DELISTED...
        ...availability=INACTIVE&availability=DELISTED...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      name: availability
      in: query
      required: false
      schema:
        type: array
        items:
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
    CategoryIds:
      description: |
        Фильтрация по идентификатору категории на Маркете.

        Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).

        Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...category_id=14727164,14382343...
        ...category_id=14727164&category_id=14382343...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      name: category_id
      in: query
      required: false
      schema:
        type: array
        items:
          type: integer
    VendorNames:
      description: |
        Фильтрация по бренду товара.

        Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...vendor=Aqua%20Minerale,Borjomi...
        ...vendor=Aqua%20Minerale&vendor=Borjomi...
        ```

        Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд :no-translate[Schwarzkopf], то в результатах не будет товаров :no-translate[Schwarzkopf Professional].

        Если в названии бренда есть символы, которые не входят в таблицу :no-translate[ASCII] (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование :no-translate[URL] русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      name: vendor
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    params_OfferIds:
      description: |
        Идентификатор скрытого предложения.
      name: offer_id
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ShopSku'
    ReportId:
      description: |
        Идентификатор отчета или документа, который вы получили после запуска генерации.
      name: reportId
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 255
    ReportFormat:
      description: Формат отчета или документа.
      name: format
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ReportFormatType'
    ReportLanguage:
      description: Язык отчета или документа.
      name: language
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/ReportLanguageType'
    MassOrderLabelsGenerationPageFormat:
      description: Настройка размещения ярлыков на странице. Если параметра нет, возвращается :no-translate[PDF] с ярлыками формата :no-translate[A7].
      name: format
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PageFormatType'
    OutletId:
      description: Идентификатор точки продаж.
      name: outletId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    OutletIds:
      description: |
        Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.

        В запросе должен быть либо параметр :no-translate[`outletIds`], либо параметр :no-translate[`ids`]. Запрос с обоими параметрами или без них приведет к ошибке.
      name: outletIds
      in: query
      required: false
      schema:
        type: array
        uniqueItems: true
        maxItems: 500
        minItems: 1
        items:
          type: integer
          format: int64
          minimum: 1
    LicenseIds:
      description: Список идентификаторов лицензий.
      name: ids
      in: query
      required: false
      schema:
        type: array
        uniqueItems: true
        items:
          type: integer
          format: int64
          minimum: 1
    DeleteLicenseIds:
      description: Список идентификаторов лицензий для удаления.
      name: ids
      in: query
      required: true
      schema:
        type: array
        uniqueItems: true
        minItems: 1
        items:
          type: integer
          format: int64
    ModelQuery:
      description: Поисковый запрос по названию модели товара.
      name: query
      in: query
      required: true
      schema:
        type: string
    ModelRegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса [:no-translate[GET regions]](:no-translate[../../reference/regions/searchRegionsByName.md]).
      name: regionId
      in: query
      required: true
      schema:
        type: integer
        format: int64
    Currency:
      description: |
        Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

        Возможные значения:

        * :no-translate[`BYN`] — белорусский рубль.

        * :no-translate[`KZT`] — казахстанский тенге.

        * :no-translate[`RUR`] — российский рубль.

        * :no-translate[`UAH`] — украинская гривна.

        Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
      name: currency
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyType'
    ModelId:
      description: Идентификатор модели товара.
      name: modelId
      in: path
      required: true
      schema:
        type: integer
        format: int64
        minimum: 0
        exclusiveMinimum: true
    OrderByPrice:
      description: |
        Направление сортировки по цене.

        Возможные значения:
        * :no-translate[`ASC`] — сортировка по возрастанию.
        * :no-translate[`DESC`] — сортировка по убыванию.

        Значение по умолчанию: предложения выводятся в произвольном порядке.
      name: orderByPrice
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/SortOrderType'
    ModelPageCount:
      description: Количество предложений на странице ответа.
      name: count
      in: query
      required: false
      schema:
        type: integer
        format: int32
        default: 10
    MarketCategoryId:
      in: path
      name: categoryId
      description: |
        Идентификатор категории на Маркете.

        Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [:no-translate[POST categories/tree]](:no-translate[../../reference/categories/getCategoriesTree.md]).
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    BusinessIdQuery:
      description: |
        Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [:no-translate[GET campaigns]](:no-translate[../../reference/campaigns/getCampaigns.md]).

        Передайте параметр, чтобы получить характеристики, которые являются особенностями варианта товара в данном кабинете.
      name: businessId
      in: query
      required: false
      schema:
        type: integer
        format: int64
        minimum: 1
    ChatId:
      description: Идентификатор чата.
      name: chatId
      in: query
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
    MessageId:
      description: Идентификатор сообщения.
      name: messageId
      in: query
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
  schemas:
    ApiResponseStatusType:
      type: string
      description: |
        Тип ответа.
        Возможные значения:
        * `OK` — ошибок нет.
        * `ERROR` — при обработке запроса произошла ошибка.
      enum:
        - OK
        - ERROR
    ApiResponse:
      type: object
      description: Стандартная обертка для ответов сервера.
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatusType'
    BusinessDTO:
      description: Информация о кабинете.
      type: object
      properties:
        id:
          description: Идентификатор кабинета.
          type: integer
          format: int64
        name:
          description: Название бизнеса.
          type: string
    CurrencyType:
      type: string
      description: |
        Коды валют:

        * `RUR` — российский рубль.
        * `UAH` — украинская гривна.
        * `BYR` — белорусский рубль.
        * `KZT` — казахстанский тенге.
        * `UZS` — узбекский сум.
      enum:
        - RUR
        - USD
        - EUR
        - UAH
        - AUD
        - GBP
        - BYR
        - BYN
        - DKK
        - ISK
        - KZT
        - CAD
        - CNY
        - NOK
        - XDR
        - SGD
        - TRY
        - SEK
        - CHF
        - JPY
        - AZN
        - ALL
        - DZD
        - AOA
        - ARS
        - AMD
        - AFN
        - BHD
        - BGN
        - BOB
        - BWP
        - BND
        - BRL
        - BIF
        - HUF
        - VEF
        - KPW
        - VND
        - GMD
        - GHS
        - GNF
        - HKD
        - GEL
        - AED
        - EGP
        - ZMK
        - ILS
        - INR
        - IDR
        - JOD
        - IQD
        - IRR
        - YER
        - QAR
        - KES
        - KGS
        - COP
        - CDF
        - CRC
        - KWD
        - CUP
        - LAK
        - LVL
        - SLL
        - LBP
        - LYD
        - SZL
        - LTL
        - MUR
        - MRO
        - MKD
        - MWK
        - MGA
        - MYR
        - MAD
        - MXN
        - MZN
        - MDL
        - MNT
        - NPR
        - NGN
        - NIO
        - NZD
        - OMR
        - PKR
        - PYG
        - PEN
        - PLN
        - KHR
        - SAR
        - RON
        - SCR
        - SYP
        - SKK
        - SOS
        - SDG
        - SRD
        - TJS
        - THB
        - TWD
        - BDT
        - TZS
        - TND
        - TMM
        - UGX
        - UZS
        - UYU
        - PHP
        - DJF
        - XAF
        - XOF
        - HRK
        - CZK
        - CLP
        - LKR
        - EEK
        - ETB
        - RSD
        - ZAR
        - KRW
        - NAD
        - TL
        - UE
    BusinessSettingsDTO:
      type: object
      description: Настройки кабинета.
      properties:
        onlyDefaultPrice:
          description: |
            Управление ценами на товары:

            * `false` — можно установить цену, которая действует:
              * во всех магазинах кабинета — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md);
              * в конкретном магазине — [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).
            * `true` — можно установить только цену, которая действует во всех магазинах кабинета, — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).
          type: boolean
        currency:
          description: Валюта [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
          $ref: '#/components/schemas/CurrencyType'
    GetBusinessSettingsInfoDTO:
      type: object
      description: Информация о кабинете и его настройках.
      properties:
        info:
          description: Базовая информация о кабинете.
          $ref: '#/components/schemas/BusinessDTO'
        settings:
          description: Настройки на уровне кабинета.
          $ref: '#/components/schemas/BusinessSettingsDTO'
    GetBusinessSettingsResponse:
      type: object
      description: Ответ на запрос настроек кабинета.
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetBusinessSettingsInfoDTO'
    ApiErrorDTO:
      type: object
      description: Общий формат ошибки.
      required:
        - code
      properties:
        code:
          description: Код ошибки.
          type: string
        message:
          description: Описание ошибки.
          type: string
    ApiErrorResponse:
      type: object
      description: Стандартная обертка для ошибок сервера.
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            errors:
              description: Список ошибок.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/ApiErrorDTO'
    ApiClientDataErrorResponse:
      description: Ошибка в данных переданных от клиента.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    ApiUnauthorizedErrorResponse:
      description: В запросе не указаны авторизационные данные.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    ApiForbiddenErrorResponse:
      description: Неверны авторизационные данные, указанные в запросе, или запрещен доступ к запрашиваемому ресурсу.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    ApiNotFoundErrorResponse:
      description: Запрашиваемый ресурс не найден.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    ApiLimitErrorResponse:
      description: Превышено ограничение на доступ к ресурсу.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    ApiServerErrorResponse:
      description: Внутренняя ошибка сервера.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    PlacementType:
      description: |
        Модель, по которой работает магазин:

        * `FBS` — FBS или Экспресс.
        * `FBY` — FBY.
        * `DBS` — DBS.
      type: string
      enum:
        - FBS
        - FBY
        - DBS
    CampaignDTO:
      description: Информация о магазине.
      type: object
      properties:
        domain:
          description: Название магазина.
          type: string
        id:
          description: |
            Идентификатор кампании.

            Его также можно найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        clientId:
          description: Идентификатор плательщика в Яндекс Балансе.
          type: integer
          format: int64
          deprecated: true
        business:
          $ref: '#/components/schemas/BusinessDTO'
        placementType:
          $ref: '#/components/schemas/PlacementType'
    FlippingPagerDTO:
      description: Модель для пагинации.
      type: object
      properties:
        total:
          type: integer
          format: int32
          description: Сколько всего найдено элементов.
        from:
          type: integer
          format: int32
          description: Начальный номер найденного элемента на странице.
        to:
          type: integer
          format: int32
          description: Конечный номер найденного элемента на странице.
        currentPage:
          type: integer
          format: int32
          description: Текущая страница.
        pagesCount:
          type: integer
          format: int32
          description: Общее количество страниц.
        pageSize:
          type: integer
          format: int32
          description: Размер страницы.
    GetCampaignsResponse:
      description: Результаты поиска магазинов.
      type: object
      required:
        - campaigns
      properties:
        campaigns:
          description: Список с информацией по каждому магазину.
          type: array
          items:
            $ref: '#/components/schemas/CampaignDTO'
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
    GetCampaignResponse:
      description: Информация о магазине к данным идентификатора кампании.
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignDTO'
    RegionType:
      description: |
        Тип региона.

        Возможные значения:

        * `CITY_DISTRICT` — район города.

        * `CITY` — крупный город.

        * `CONTINENT` — континент.

        * `COUNTRY_DISTRICT` — область.

        * `COUNTRY` — страна.

        * `REGION` — регион.

        * `REPUBLIC_AREA` — район субъекта федерации.

        * `REPUBLIC` — субъект федерации.

        * `SUBWAY_STATION` — станция метро.

        * `VILLAGE` — город.

        * `OTHER` — неизвестный регион.
      type: string
      enum:
        - OTHER
        - CONTINENT
        - REGION
        - COUNTRY
        - COUNTRY_DISTRICT
        - REPUBLIC
        - CITY
        - VILLAGE
        - CITY_DISTRICT
        - SUBWAY_STATION
        - REPUBLIC_AREA
    CampaignSettingsScheduleSourceType:
      description: |
        Источник информации о расписании работы службы доставки.
        Возможные значения:
        * `WEB` — информация получена из настроек кабинета продавца на Маркете.
        * `YML` — информация получена из прайс-листа магазина.
      type: string
      enum:
        - WEB
        - YML
    DateDdMmYyyy:
      type: string
      description: |
        Формат даты: `ДД-ММ-ГГГГ`.
      format: date-dd-MM-yyyy
      example: 23-09-2022
    CampaignSettingsTimePeriodDTO:
      description: Период, за который рассчитывается итоговый список нерабочих дней службы доставки.
      type: object
      properties:
        fromDate:
          description: |
            Дата (включительно) начала периода, по которому рассчитан итоговый список нерабочих дней службы доставки.

            Формат даты: `ДД-ММ-ГГГГ`.
          $ref: '#/components/schemas/DateDdMmYyyy'
        toDate:
          description: |
            Дата (включительно) окончания периода, по которому рассчитан итоговый список нерабочих дней службы доставки.

            Формат даты: `ДД-ММ-ГГГГ`.
          $ref: '#/components/schemas/DateDdMmYyyy'
    CampaignSettingsScheduleDTO:
      description: Расписание работы службы доставки в своем регионе.
      type: object
      required:
        - customHolidays
        - customWorkingDays
        - totalHolidays
        - weeklyHolidays
      properties:
        availableOnHolidays:
          description: |
            Признак работы службы доставки в государственные праздники.
            Возможные значения.
            * `false` — служба доставки не работает в праздничные дни.
            * `true` — служба доставки работает в праздничные дни.
          type: boolean
        customHolidays:
          description: Список дней, в которые служба доставки не работает. Дни магазин указал в кабинете продавца на Маркете.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
        customWorkingDays:
          description: Список выходных и праздничных дней, в которые служба доставки работает. Дни магазин указал в кабинете продавца на Маркете.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
        period:
          $ref: '#/components/schemas/CampaignSettingsTimePeriodDTO'
        totalHolidays:
          description: Итоговый список нерабочих дней службы доставки. Список рассчитывается с учетом выходных, нерабочих дней и государственных праздников. Информацию по ним магазин указывает в кабинете продавца на Маркете.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
        weeklyHolidays:
          description: Список выходных дней недели и государственных праздников.
          type: array
          uniqueItems: true
          items:
            description: |
              Номер дня недели.
              Возможные значения:
              * `1` — понедельник.
              * `2` — вторник.
              * `3` — среда.
              * `4` — четверг.
              * `5` — пятница.
              * `6` — суббота.
              * `7` — воскресенье.

              Для формата JSON выводится номер дня в виде числа.
            type: integer
            format: int32
            minimum: 1
            maximum: 7
    CampaignSettingsDeliveryDTO:
      description: Информация о доставке в своем регионе магазина.
      type: object
      properties:
        schedule:
          $ref: '#/components/schemas/CampaignSettingsScheduleDTO'
    CampaignSettingsLocalRegionDTO:
      description: Информация о своем регионе магазина.
      type: object
      properties:
        id:
          description: Идентификатор региона.
          type: integer
          format: int64
        name:
          description: Название региона.
          type: string
        type:
          $ref: '#/components/schemas/RegionType'
        deliveryOptionsSource:
          $ref: '#/components/schemas/CampaignSettingsScheduleSourceType'
        delivery:
          $ref: '#/components/schemas/CampaignSettingsDeliveryDTO'
    CampaignSettingsDTO:
      description: Настройки магазина.
      type: object
      properties:
        countryRegion:
          description: Идентификатор региона, в котором находится магазин.
          type: integer
          format: int64
        shopName:
          description: |
            Наименование магазина на Яндекс Маркете.
            Если наименование отсутствует, значение параметра выводится — `null`.
          type: string
        showInContext:
          description: |
            Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции.
            Возможные значения:
            * `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции.
            * `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции.
          type: boolean
          deprecated: true
        showInPremium:
          description: |
            Признак показа предложений магазина в блоке над результатами поиска (cпецразмещение).
            Возможные значения:
            * `false` — предложения не показываются в блоке cпецразмещения.
            * `true` — предложения показываются в блоке cпецразмещения.
          type: boolean
          deprecated: true
        useOpenStat:
          description: |
            Признак использования внешней интернет-статистики.
            Возможные значения:
            * `false` — внешняя интернет-статистика не используется.
            * `true` — внешняя интернет-статистика используется.
          type: boolean
          deprecated: true
        localRegion:
          $ref: '#/components/schemas/CampaignSettingsLocalRegionDTO'
    GetCampaignSettingsResponse:
      description: Ответ на запрос настроек магазина.
      type: object
      properties:
        settings:
          $ref: '#/components/schemas/CampaignSettingsDTO'
    OrderStatusType:
      description: |
        Статус заказа:

        * `PLACING` — оформляется, подготовка к резервированию.

        * `RESERVED` — зарезервирован, но недооформлен.

        * `UNPAID` — оформлен, но еще не оплачен (если выбрана оплата при оформлении).

        * `PROCESSING` — находится в обработке.

        * `DELIVERY` — передан в службу доставки.

        * `PICKUP` — доставлен в пункт самовывоза.

        * `DELIVERED` — получен покупателем.

        * `CANCELLED` — отменен.

        * `PENDING` — ожидает обработки со стороны продавца.

        * `PARTIALLY_RETURNED` — возвращен частично.

        * `RETURNED` — возвращен полностью.

        * `UNKNOWN` — неизвестный статус.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      type: string
      enum:
        - PLACING
        - RESERVED
        - UNPAID
        - PROCESSING
        - DELIVERY
        - PICKUP
        - DELIVERED
        - CANCELLED
        - PENDING
        - PARTIALLY_RETURNED
        - RETURNED
        - UNKNOWN
    OrderSubstatusType:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        * Значения для заказа в статусе `PROCESSING`:

            * `STARTED` — заказ подтвержден, его можно начать обрабатывать.

            * `READY_TO_SHIP` — заказ собран и готов к отправке.

        * Значения для заказа в статусе `CANCELLED`:

            * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

            * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

            * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:

              * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;
              * перерыв между первым и третьим звонком не менее 90 минут;
              * соединение не короче 5 секунд.

              Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.

            * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

            * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

            * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

            * `SHOP_FAILED` — магазин не может выполнить заказ.

            * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

            * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

            * `PROCESSING_EXPIRED` — значение более не используется.

            * `PICKUP_EXPIRED` — закончился срок хранения заказа в ПВЗ.

            * `TOO_MANY_DELIVERY_DATE_CHANGES` — заказ переносили слишком много раз.

            * `TOO_LONG_DELIVERY` — заказ доставляется слишком долго.


        * `TECHNICAL_ERROR` — техническая ошибка на стороне Маркета. Обратитесь в поддержку.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      type: string
      enum:
        - RESERVATION_EXPIRED
        - USER_NOT_PAID
        - USER_UNREACHABLE
        - USER_CHANGED_MIND
        - USER_REFUSED_DELIVERY
        - USER_REFUSED_PRODUCT
        - SHOP_FAILED
        - USER_REFUSED_QUALITY
        - REPLACING_ORDER
        - PROCESSING_EXPIRED
        - PENDING_EXPIRED
        - SHOP_PENDING_CANCELLED
        - PENDING_CANCELLED
        - USER_FRAUD
        - RESERVATION_FAILED
        - USER_PLACED_OTHER_ORDER
        - USER_BOUGHT_CHEAPER
        - MISSING_ITEM
        - BROKEN_ITEM
        - WRONG_ITEM
        - PICKUP_EXPIRED
        - DELIVERY_PROBLEMS
        - LATE_CONTACT
        - CUSTOM
        - DELIVERY_SERVICE_FAILED
        - WAREHOUSE_FAILED_TO_SHIP
        - DELIVERY_SERVICE_UNDELIVERED
        - PREORDER
        - AWAIT_CONFIRMATION
        - STARTED
        - PACKAGING
        - READY_TO_SHIP
        - SHIPPED
        - ASYNC_PROCESSING
        - WAITING_USER_INPUT
        - WAITING_BANK_DECISION
        - BANK_REJECT_CREDIT_OFFER
        - CUSTOMER_REJECT_CREDIT_OFFER
        - CREDIT_OFFER_FAILED
        - AWAIT_DELIVERY_DATES_CONFIRMATION
        - SERVICE_FAULT
        - DELIVERY_SERVICE_RECEIVED
        - USER_RECEIVED
        - WAITING_FOR_STOCKS
        - AS_PART_OF_MULTI_ORDER
        - READY_FOR_LAST_MILE
        - LAST_MILE_STARTED
        - ANTIFRAUD
        - DELIVERY_USER_NOT_RECEIVED
        - DELIVERY_SERVICE_DELIVERED
        - DELIVERED_USER_NOT_RECEIVED
        - USER_WANTED_ANOTHER_PAYMENT_METHOD
        - USER_RECEIVED_TECHNICAL_ERROR
        - USER_FORGOT_TO_USE_BONUS
        - DELIVERY_SERVICE_NOT_RECEIVED
        - DELIVERY_SERVICE_LOST
        - SHIPPED_TO_WRONG_DELIVERY_SERVICE
        - DELIVERED_USER_RECEIVED
        - WAITING_TINKOFF_DECISION
        - COURIER_SEARCH
        - COURIER_FOUND
        - COURIER_IN_TRANSIT_TO_SENDER
        - COURIER_ARRIVED_TO_SENDER
        - COURIER_RECEIVED
        - COURIER_NOT_FOUND
        - COURIER_NOT_DELIVER_ORDER
        - COURIER_RETURNS_ORDER
        - COURIER_RETURNED_ORDER
        - WAITING_USER_DELIVERY_INPUT
        - PICKUP_SERVICE_RECEIVED
        - PICKUP_USER_RECEIVED
        - CANCELLED_COURIER_NOT_FOUND
        - COURIER_NOT_COME_FOR_ORDER
        - DELIVERY_NOT_MANAGED_REGION
        - INCOMPLETE_CONTACT_INFORMATION
        - INCOMPLETE_MULTI_ORDER
        - INAPPROPRIATE_WEIGHT_SIZE
        - TECHNICAL_ERROR
        - SORTING_CENTER_LOST
        - COURIER_SEARCH_NOT_STARTED
        - LOST
        - AWAIT_PAYMENT
        - AWAIT_LAVKA_RESERVATION
        - USER_WANTS_TO_CHANGE_ADDRESS
        - FULL_NOT_RANSOM
        - PRESCRIPTION_MISMATCH
        - DROPOFF_LOST
        - DROPOFF_CLOSED
        - DELIVERY_TO_STORE_STARTED
        - USER_WANTS_TO_CHANGE_DELIVERY_DATE
        - WRONG_ITEM_DELIVERED
        - DAMAGED_BOX
        - AWAIT_DELIVERY_DATES
        - LAST_MILE_COURIER_SEARCH
        - PICKUP_POINT_CLOSED
        - LEGAL_INFO_CHANGED
        - USER_HAS_NO_TIME_TO_PICKUP_ORDER
        - DELIVERY_CUSTOMS_ARRIVED
        - DELIVERY_CUSTOMS_CLEARED
        - FIRST_MILE_DELIVERY_SERVICE_RECEIVED
        - AWAIT_AUTO_DELIVERY_DATES
        - AWAIT_USER_PERSONAL_DATA
        - NO_PERSONAL_DATA_EXPIRED
        - CUSTOMS_PROBLEMS
        - AWAIT_CASHIER
        - WAITING_POSTPAID_BUDGET_RESERVATION
        - AWAIT_SERVICEABLE_CONFIRMATION
        - POSTPAID_BUDGET_RESERVATION_FAILED
        - AWAIT_CUSTOM_PRICE_CONFIRMATION
        - READY_FOR_PICKUP
        - TOO_MANY_DELIVERY_DATE_CHANGES
        - TOO_LONG_DELIVERY
        - DEFERRED_PAYMENT
        - POSTPAID_FAILED
        - UNKNOWN
    DateDdMmYyyyHhMmSs:
      type: string
      format: date-dd-MM-yyyy-HH-mm-ss
      example: 23-09-2022 09:12:41
    OrderPaymentType:
      description: |
        Тип оплаты заказа:

        * `PREPAID` — оплата при оформлении заказа.

        * `POSTPAID` — оплата при получении заказа.

        * `UNKNOWN` — неизвестный тип.

        Если параметр отсутствует, заказ будет оплачен при получении.
      type: string
      enum:
        - PREPAID
        - POSTPAID
        - UNKNOWN
    OrderPaymentMethodType:
      description: |
        Способ оплаты заказа:

        * Значения, если выбрана оплата при оформлении заказа (`"paymentType": "PREPAID"`):

          * `YANDEX` — банковской картой.

          * `APPLE_PAY` — Apple Pay.

          * `GOOGLE_PAY` — Google Pay.

          * `CREDIT` — в кредит.

          * `TINKOFF_CREDIT` — в кредит в Тинькофф Банке.

          * `TINKOFF_INSTALLMENTS` — рассрочка в Тинькофф Банке.

          * `EXTERNAL_CERTIFICATE` — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).

          * `SBP` — через систему быстрых платежей.

          * `B2B_ACCOUNT_PREPAYMENT` — заказ оплачивает организация.


        * Значения, если выбрана оплата при получении заказа (`"paymentType": "POSTPAID"`):

          * `CARD_ON_DELIVERY` — банковской картой.

          * `BOUND_CARD_ON_DELIVERY` — привязанной картой при получении.

          * `BNPL_BANK_ON_DELIVERY` — супер Сплитом.

          * `BNPL_ON_DELIVERY` — Сплитом.

          * `CASH_ON_DELIVERY` — наличными.

          * `B2B_ACCOUNT_POSTPAYMENT` — заказ оплачивает организация после доставки.

        * `UNKNOWN` — неизвестный тип.

        Значение по умолчанию: `CASH_ON_DELIVERY`.
      type: string
      enum:
        - CASH_ON_DELIVERY
        - CARD_ON_DELIVERY
        - BOUND_CARD_ON_DELIVERY
        - BNPL_BANK_ON_DELIVERY
        - BNPL_ON_DELIVERY
        - YANDEX
        - APPLE_PAY
        - EXTERNAL_CERTIFICATE
        - CREDIT
        - GOOGLE_PAY
        - TINKOFF_CREDIT
        - SBP
        - TINKOFF_INSTALLMENTS
        - B2B_ACCOUNT_PREPAYMENT
        - B2B_ACCOUNT_POSTPAYMENT
        - UNKNOWN
    ShopSku:
      description: "Ваш :no-translate[SKU] —\_идентификатор товара в вашей системе.\n\nПравила использования :no-translate[SKU]:\n\n* У каждого товара :no-translate[SKU] должен быть свой.\n\n* Уже заданный :no-translate[SKU] нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.\n\n:no-translate[SKU] товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).\n\n[Что такое :no-translate[SKU] и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)\n"
      type: string
      pattern: ^(?=.*\S.*)[^\x00-\x08\x0A-\x1f\x7f]{1,255}$
      minLength: 1
      maxLength: 255
    OrderVatType:
      description: |
        Налог на добавленную стоимость (НДС) на товар:

        * `NO_VAT` — НДС не облагается, используется только для отдельных видов услуг.

        * `VAT_0` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.

        * `VAT_10` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.

        * `VAT_10_110` — НДС 10/110. НДС 10%, применяется только при предоплате.

        * `VAT_20` — НДС 20%. Основной НДС с 2019 года.

        * `VAT_20_120` — НДС 20/120. НДС 20%, применяется только при предоплате.

        * `VAT_18` — НДС 18%. Основной НДС до 2019 года.

        * `VAT_18_118` — НДС 18/118. НДС использовался до 1 января 2019 года при предоплате.

        * `VAT_12` — НДС 12%. Используется только в Узбекистане.

        * `VAT_05` — НДС 5%. НДС для упрощенной системы налогообложения (УСН).

        * `VAT_07` — НДС 7%. НДС для упрощенной системы налогообложения (УСН).

        * `UNKNOWN_VALUE` — неизвестный тип.

        Используется только совместно с параметром `payment-method=YANDEX`.
      type: string
      enum:
        - NO_VAT
        - VAT_0
        - VAT_10
        - VAT_10_110
        - VAT_20
        - VAT_20_120
        - VAT_18
        - VAT_18_118
        - VAT_12
        - VAT_05
        - VAT_07
        - UNKNOWN_VALUE
    OrderPromoType:
      description: |
        Тип скидки:

        * `DIRECT_DISCOUNT` — прямая скидка, которую устанавливает продавец или Маркет.

        * `BLUE_SET` — комплекты.

        * `BLUE_FLASH` — флеш-акция.

        * `MARKET_COUPON` — скидка по промокоду Маркета.

        * `MARKET_PROMOCODE` — скидка по промокоду магазина.

        * `MARKET_BLUE` — скидка на Маркете.

        * `CHEAPEST_AS_GIFT` — самый дешевый товар в подарок.

        * `CASHBACK` — кешбэк.

        * `SPREAD_DISCOUNT_COUNT` — скидка за количество одинаковых товаров.

        * `SPREAD_DISCOUNT_RECEIPT` — скидка от суммы чека.

        * `DISCOUNT_BY_PAYMENT_TYPE` — прямая скидка при оплате картой Плюса.

        * `PERCENT_DISCOUNT` — прямая скидка в процентах.

        * `DCO_EXTRA_DISCOUNT` — дополнительная скидка, необходимая для расчета субсидии от Маркета.

        * `UNKNOWN` — неизвестный тип.

        Устаревшие типы:

        * `GENERIC_BUNDLE`.

        * `MARKET_COIN`.

        * `PRICE_DROP_AS_YOU_SHOP`.

        * `SECRET_SALE`.
      type: string
      enum:
        - DIRECT_DISCOUNT
        - BLUE_SET
        - BLUE_FLASH
        - GENERIC_BUNDLE
        - MARKET_COUPON
        - MARKET_PROMOCODE
        - MARKET_BLUE
        - MARKET_COIN
        - PRICE_DROP_AS_YOU_SHOP
        - SECRET_SALE
        - CHEAPEST_AS_GIFT
        - CASHBACK
        - SPREAD_DISCOUNT_COUNT
        - SPREAD_DISCOUNT_RECEIPT
        - DISCOUNT_BY_PAYMENT_TYPE
        - PERCENT_DISCOUNT
        - DCO_EXTRA_DISCOUNT
        - UNKNOWN
    OrderItemPromoDTO:
      description: Информация о вознаграждениях продавцу за скидки на товар по промокодам, купонам и акциям.
      type: object
      required:
        - type
        - subsidy
      properties:
        type:
          description: |
            Тип скидки.
          $ref: '#/components/schemas/OrderPromoType'
        discount:
          description: |
            Размер пользовательской скидки в валюте покупателя.
          type: number
          format: decimal
        subsidy:
          description: |
            Вознаграждение продавцу от Маркета за товар, проданный в рамках акции.
          type: number
          format: decimal
        shopPromoId:
          description: |
            Идентификатор акции поставщика.
          type: string
        marketPromoId:
          description: |
            Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и продавцом.
          type: string
    CountryCode:
      description: |
        Страна производства в формате ISO 3166-1 alpha-2. [Как получить](../../reference/regions/getRegionsCodes.md)
      type: string
      minLength: 2
      maxLength: 2
      pattern: ^[A-Z]{2}$
      example: RU
    OrderItemInstanceDTO:
      description: |
        Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без.
      type: object
      properties:
        cis:
          description: Код идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) без криптохвоста или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).
          type: string
        cisFull:
          description: Код идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) с криптохвостом.
          type: string
        uin:
          description: |
            УИН ювелирного изделия (16-значный код)
            Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
    OrderItemStatusType:
      description: |
        Невыкупленный или возвращенный товар:

        * `REJECTED` — невыкупленный.

        * `RETURNED` — возвращенный.
      type: string
      enum:
        - REJECTED
        - RETURNED
    OrderItemDetailDTO:
      description: Детали по товару в заказе.
      type: object
      required:
        - itemCount
        - itemStatus
        - updateDate
      properties:
        itemCount:
          description: Количество единиц товара.
          type: integer
          format: int64
        itemStatus:
          $ref: '#/components/schemas/OrderItemStatusType'
        updateDate:
          $ref: '#/components/schemas/DateDdMmYyyy'
    OrderItemSubsidyType:
      description: |
        Тип субсидии:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.).
      type: string
      enum:
        - YANDEX_CASHBACK
        - SUBSIDY
    OrderItemSubsidyDTO:
      description: |
        Общее вознаграждение продавцу за все скидки на товар:

        * по промокодам, купонам и акциям;
        * по баллам Плюса.

        Включает НДС.
      type: object
      required:
        - type
        - amount
      properties:
        type:
          $ref: '#/components/schemas/OrderItemSubsidyType'
        amount:
          description: Сумма субсидии.
          type: number
          format: decimal
    OrderItemInstanceType:
      description: |
        Вид маркировки товара:

        * `CIS` — КИЗ, идентификатор единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go). Обязателен для заполнения.

        * `CIS_OPTIONAL` — КИЗ, идентификатор единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/). Необязателен для заполнения, но в ближайшее время потребуется его передача.

        * `UIN` — УИН, уникальный идентификационный номер.

        * `RNPT` — РНПТ, регистрационный номер партии товара.

        * `GTD` — номер ГТД, грузовой таможенной декларации.
      type: string
      enum:
        - CIS
        - CIS_OPTIONAL
        - UIN
        - RNPT
        - GTD
    OrderItemTagType:
      description: |
        Признак товара:

        * `ULTIMA` — премиум-товар.
        * `SAFE_TAG` — товар с [защитной меткой](*safe-tag).
        * `TURBO` — товар, который быстро раскупают.
      type: string
      enum:
        - ULTIMA
        - SAFE_TAG
        - TURBO
    OrderItemDTO:
      description: Список товаров в заказе.
      type: object
      required:
        - id
        - offerId
        - offerName
        - price
        - buyerPrice
        - buyerPriceBeforeDiscount
        - count
        - vat
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Позволяет идентифицировать товар в рамках данного заказа.
          type: integer
          format: int64
        offerId:
          description: Идентификатор вашего товарного предложения для определенного товара. [Описание поля в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/fields/index.html#sku)
          $ref: '#/components/schemas/ShopSku'
        offerName:
          description: Название товара.
          type: string
        price:
          description: |
            Цена на товар в валюте заказа без учета вознаграждения продавцу за скидки по промокодам, купонам и акциям (параметр `subsidies`).

            Включает НДС.
          type: number
          format: decimal
        buyerPrice:
          description: |
            Цена на товар в валюте покупателя. В цене уже учтены скидки по:

            * акциям;
            * купонам;
            * промокодам.
          type: number
          format: decimal
        buyerPriceBeforeDiscount:
          description: |
            Стоимость товара в валюте покупателя до применения скидок по:

            * акциям;
            * купонам;
            * промокодам.
          type: number
          format: decimal
        priceBeforeDiscount:
          deprecated: true
          description: Стоимость товара в валюте магазина до применения скидок.
          type: number
          format: decimal
        count:
          description: Количество единиц товара.
          type: integer
        vat:
          description: Налог на добавленную стоимость (НДС) на товар.
          $ref: '#/components/schemas/OrderVatType'
        shopSku:
          deprecated: true
          description: "{% note warning \"Вместо него используйте `offerId`.\" %}\n\n\_\n\n{% endnote %}\n\nВаш SKU —\_идентификатор товара в вашей системе.\n"
          $ref: '#/components/schemas/ShopSku'
        subsidy:
          deprecated: true
          description: "{% note warning \"Вместо него используйте `subsidies`.\" %}\n\n\_\n\n{% endnote %}\n\nОбщее вознаграждение продавцу за DBS-доставку и все скидки на товар:\n\n* по промокодам;\n* по купонам;\n* по баллам Плюса;\n* по акциям.\n"
          type: number
          format: decimal
        partnerWarehouseId:
          deprecated: true
          description: Идентификатор склада в системе магазина, на который сформирован заказ.
          type: string
        promos:
          description: Информация о вознаграждениях продавцу за скидки на товар по промокодам, купонам и акциям.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemPromoDTO'
        instances:
          description: |
            Информация о маркировке единиц товара.

            Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/identifiers](../../reference/orders/provideOrderItemIdentifiers.md).

            Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
        details:
          deprecated: true
          description: "{% note warning \"Для получения информации о невыкупах и возвратах используйте [GET campaigns/{campaignId}/returns](../../reference/orders/getReturns.md).\" %}\n\n\_\n\n{% endnote %}\n\nИнформация о невыкупленных или возвращенных товарах в заказе.\n"
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemDetailDTO'
        subsidies:
          description: Список субсидий по типам.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemSubsidyDTO'
        requiredInstanceTypes:
          description: Список необходимых маркировок товара.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrderItemInstanceType'
        tags:
          description: Признаки товара.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrderItemTagType'
    OrderSubsidyType:
      description: |
        Тип субсидии:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.)

        * `DELIVERY` — скидка за доставку (DBS).
      type: string
      enum:
        - YANDEX_CASHBACK
        - SUBSIDY
        - DELIVERY
    OrderSubsidyDTO:
      description: |
        Общее вознаграждение продавцу за DBS-доставку и все скидки на товар:

        * по промокодам, купонам и акциям;
        * по баллам Плюса;
        * по доставке (DBS).

        Включает НДС.
      type: object
      required:
        - type
        - amount
      properties:
        type:
          $ref: '#/components/schemas/OrderSubsidyType'
        amount:
          description: Сумма субсидии.
          type: number
          format: decimal
    OrderDeliveryType:
      description: "Способ доставки заказа:\n\n* `DELIVERY` — курьерская доставка.\n\n* `PICKUP` — самовывоз.\n\n* `POST` — почта.\n\n* `DIGITAL` —\_для цифровых товаров.\n\n* `UNKNOWN` — неизвестный тип.\n"
      type: string
      enum:
        - DELIVERY
        - PICKUP
        - POST
        - DIGITAL
        - UNKNOWN
    OrderDeliveryPartnerType:
      description: |
        Тип сотрудничества со службой доставки в рамках конкретного заказа:

        * `SHOP` — магазин работает со службой доставки напрямую или доставляет заказы самостоятельно.

        * `YANDEX_MARKET` — магазин работает со службой доставки через Маркет.

        * `UNKNOWN` — неизвестный тип.
      type: string
      enum:
        - SHOP
        - YANDEX_MARKET
        - UNKNOWN
    OrderCourierDTO:
      description: Информация о курьере.
      type: object
      properties:
        fullName:
          description: Полное имя курьера.
          type: string
        phone:
          description: Номер телефона курьера.
          type: string
        phoneExtension:
          description: Добавочный номер телефона.
          type: string
        vehicleNumber:
          description: Номер транспортного средства.
          type: string
        vehicleDescription:
          description: Описание машины. Например, модель и цвет.
          type: string
    OrderDeliveryDatesDTO:
      description: Диапазон дат доставки.
      type: object
      required:
        - fromDate
      properties:
        fromDate:
          description: |
            Ближайшая дата доставки.

            Формат даты: `ДД-ММ-ГГГГ`.
          $ref: '#/components/schemas/DateDdMmYyyy'
        toDate:
          description: |
            Самая поздняя дата доставки.

            Если параметр `toDate` не указан, единственно возможной датой доставки считается дата, указанная в параметре `fromDate`.

            Формат даты: `ДД-ММ-ГГГГ`.
          $ref: '#/components/schemas/DateDdMmYyyy'
        fromTime:
          description: |
            Начало интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Минимальное значение: `00:00`.
          type: string
          format: time
        toTime:
          description: |
            Конец интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Максимальное значение: `23:59`.
          type: string
          format: time
        realDeliveryDate:
          description: Дата, когда товар доставлен до пункта выдачи заказа (в случае самовывоза) или до покупателя (если заказ доставляет курьер).
          $ref: '#/components/schemas/DateDdMmYyyy'
    RegionDTO:
      description: Регион доставки.
      type: object
      required:
        - id
        - name
        - type
      properties:
        id:
          description: Идентификатор региона.
          type: integer
          format: int64
        name:
          description: Название региона.
          type: string
        type:
          description: Тип региона.
          $ref: '#/components/schemas/RegionType'
        parent:
          description: |
            Информация о родительском регионе.

            Указываются родительские регионы до уровня страны.
          $ref: '#/components/schemas/RegionDTO'
        children:
          description: Дочерние регионы.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/RegionDTO'
    GpsDTO:
      description: |
        GPS-координаты широты и долготы.
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          type: number
          format: decimal
          description: Широта.
        longitude:
          type: number
          format: decimal
          description: Долгота.
    OrderDeliveryAddressDTO:
      description: |
        Адрес доставки.

        Указывается, если параметр `type` принимает значение `DELIVERY`, `POST` или `PICKUP` (только для модели DBS). Если `type=PICKUP`, возвращается адрес пункта выдачи.
      type: object
      properties:
        country:
          description: |
            Страна.
          type: string
        postcode:
          description: |
            Почтовый индекс.

            Указывается, если выбрана доставка почтой (`delivery type=POST`).
          type: string
        city:
          description: |
            Город или населенный пункт.
          type: string
        district:
          description: Район.
          type: string
        subway:
          description: Станция метро.
          type: string
        street:
          description: |
            Улица.
          type: string
        house:
          description: |
            Дом.
          type: string
        estate:
          description: |
            Владение.
          type: string
        block:
          description: Корпус.
          type: string
        building:
          description: Строение.
          type: string
        entrance:
          description: Подъезд.
          type: string
        entryphone:
          description: Код домофона.
          type: string
        floor:
          description: Этаж.
          type: string
        apartment:
          description: Квартира или офис.
          type: string
        phone:
          description: |
            Телефон получателя заказа.
          type: string
        recipient:
          description: |
            Фамилия, имя и отчество получателя заказа.
          type: string
        gps:
          description: GPS-координаты.
          $ref: '#/components/schemas/GpsDTO'
    OrderLiftType:
      description: |
        Тип подъема заказа на этаж:

        * `NOT_NEEDED` — не требуется.

        * `MANUAL` — ручной.

        * `ELEVATOR` — лифт.

        * `CARGO_ELEVATOR` — грузовой лифт.

        * `FREE` — любой из перечисленных выше, если включена опция бесплатного подъема.

        * `UNKNOWN` — неизвестный тип.
      type: string
      enum:
        - NOT_NEEDED
        - MANUAL
        - ELEVATOR
        - CARGO_ELEVATOR
        - FREE
        - UNKNOWN
    OrderDeliveryDispatchType:
      description: |
        Способ отгрузки:

        * `BUYER` — доставка покупателю.

        * `MARKET_BRANDED_OUTLET` — доставка в пункт выдачи заказов Маркета.

        * `SHOP_OUTLET` — доставка в пункт выдачи заказов магазина.

        * `UNKNOWN` — неизвестный тип.
      type: string
      enum:
        - UNKNOWN
        - BUYER
        - MARKET_BRANDED_OUTLET
        - SHOP_OUTLET
    OrderTrackDTO:
      description: Информация о трек-номере посылки (:no-translate[DBS]).
      type: object
      required:
        - deliveryServiceId
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
          type: integer
          format: int64
    OrderParcelBoxDTO:
      description: Информация о грузоместе.
      type: object
      required:
        - id
        - fulfilmentId
      properties:
        id:
          description: Идентификатор грузоместа.
          type: integer
          format: int64
        fulfilmentId:
          description: Идентификатор грузового места в информационной системе магазина.
          type: string
    OrderShipmentDTO:
      description: |
        Список посылок.

        В параметре может указываться несколько посылок.
      type: object
      properties:
        id:
          description: Идентификатор посылки, присвоенный Маркетом.
          type: integer
          format: int64
        shipmentDate:
          description: "День, в который нужно отгрузить заказ службе доставки.\n\nФормат даты: `ДД-ММ-ГГГГ`.\n\nЕсли заказ сделан организацией, параметр не возвращается до согласования даты доставки.\n\n{% cut \"Иногда Маркет может перенести дату отгрузки\" %}\n\nУ таких заказов обновится параметр `updatedAt`. Чтобы найти их, в запросе [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) укажите параметры `updatedAtFrom` и `updatedAtTo`.\n\n{% endcut %}\n\n\_\n"
          $ref: '#/components/schemas/DateDdMmYyyy'
        shipmentTime:
          description: |
            **Только для модели Экспресс**

            Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.

            Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.

            Формат времени: 24-часовой, `ЧЧ:ММ`.

            Если заказ сделан организацией, параметр не возвращается до согласования даты доставки.
          type: string
        tracks:
          description: |
            **Только для модели :no-translate[DBS]**

            Информация для отслеживания перемещений посылки.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
        boxes:
          description: Список грузовых мест.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderParcelBoxDTO'
    OrderDeliveryEacType:
      description: |
        Тип кода подтверждения ЭАПП:

        * `MERCHANT_TO_COURIER` (временно не возвращается) — продавец передает код курьеру для получения невыкупа.

        * `COURIER_TO_MERCHANT` — курьер передает код продавцу для получения заказа.

        * `CHECKING_BY_MERCHANT` — продавец проверяет код на своей стороне.
      type: string
      enum:
        - MERCHANT_TO_COURIER
        - COURIER_TO_MERCHANT
        - CHECKING_BY_MERCHANT
    OrderDeliveryDTO:
      description: Информация о доставке.
      type: object
      required:
        - type
        - serviceName
        - deliveryPartnerType
        - dates
        - deliveryServiceId
      properties:
        id:
          description: |
            Идентификатор доставки, присвоенный магазином.

            Указывается, только если магазин передал данный идентификатор в ответе на запрос методом `POST cart`.
          deprecated: true
          type: string
        type:
          description: |
            Способ доставки заказа.
          $ref: '#/components/schemas/OrderDeliveryType'
        serviceName:
          description: Наименование службы доставки.
          type: string
        price:
          deprecated: true
          description: "{% note warning \"Стоимость доставки смотрите в параметре `deliveryTotal`.\" %}\n\n\_\n\n{% endnote %}\n\nСтоимость доставки в валюте заказа.\n"
          type: number
          format: decimal
        deliveryPartnerType:
          description: Тип сотрудничества со службой доставки в рамках конкретного заказа.
          $ref: '#/components/schemas/OrderDeliveryPartnerType'
        courier:
          $ref: '#/components/schemas/OrderCourierDTO'
        dates:
          $ref: '#/components/schemas/OrderDeliveryDatesDTO'
        region:
          $ref: '#/components/schemas/RegionDTO'
        address:
          $ref: '#/components/schemas/OrderDeliveryAddressDTO'
        vat:
          $ref: '#/components/schemas/OrderVatType'
        deliveryServiceId:
          description: Идентификатор службы доставки.
          type: integer
          format: int64
        liftType:
          $ref: '#/components/schemas/OrderLiftType'
        liftPrice:
          description: Стоимость подъема на этаж.
          type: number
          format: decimal
        outletCode:
          description: Идентификатор пункта самовывоза, присвоенный магазином.
          type: string
        outletStorageLimitDate:
          description: |
            Дата, до которой заказ будет храниться в пункте выдачи. Возвращается, когда заказ переходит в статус `PICKUP`.

            Один раз дату можно поменять с помощью метода [PUT campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit](../../reference/orders/updateOrderStorageLimit.md).
          $ref: '#/components/schemas/DateDdMmYyyy'
        dispatchType:
          $ref: '#/components/schemas/OrderDeliveryDispatchType'
        tracks:
          description: Информация для отслеживания перемещений посылки.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
        shipments:
          description: Информация о посылках.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderShipmentDTO'
        estimated:
          description: Приблизительная ли дата доставки.
          type: boolean
        eacType:
          description: Тип кода подтверждения ЭАПП.
          $ref: '#/components/schemas/OrderDeliveryEacType'
        eacCode:
          description: |
            Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).
          type: string
    OrderBuyerType:
      description: |
        Тип покупателя:

        * `PERSON` — физическое лицо.

        * `BUSINESS` — организация.
      type: string
      enum:
        - PERSON
        - BUSINESS
    OrderBuyerBasicInfoDTO:
      description: Информация о покупателе с базовыми полями.
      type: object
      required:
        - type
      properties:
        id:
          description: Идентификатор покупателя.
          type: string
        lastName:
          description: Фамилия покупателя.
          type: string
        firstName:
          description: Имя покупателя.
          type: string
        middleName:
          description: Отчество покупателя.
          type: string
        type:
          description: |
            Тип покупателя: физическое лицо или организация. Этот параметр используется FBS- и FBY-магазинами, размещающими товары на витрине business.market.yandex.ru.
          $ref: '#/components/schemas/OrderBuyerType'
    OrderBuyerDTO:
      description: |
        Информация о покупателе.

        Параметры `id`, `lastName`, `firstName` и `middleName` возвращаются, только если вы работаете по модели :no-translate[DBS].
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderBuyerBasicInfoDTO'
        - {}
    OrderTaxSystemType:
      description: |
        Система налогообложения (СНО) магазина на момент оформления заказа:

        * `ECHN` — единый сельскохозяйственный налог (ЕСХН).

        * `ENVD` — единый налог на вмененный доход (ЕНВД).

        * `OSN` — общая система налогообложения (ОСН).

        * `PSN` — патентная система налогообложения (ПСН).

        * `USN` — упрощенная система налогообложения (УСН).

        * `USN_MINUS_COST` — упрощенная система налогообложения, доходы, уменьшенные на величину расходов (УСН «Доходы минус расходы»).

        * `NPD` — налог на профессиональный доход (НПД).

        * `UNKNOWN_VALUE` — неизвестное значение.
        Используется только совместно с параметром `payment-method=YANDEX`.
      type: string
      enum:
        - OSN
        - USN
        - USN_MINUS_COST
        - ENVD
        - ECHN
        - PSN
        - NPD
        - UNKNOWN_VALUE
    OrderDTO:
      description: Заказ.
      type: object
      required:
        - id
        - status
        - substatus
        - creationDate
        - currency
        - itemsTotal
        - deliveryTotal
        - buyerItemsTotalBeforeDiscount
        - paymentType
        - paymentMethod
        - fake
        - items
        - delivery
        - buyer
        - taxSystem
      properties:
        id:
          description: Идентификатор заказа.
          type: integer
          format: int64
        externalOrderId:
          description: Внешний идентификатор заказа, который вы передали в [POST campaigns/{campaignId}/orders/{orderId}/external-id](../../reference/orders/updateExternalOrderId.md).
          type: string
          minLength: 1
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        creationDate:
          description: |
            Дата и время оформления заказа.

            Формат даты и времени: `ДД-ММ-ГГГГ ЧЧ:ММ:СС`. Часовой пояс — :no-translate[UTC+03:00] (Москва).
          $ref: '#/components/schemas/DateDdMmYyyyHhMmSs'
        updatedAt:
          description: |
            Дата и время последнего обновления заказа.

            Формат даты и времени: `ДД-ММ-ГГГГ ЧЧ:ММ:СС`. Часовой пояс — :no-translate[UTC+03:00] (Москва).
          $ref: '#/components/schemas/DateDdMmYyyyHhMmSs'
        currency:
          description: |
            Валюта, в которой указаны цены на товары в заказе.
          $ref: '#/components/schemas/CurrencyType'
        itemsTotal:
          description: |
            Платеж покупателя.
          type: number
          format: decimal
        deliveryTotal:
          description: |
            Стоимость доставки.
          type: number
          format: decimal
        buyerItemsTotal:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя после применения скидок и без учета стоимости доставки.
          type: number
          format: decimal
        buyerTotal:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя после применения скидок и с учетом стоимости доставки.
          type: number
          format: decimal
        buyerItemsTotalBeforeDiscount:
          description: |
            Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:

            * акциям;
            * купонам;
            * промокодам.
          type: number
          format: decimal
        buyerTotalBeforeDiscount:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя до применения скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount` + стоимость доставки).
          type: number
          format: decimal
        paymentType:
          $ref: '#/components/schemas/OrderPaymentType'
        paymentMethod:
          $ref: '#/components/schemas/OrderPaymentMethodType'
        fake:
          description: |
            Тип заказа:

            * `false` — настоящий заказ покупателя.

            * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
          type: boolean
        items:
          description: Список товаров в заказе.
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDTO'
        subsidies:
          description: Список субсидий по типам.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderSubsidyDTO'
        delivery:
          $ref: '#/components/schemas/OrderDeliveryDTO'
        buyer:
          $ref: '#/components/schemas/OrderBuyerDTO'
        notes:
          description: Комментарий к заказу.
          type: string
        taxSystem:
          $ref: '#/components/schemas/OrderTaxSystemType'
        cancelRequested:
          description: |
            **Только для модели DBS**

            Запрошена ли отмена.
          type: boolean
        expiryDate:
          description: |
            Дата, после которой заказ будет отменен, если не сменит статус.

            Формат даты: `ДД-ММ-ГГГГ`.
          $ref: '#/components/schemas/DateDdMmYyyyHhMmSs'
    GetOrderResponse:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
    ForwardScrollingPagerDTO:
      description: |
        Идентификатор следующей страницы.
      type: object
      properties:
        nextPageToken:
          description: Идентификатор следующей страницы результатов.
          type: string
    GetOrdersResponse:
      type: object
      description: Модель для ответа :no-translate[API] списка информации по заказам.
      required:
        - orders
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        orders:
          description: |
            Модель заказа.
          type: array
          maxItems: 50
          items:
            $ref: '#/components/schemas/OrderDTO'
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    Cis:
      description: |
        Код идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).

        {% note warning "Не экранируйте косую черту в коде символа-разделителя `\u001d`" %}

        ✅ `01030410947874432155Qbag!\u001d93Zjqw`

        ❌ `01030410947874432155Qbag!\\u001d93Zjqw`

        Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\` и `\"`

        {% endnote %}
      type: string
    BriefOrderItemInstanceDTO:
      description: |
        Идентификатор единицы товара.

        Заполните только одно поле в зависимости от того, в какой системе маркирован товар.

        Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html).
      type: object
      properties:
        cis:
          $ref: '#/components/schemas/Cis'
        uin:
          description: |
            Уникальный идентификационный номер ювелирного изделия.

            Представляет собой число из 16 цифр.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
        countryCode:
          $ref: '#/components/schemas/CountryCode'
    OrderItemInstanceModificationDTO:
      description: Позиция в корзине, требующая маркировки.
      type: object
      required:
        - id
        - instances
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          type: integer
          format: int64
        instances:
          description: |
            Список кодов маркировки единиц товара.
          type: array
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
    ProvideOrderItemIdentifiersRequest:
      type: object
      required:
        - items
      properties:
        items:
          description: |
            Список позиций, требующих маркировки.
          type: array
          items:
            $ref: '#/components/schemas/OrderItemInstanceModificationDTO'
    BriefOrderItemDTO:
      description: Информация о маркированном товаре.
      type: object
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Позволяет идентифицировать товар в рамках данного заказа.
          type: integer
          format: int64
        vat:
          description: Налог на добавленную стоимость (НДС) на услугу доставки заказа.
          $ref: '#/components/schemas/OrderVatType'
        count:
          description: Количество единиц товара.
          type: integer
          format: int32
        price:
          description: |
            Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.
          type: number
        offerName:
          description: Название товара.
          type: string
        offerId:
          description: Ваш идентификатор товара.
          $ref: '#/components/schemas/ShopSku'
        instances:
          description: Переданные вами коды маркировки.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
    OrderItemsModificationResultDTO:
      description: |
        Краткие сведения о промаркированных товарах. Параметр возвращается, если ответ `OK`.
      type: object
      required:
        - items
      properties:
        items:
          description: Список позиций в заказе, подлежащих маркировке.
          type: array
          items:
            $ref: '#/components/schemas/BriefOrderItemDTO'
    ProvideOrderItemIdentifiersResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderItemsModificationResultDTO'
    OrderItemModificationDTO:
      description: |
        Список товаров в заказе.

        Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

        Обязательный параметр.
      type: object
      properties:
        id:
          description: |
            Идентификатор товара в рамках заказа.

            Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

            Обязательный параметр.
          type: integer
          format: int64
        count:
          description: Новое количество товара.
          type: integer
          format: int32
          minimum: 0
        instances:
          description: |
            Информация о маркировке единиц товара.

            Передавайте в запросе все единицы товара, который подлежит маркировке.

            Обязательный параметр, если в заказе от бизнеса есть товары, подлежащие маркировке в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
      required:
        - id
        - count
    OrderItemsModificationRequestReasonType:
      description: |
        Причина, почему обновился состав заказа:

        * `PARTNER_REQUESTED_REMOVE` — магазин удалил товар.
        * `USER_REQUESTED_REMOVE` — покупатель попросил удалить товар.
      type: string
      enum:
        - PARTNER_REQUESTED_REMOVE
        - USER_REQUESTED_REMOVE
    UpdateOrderItemRequest:
      description: Запрос на обновление состава заказа.
      type: object
      required:
        - items
      properties:
        items:
          description: |
            Список товаров в заказе.

            Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

            Обязательный параметр.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemModificationDTO'
        reason:
          $ref: '#/components/schemas/OrderItemsModificationRequestReasonType'
    OrderStatusChangeDeliveryDatesDTO:
      description: Диапазон дат доставки.
      type: object
      properties:
        realDeliveryDate:
          description: "**Только для модели DBS**\n\nФактическая дата доставки.\n<br><br>\nКогда передавать параметр `realDeliveryDate`:\n\n* Не передавайте параметр, если:\n  * переводите заказ в любой статус, кроме `PICKUP` или `DELIVERED`;\n  * меняете статус заказа на `PICKUP` или `DELIVERED` в день доставки — будет указана дата выполнения запроса.\n* Передавайте дату доставки, если переводите заказ в статус `PICKUP` или `DELIVERED` не в день доставки. Нельзя указывать дату доставки в будущем.\n\n  {% note warning \"Передача статуса после установленного срока снижает индекс качества\" %}\n\n  О сроках читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/tech#dbs).\n\n  {% endnote %}\n\n  \_\n"
          type: string
          format: date
    OrderStatusChangeDeliveryDTO:
      description: Информация о доставке.
      type: object
      properties:
        dates:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDatesDTO'
    OrderStatusChangeDTO:
      description: Заказ.
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        delivery:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDTO'
    UpdateOrderStatusRequest:
      type: object
      required:
        - order
      properties:
        order:
          $ref: '#/components/schemas/OrderStatusChangeDTO'
    UpdateOrderStatusResponse:
      description: Информация об изменении статуса заказа.
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
    OrderStateDTO:
      description: Информация по заказу.
      type: object
      required:
        - id
        - status
      properties:
        id:
          description: Идентификатор заказа.
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
    UpdateOrderStatusesRequest:
      description: Список заказов.
      type: object
      required:
        - orders
      properties:
        orders:
          description: Список заказов.
          type: array
          minItems: 1
          maxItems: 30
          items:
            $ref: '#/components/schemas/OrderStateDTO'
    OrderUpdateStatusType:
      description: |
        Изменился ли статус заказа:

        * `OK` — статус изменен.

        * `ERROR` — статус не изменен. В этом случае появится сообщение об ошибке в параметре `errorDetails`.
      type: string
      enum:
        - OK
        - ERROR
    UpdateOrderStatusDTO:
      description: Список заказов.
      type: object
      properties:
        id:
          description: Идентификатор заказа.
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        updateStatus:
          description: Статус обновления.
          $ref: '#/components/schemas/OrderUpdateStatusType'
        errorDetails:
          description: |
            Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.

            Возвращается, если параметр `updateStatus` принимает значение `ERROR`.
          type: string
    UpdateOrderStatusesDTO:
      description: Список заказов, статус которых обновился.
      type: object
      required:
        - orders
      properties:
        orders:
          description: Список с обновленными заказами.
          type: array
          items:
            $ref: '#/components/schemas/UpdateOrderStatusDTO'
    UpdateOrderStatusesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/UpdateOrderStatusesDTO'
    ParcelBoxRequestDTO:
      description: Параметр отображает одно грузовое место. Вложенные поля больше не используются, передавайте параметр пустым.
      type: object
      properties:
        fulfilmentId:
          description: "{% note warning \"Не используйте этот параметр.\" %}\n\n\_\n\n{% endnote %}\n"
          type: string
          pattern: ^[\p{Alnum}- ]*$
          deprecated: true
    ParcelRequestDTO:
      description: Информация о грузовых местах в заказе.
      type: object
      required:
        - boxes
      properties:
        boxes:
          description: Список грузовых мест. По его длине Маркет определяет количество мест.
          type: array
          items:
            $ref: '#/components/schemas/ParcelBoxRequestDTO'
          minItems: 1
    SetOrderShipmentBoxesRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/ParcelRequestDTO'
    ParcelBoxDTO:
      description: Параметр отображает одно грузовое место.
      type: object
      properties:
        id:
          description: Идентификатор коробки в составе заказа.
          type: integer
          format: int64
        fulfilmentId:
          description: "{% note warning \"Не используйте этот параметр.\" %}\n\n\_\n\n{% endnote %}\n"
          type: string
          pattern: ^[\p{Alnum}- ]*$
          deprecated: true
    ShipmentBoxesDTO:
      description: |
        В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания.
      type: object
      required:
        - boxes
      properties:
        boxes:
          description: |
            Список грузовых мест. По его длине Маркет определил количество мест.
          type: array
          items:
            $ref: '#/components/schemas/ParcelBoxDTO'
    SetOrderShipmentBoxesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ShipmentBoxesDTO'
    OrderCancellationReasonType:
      description: |
        Варианты причин, по которым заказ не может быть отменен.

        * `ORDER_DELIVERED` — заказ уже доставлен.
        * `ORDER_IN_DELIVERY` — заказ уже у курьера.
      type: string
      enum:
        - ORDER_DELIVERED
        - ORDER_IN_DELIVERY
    AcceptOrderCancellationRequest:
      type: object
      required:
        - accepted
      properties:
        accepted:
          description: |
            Решение об отмене заказа:

            * `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю.
            * `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов.
          type: boolean
        reason:
          description: |
            Причина, по которой заказ не может быть отменен (она сообщается покупателю).

            Обязательный параметр, если вы передаете `accepted="false"`.
          $ref: '#/components/schemas/OrderCancellationReasonType'
    EmptyApiResponse:
      type: object
      description: Пустой ответ сервера.
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
    OrderDigitalItemDTO:
      description: Цифровой товар.
      type: object
      required:
        - id
        - slip
        - activate_till
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          type: integer
          format: int64
        code:
          description: |
            {% note warning "Вместо него используйте `codes`" %}

            Совместное использование обоих параметров приведет к ошибке.

            {% endnote %}

            Сам ключ.
          type: string
          deprecated: true
        codes:
          description: Ключи, относящиеся к товару.
          type: array
          items:
            type: string
          minItems: 1
          maxItems: 5000
          uniqueItems: true
          nullable: true
        slip:
          description: |
            Инструкция по активации.

            Для форматирования текста можно использовать теги HTML:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.
          type: string
          maxLength: 10000
        activate_till:
          description: |
            Дата, до которой нужно активировать ключи. Если ключи действуют бессрочно, укажите любую дату в отдаленном будущем.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
    ProvideOrderDigitalCodesRequest:
      description: Запрос на передачу ключей цифровых товаров.
      type: object
      required:
        - items
      properties:
        items:
          description: |
            Список проданных товаров.

            Если в заказе есть несколько **одинаковых** товаров (например, несколько ключей к одной и той же подписке), передайте ключи в виде массива к этому товару. Параметр `id` у этих элементов должен быть один и тот же.
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/OrderDigitalItemDTO'
    OrderBoxLayoutPartialCountDTO:
      description: Информация о части товара в коробке.
      type: object
      required:
        - current
        - total
      properties:
        current:
          description: Номер части, начиная с 1.
          type: integer
          format: int32
          minimum: 1
        total:
          description: На сколько всего частей разделен товар.
          type: integer
          format: int32
          minimum: 2
    OrderBoxLayoutItemDTO:
      description: Информация о товаре в коробке.
      type: object
      required:
        - id
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          type: integer
          format: int64
        fullCount:
          description: |
            Количество единиц товара в коробке.

            Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.
          type: integer
          format: int32
          minimum: 1
        partialCount:
          description: |
            Часть товара в коробке.

            Используйте это поле, если в коробке поедет часть большого товара. Не используйте это поле одновременно с `fullCount`.
          $ref: '#/components/schemas/OrderBoxLayoutPartialCountDTO'
        instances:
          description: Переданные вами коды маркировки.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
    OrderBoxLayoutDTO:
      description: Информация о коробке.
      type: object
      required:
        - items
      properties:
        items:
          description: |
            Список товаров в коробке.

            Если в коробке едет часть большого товара, в списке может быть только один пункт.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderBoxLayoutItemDTO'
    SetOrderBoxLayoutRequest:
      type: object
      required:
        - boxes
      properties:
        boxes:
          description: Список коробок.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderBoxLayoutDTO'
        allowRemove:
          description: Передайте `true`, если вы собираетесь удалить часть товаров из заказа.
          type: boolean
          default: false
    EnrichedOrderBoxLayoutDTO:
      description: Информация о коробке.
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderBoxLayoutDTO'
        - properties:
            boxId:
              description: Идентификатор коробки.
              type: integer
              format: int64
    OrderBoxesLayoutDTO:
      description: Распределение товаров по коробкам.
      type: object
      required:
        - boxes
      properties:
        boxes:
          description: Список коробок.
          type: array
          items:
            $ref: '#/components/schemas/EnrichedOrderBoxLayoutDTO'
    SetOrderBoxLayoutResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderBoxesLayoutDTO'
    UpdateExternalOrderIdRequest:
      description: Список заказов.
      type: object
      required:
        - externalOrderId
      properties:
        externalOrderId:
          description: Внешний идентификатор заказа.
          type: string
          minLength: 1
    UinStatusType:
      description: |
        Статус проверки УИНа:

        * `FAILED` — не прошел проверку.

        * `IN_PROGRESS` — в процессе проверки.

        * `NOT_ON_VALIDATION` — УИН не отправлен на проверку или переданы не все УИНы в заказе.

        * `OK` — проверка успешно пройдена.
      type: string
      enum:
        - OK
        - IN_PROGRESS
        - FAILED
        - NOT_ON_VALIDATION
    UinDTO:
      description: Статус проверки УИНа.
      type: object
      required:
        - value
        - status
      properties:
        value:
          type: string
          description: УИН товара.
        status:
          $ref: '#/components/schemas/UinStatusType'
    OrderItemValidationStatusDTO:
      description: Идентификатор товара и статус проверки его УИНа.
      type: object
      required:
        - id
        - uin
      properties:
        id:
          description: Идентификатор товара в заказе.
          type: integer
          format: int64
        uin:
          description: Статусы проверки УИНов.
          type: array
          items:
            $ref: '#/components/schemas/UinDTO'
    GetOrderIdentifiersStatusDTO:
      description: Список идентификаторов товаров и статусы проверки УИНов.
      type: object
      required:
        - items
      properties:
        items:
          description: Список идентификаторов товаров и статусы проверки УИНов.
          type: array
          items:
            $ref: '#/components/schemas/OrderItemValidationStatusDTO'
    GetOrderIdentifiersStatusResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetOrderIdentifiersStatusDTO'
    OrderDeliveryDateDTO:
      description: Информация о новой дате доставки заказа.
      type: object
      required:
        - toDate
      properties:
        toDate:
          description: |
            Новая дата доставки заказа.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
    OrderDeliveryDateReasonType:
      description: |
        Причина переноса доставки заказа. Возможные причины изменения даты:
          - ```USER_MOVED_DELIVERY_DATES``` — покупатель попросил изменить дату или вы договорились привезти ему заказ раньше изначальной даты. Кроме этого указывается для подтверждения даты доставки товаров на заказ с долгой (31-60 дней) доставкой.
          - ```PARTNER_MOVED_DELIVERY_DATES``` — магазин не может доставить заказ в срок.
      type: string
      enum:
        - USER_MOVED_DELIVERY_DATES
        - PARTNER_MOVED_DELIVERY_DATES
    SetOrderDeliveryDateRequest:
      type: object
      required:
        - dates
        - reason
      properties:
        dates:
          description: Информация о новой дате доставки заказа.
          $ref: '#/components/schemas/OrderDeliveryDateDTO'
        reason:
          description: Причина переноса доставки заказа.
          $ref: '#/components/schemas/OrderDeliveryDateReasonType'
    SetOrderDeliveryTrackCodeRequest:
      type: object
      required:
        - trackCode
        - deliveryServiceId
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
          type: integer
          format: int64
    OrderBuyerInfoDTO:
      description: Информация о покупателе и его номере телефона.
      type: object
      allOf:
        - $ref: '#/components/schemas/OrderBuyerBasicInfoDTO'
        - properties:
            phone:
              description: |
                Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).

                Формат номера: `+<код_страны><код_региона><номер_телефона>`.
              type: string
            trusted:
              description: |
                Проверенный покупатель.

                Если параметр `trusted` вернулся со значением `true`, Маркет уже проверил покупателя — не звоните ему. Обработайте заказ как обычно и передайте его курьеру или отвезите в ПВЗ.

                При необходимости свяжитесь с покупателем в чате. [Как это сделать](../../step-by-step/chats.md)

                Подробнее о звонках покупателю читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/dbs/call).
              type: boolean
    GetOrderBuyerInfoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderBuyerInfoDTO'
    VerifyOrderEacRequest:
      type: object
      required:
        - code
      properties:
        code:
          description: Код для подтверждения ЭАПП.
          type: string
    EacVerificationStatusType:
      description: |
        Статус проверки кода подтверждения:

        * `ACCEPTED` — код верный.
        * `REJECTED` — код неверный.
        * `NEED_UPDATE` — Маркет отправит новый код. Значение возвращается, если превышено количество попыток отправки кода.
      type: string
      enum:
        - ACCEPTED
        - REJECTED
        - NEED_UPDATE
    EacVerificationResultDTO:
      description: Результат выполнения запроса.
      type: object
      properties:
        verificationResult:
          description: Статус проверки кода подтверждения.
          $ref: '#/components/schemas/EacVerificationStatusType'
        attemptsLeft:
          description: |
            Количество оставшихся попыток проверки кода.

            Возвращается, если магазин отправил некорректный код.

            Когда все попытки будут исчерпаны, код обновится.
          type: integer
          format: int32
    VerifyOrderEacResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/EacVerificationResultDTO'
    UpdateOrderStorageLimitRequest:
      description: Запрос на обновление срока хранения заказа в ПВЗ.
      type: object
      required:
        - newDate
      properties:
        newDate:
          description: |
            Новая дата, до которой заказ будет храниться в пункте выдачи.

            Срок хранения можно увеличить не больше, чем на 30 дней.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
    PageFormatType:
      description: "Размещение ярлыков на странице PDF-файла:\n\n* `A9_HORIZONTALLY` — ярлык размером 58\_×\_40 мм без полей, близок к формату :no-translate[A9].\n\n  {% cut \"Пример ярлыка для продавцов Маркета\" %}\n\n  ![Изображение горизонтального ярлыка формата :no-translate[A9] для продавцов Маркета](../../_images/labels/label-A9-horizontally.png)\n\n  {% endcut %}\n\n  {% cut \"Пример ярлыка для продавцов Market\_Yandex\_Go\" %}\n\n  ![Изображение горизонтального ярлыка формата A9 для продавцов Market\_Yandex\_Go](../../_images/labels/label-A9-horizontally-uz.png)\n\n  {% endcut %}\n\n* `A9` — ярлык размером 40\_×\_58 мм без полей, близок к формату A9.\n\n  {% cut \"Пример ярлыка для продавцов Маркета\" %}\n\n  ![Изображение вертикального ярлыка формата :no-translate[A9] для продавцов Маркета](../../_images/labels/label-A9.png)\n\n  {% endcut %}\n\n  {% cut \"Пример ярлыка для продавцов Market\_Yandex\_Go\" %}\n\n  ![Изображение вертикального ярлыка формата :no-translate[A9] для продавцов Market\_Yandex\_Go](../../_images/labels/label-A9-uz.png)\n\n  {% endcut %}\n\n* `A7` — ярлык размером 75\_×\_120 мм (80,4\_×\_125,6 мм с учетом полей), близок к формату :no-translate[A7].\n\n  {% cut \"Пример ярлыка для продавцов Маркета\" %}\n\n  ![Изображение ярлыка формата A7 для продавцов Маркета](../../_images/labels/label-A7.jpg)\n\n  {% endcut %}\n\n  {% cut \"Пример ярлыка для продавцов Market\_Yandex\_Go\" %}\n\n  ![Изображение ярлыка формата :no-translate[A7] для продавцов Market\_Yandex\_Go](../../_images/labels/label-A7-uz.png)\n\n  {% endcut %}\n\n* `A4` — на листе A4 располагается ярлык того формата, который выбран в кабинете продавца на Маркете — перейдите на страницу **Заказы** → **Заказы и отгрузки** → на вкладке нужной модели работы нажмите кнопку **Формат ярлыков**.\n"
      type: string
      enum:
        - A9_HORIZONTALLY
        - A9
        - A7
        - A4
    ParcelBoxLabelDTO:
      description: Информация о ярлыке для коробки.
      type: object
      required:
        - url
        - supplierName
        - deliveryServiceName
        - orderId
        - orderNum
        - recipientName
        - boxId
        - fulfilmentId
        - place
        - weight
        - deliveryServiceId
      properties:
        url:
          description: |
            Соответствует :no-translate[URL], по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).
          type: string
        supplierName:
          description: Юридическое название магазина.
          type: string
        deliveryServiceName:
          description: Юридическое название службы доставки.
          type: string
        orderId:
          description: Идентификатор заказа в системе Маркета.
          type: integer
          format: int64
        orderNum:
          description: |
            Идентификатор заказа в информационной системе магазина.

            Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.
          type: string
        recipientName:
          description: Фамилия и инициалы получателя заказа.
          type: string
        boxId:
          description: Идентификатор коробки.
          type: integer
          format: int64
        fulfilmentId:
          description: |
            Идентификатор коробки в информационной системе магазина.

            Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.
          type: string
        place:
          description: |
            Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.
          type: string
        weight:
          description: |
            Общая масса всех товаров в заказе.

            Возвращается в формате: :no-translate[`weight кг`].
          type: string
          deprecated: true
        deliveryServiceId:
          description: Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
          type: string
        deliveryAddress:
          description: Адрес получателя.
          type: string
        shipmentDate:
          description: Дата отгрузки в формате `dd.MM.yyyy`.
          type: string
    OrderLabelDTO:
      description: Данные для печати ярлыка.
      type: object
      required:
        - orderId
        - placesNumber
        - url
        - parcelBoxLabels
      properties:
        orderId:
          description: Идентификатор заказа.
          type: integer
          format: int64
        placesNumber:
          description: Количество коробок в заказе.
          type: integer
          format: int32
        url:
          description: |
            URL файла с ярлыками‑наклейками на все коробки в заказе.

            Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).
          deprecated: true
          type: string
        parcelBoxLabels:
          description: Информация на ярлыке.
          type: array
          items:
            $ref: '#/components/schemas/ParcelBoxLabelDTO'
    GetOrderLabelsDataResponse:
      description: Ответ с информацией для печати ярлыков.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderLabelDTO'
    OrderBusinessBuyerDTO:
      description: |
        Информация о покупателе.
      type: object
      properties:
        inn:
          description: ИНН.
          type: string
        kpp:
          description: КПП.
          type: string
        organizationName:
          description: Наименование юридического лица.
          type: string
        organizationJurAddress:
          description: Юридический адрес.
          type: string
    GetBusinessBuyerInfoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderBusinessBuyerDTO'
    OrderDocumentStatusType:
      description: |
        Статус документа:

        * `READY` — готов.
        * `NOT_READY` — не готов.
      type: string
      enum:
        - READY
        - NOT_READY
    DocumentDTO:
      description: Информация о документе.
      type: object
      properties:
        status:
          description: Статус документа.
          $ref: '#/components/schemas/OrderDocumentStatusType'
        number:
          description: Номер документа.
          type: string
        date:
          description: Дата создания документа.
          type: string
          format: date
    OrderBusinessDocumentsDTO:
      description: |
        Информация о документах.
      type: object
      properties:
        upd:
          description: Информация об УПД-1 или УПД-2.
          $ref: '#/components/schemas/DocumentDTO'
        ukd:
          description: Информация об УКД-1 или УКД-2.
          $ref: '#/components/schemas/DocumentDTO'
        torgTwelve:
          description: Информация о товарной накладной.
          $ref: '#/components/schemas/DocumentDTO'
        sf:
          description: Информация о счете-фактуре.
          $ref: '#/components/schemas/DocumentDTO'
        ksf:
          description: Информация о корректировочном счете-фактуре.
          $ref: '#/components/schemas/DocumentDTO'
    GetBusinessDocumentsInfoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrderBusinessDocumentsDTO'
    RefundStatusType:
      description: |
        Статус возврата денег:

        * `STARTED_BY_USER` — создан клиентом из личного кабинета.

        * `REFUND_IN_PROGRESS` — ждет решение о возврате денег.

        * `REFUNDED` — деньги возвращены.

        * `FAILED` — невозможно провести возврат покупателю.

        * `WAITING_FOR_DECISION` — ожидает решения (:no-translate[DBS]).

        * `DECISION_MADE` — по возврату принято решение (:no-translate[DBS]).

        * `REFUNDED_WITH_BONUSES` — возврат осуществлен баллами Плюса или промокодом.

        * `REFUNDED_BY_SHOP` — магазин сделал самостоятельно возврат денег.

        * `COMPLETE_WITHOUT_REFUND` — возврат денег не требуется.

        * `CANCELLED` — возврат отменен.

        * `REJECTED` — возврат отклонен модерацией или в ПВЗ.

        * `PREMODERATION_DISPUTE` — по возврату открыт спор (:no-translate[FBS] и Экспресс).

        * `PREMODERATION_DECISION_WAITING` — ожидает решения (:no-translate[FBS] и Экспресс).

        * `PREMODERATION_DECISION_MADE` — по возврату принято решение (:no-translate[FBS] и Экспресс).

        * `PREMODERATION_SELECT_DELIVERY` — пользователь выбирает способ доставки (:no-translate[FBS] и Экспресс).

        * `UNKNOWN` — неизвестный статус.
      type: string
      enum:
        - STARTED_BY_USER
        - REFUND_IN_PROGRESS
        - REFUNDED
        - FAILED
        - WAITING_FOR_DECISION
        - DECISION_MADE
        - REFUNDED_WITH_BONUSES
        - REFUNDED_BY_SHOP
        - CANCELLED
        - REJECTED
        - COMPLETE_WITHOUT_REFUND
        - PREMODERATION_DISPUTE
        - PREMODERATION_DECISION_WAITING
        - PREMODERATION_DECISION_MADE
        - PREMODERATION_SELECT_DELIVERY
        - UNKNOWN
    ReturnType:
      description: |
        Тип заказа для фильтрации:

        * `UNREDEEMED` — невыкуп.

        * `RETURN` — возврат.

        Если не указывать, в ответе будут и невыкупы, и возвраты.
      type: string
      enum:
        - UNREDEEMED
        - RETURN
    PickupAddressDTO:
      type: object
      description: Адрес доставки.
      properties:
        country:
          type: string
          description: Страна.
          example: Россия
        city:
          type: string
          description: Город.
          example: Москва
        street:
          type: string
          description: Улица.
          example: Стрелецкая улица
        house:
          type: string
          description: Номер дома.
          example: 9к2
        postcode:
          type: string
          description: Почтовый индекс.
          example: 123518
    LogisticPointType:
      description: |
        Тип логистической точки:

          * `WAREHOUSE` — склад.
          * `PICKUP_POINT` — обычная точка выдачи заказов (ПВЗ).
          * `PICKUP_TERMINAL` — постамат.
          * `PICKUP_POST_OFFICE` — отделение почтовой связи (ОПС).
          * `PICKUP_MIXED` — торговый зал и пункт выдачи заказов.
          * `PICKUP_RETAIL` — торговый зал.
      type: string
      enum:
        - WAREHOUSE
        - PICKUP_POINT
        - PICKUP_TERMINAL
        - PICKUP_POST_OFFICE
        - PICKUP_MIXED
        - PICKUP_RETAIL
    LogisticPickupPointDTO:
      type: object
      description: Описание пункта вывоза для возврата.
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор пункта вывоза.
          deprecated: true
        name:
          type: string
          description: Название пункта вывоза.
        address:
          description: Адрес пункта вывоза.
          $ref: '#/components/schemas/PickupAddressDTO'
        instruction:
          description: Дополнительные инструкции к вывозу.
          type: string
        type:
          description: Тип логистической точки.
          $ref: '#/components/schemas/LogisticPointType'
        logisticPartnerId:
          type: integer
          format: int64
          description: Идентификатор логистического партнера, к которому относится логистическая точка.
    RecipientType:
      description: |
        Способ возврата товара покупателем:

        * `SHOP` — в точку возврата магазина.

        * `DELIVERY_SERVICE` — отправить курьером.

        * `POST` — почта.
      type: string
      enum:
        - SHOP
        - DELIVERY_SERVICE
        - POST
    ReturnShipmentStatusType:
      description: |
        Статус передачи возврата:

        * `CREATED` — возврат создан.

        * `RECEIVED` — принят у покупателя.

        * `IN_TRANSIT` — возврат в пути.

        * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.

        * `PICKED` — возврат выдан магазину.

        * `LOST` — возврат утерян при транспортировке.

        * `EXPIRED` — покупатель не принес товар на возврат вовремя.

        * `CANCELLED` — возврат отменен.

        * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.

        * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.

        * `NOT_IN_DEMAND` — возврат не забрали с почты.

        * `UTILIZED` — возврат утилизирован.

        * `READY_FOR_EXPROPRIATION` — товары в возврате направлены на перепродажу.

        * `RECEIVED_FOR_EXPROPRIATION` — товары в возврате приняты для перепродажи.

        * `UNKNOWN` — неизвестный статус.
      type: string
      enum:
        - CREATED
        - RECEIVED
        - IN_TRANSIT
        - READY_FOR_PICKUP
        - PICKED
        - LOST
        - EXPIRED
        - CANCELLED
        - FULFILMENT_RECEIVED
        - PREPARED_FOR_UTILIZATION
        - NOT_IN_DEMAND
        - UTILIZED
        - READY_FOR_EXPROPRIATION
        - RECEIVED_FOR_EXPROPRIATION
        - UNKNOWN
    CurrencyValueDTO:
      description: Валюта и ее значение.
      type: object
      required:
        - value
        - currencyId
      properties:
        value:
          description: Значение.
          type: number
        currencyId:
          description: Валюта.
          $ref: '#/components/schemas/CurrencyType'
    MarketSku:
      description: Идентификатор карточки товара на Маркете.
      type: integer
      format: int64
      minimum: 1
    ReturnDecisionReasonType:
      description: |
        Причины возврата:

        * `BAD_QUALITY` — бракованный товар (есть недостатки).

        * `DOES_NOT_FIT` — товар не подошел.

        * `WRONG_ITEM` — привезли не тот товар.

        * `DAMAGE_DELIVERY` — товар поврежден при доставке.

        * `LOYALTY_FAIL` — невозможно установить виновного в браке/пересорте.

        * `CONTENT_FAIL` — ошибочное описание товара по вине Маркета.

        * `DELIVERY_FAIL` — товар не привезли.

        * `UNKNOWN` — причина не известна.
      type: string
      enum:
        - BAD_QUALITY
        - DOES_NOT_FIT
        - WRONG_ITEM
        - DAMAGE_DELIVERY
        - LOYALTY_FAIL
        - CONTENT_FAIL
        - DELIVERY_FAIL
        - UNKNOWN
    ReturnDecisionSubreasonType:
      description: |
        Детали причин возврата:
          * `DOES_NOT_FIT`:
            * `USER_DID_NOT_LIKE` — товар не понравился.
            * `USER_CHANGED_MIND` — передумал покупать.
            * `DELIVERED_TOO_LONG` — передумал покупать из-за длительного срока доставки.

          * `BAD_QUALITY`:
            * `BAD_PACKAGE` — заводская упаковка повреждена.
            * `DAMAGED` — царапины, сколы.
            * `NOT_WORKING` — не включается, не работает.
            * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).
            * `WRAPPING_DAMAGED` — транспортная упаковка повреждена.
            * `ITEM_WAS_USED` — следы использования на товаре.
            * `BROKEN` — товар разбит.
            * `BAD_FLOWERS` — некачественные цветы.

          * `WRONG_ITEM`:
            * `WRONG_ITEM` — не тот товар.
            * `WRONG_COLOR` — цвет не соответствует заявленному.
            * `DID_NOT_MATCH_DESCRIPTION` — описание или характеристики не соответствуют заявленным.
            * `WRONG_ORDER` — доставили чужой заказ.
            * `WRONG_AMOUNT_DELIVERED` — неверное количество товара.
            * `PARCEL_MISSING` — часть заказа отсутствует.
            * `INCOMPLETE` — заказ не привезли полностью.

          * `UNKNOWN` — детали причины не указаны.
      type: string
      enum:
        - USER_DID_NOT_LIKE
        - USER_CHANGED_MIND
        - DELIVERED_TOO_LONG
        - BAD_PACKAGE
        - DAMAGED
        - NOT_WORKING
        - INCOMPLETENESS
        - WRONG_ITEM
        - WRONG_COLOR
        - DID_NOT_MATCH_DESCRIPTION
        - WRONG_ORDER
        - WRONG_AMOUNT_DELIVERED
        - WRAPPING_DAMAGED
        - ITEM_WAS_USED
        - BROKEN
        - BAD_FLOWERS
        - PARCEL_MISSING
        - INCOMPLETE
        - UNKNOWN
    ReturnDecisionType:
      description: |
        Решение по возврату:

        * `FAST_REFUND_MONEY` — вернуть покупателю деньги без возврата товара.

        * `REFUND_MONEY` — вернуть покупателю деньги за товар.

        * `REFUND_MONEY_INCLUDING_SHIPMENT` — вернуть покупателю деньги за товар и обратную пересылку.

        * `REPAIR` — отремонтировать товар.

        * `REPLACE` — заменить товар.

        * `SEND_TO_EXAMINATION` — взять товар на экспертизу.

        * `DECLINE_REFUND` — отказать в возврате.

        * `OTHER_DECISION` — другое решение.

        * `UNKNOWN` — не указано.
      type: string
      enum:
        - FAST_REFUND_MONEY
        - REFUND_MONEY
        - REFUND_MONEY_INCLUDING_SHIPMENT
        - REPAIR
        - REPLACE
        - SEND_TO_EXAMINATION
        - DECLINE_REFUND
        - OTHER_DECISION
        - UNKNOWN
    ReturnDecisionDTO:
      description: Решения по возвратам.
      type: object
      properties:
        returnItemId:
          description: Идентификатор товара в возврате.
          type: integer
          format: int64
        count:
          description: Количество единиц товара.
          type: integer
          format: int32
        comment:
          description: Комментарий.
          type: string
        reasonType:
          $ref: '#/components/schemas/ReturnDecisionReasonType'
        subreasonType:
          $ref: '#/components/schemas/ReturnDecisionSubreasonType'
        decisionType:
          $ref: '#/components/schemas/ReturnDecisionType'
        refundAmount:
          description: "{% note warning \"Вместо него используйте `amount`.\" %}\n\n\_\n\n{% endnote %}\n\nСумма возврата в копейках.\n"
          type: integer
          format: int64
          deprecated: true
        amount:
          description: Сумма возврата.
          $ref: '#/components/schemas/CurrencyValueDTO'
        partnerCompensation:
          description: "{% note warning \"Вместо него используйте `partnerCompensationAmount`.\" %}\n\n\_\n\n{% endnote %}\n\nКомпенсация за обратную доставку в копейках.\n"
          type: integer
          format: int64
          deprecated: true
        partnerCompensationAmount:
          description: Компенсация за обратную доставку.
          $ref: '#/components/schemas/CurrencyValueDTO'
        images:
          description: Список хеш-кодов фотографий товара от покупателя.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
    ReturnInstanceStockType:
      description: |
        Тип остатка на складе:

        * `FIT` — годный.

        * `DEFECT` — бракованный.

        * `ANOMALY` — аномалия.

        * `SURPLUS` — лишний.

        * `EXPIRED` — просроченный.

        * `MISGRADING` — пересортица.

        * `UNDEFINED` — с неизвестным статусом.

        * `INCORRECT_IMEI` — товар с некорректным [:no-translate[IMEI]](https://ru.wikipedia.org/wiki/IMEI).

        * `INCORRECT_SERIAL_NUMBER` — товар с некорректным серийным номером.

        * `INCORRECT_CIS` — товар с некорректным кодом идентификации единицы товара в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).

        * `PART_MISSING` — недостача.

        * `NON_COMPLIENT` — товар с множественными несоответствиями.

        * `NOT_ACCEPTABLE` — товар, который Маркет не принимает.

        * `SERVICE` — сервисный сток.

        * `MARKDOWN` — уценка.

        * `DEMO` — демо.

        * `REPAIR` — ремонт.

        * `FIRMWARE` — прошивка.

        * `UNKNOWN` — неизвестный тип товара.
      type: string
      enum:
        - FIT
        - DEFECT
        - ANOMALY
        - SURPLUS
        - EXPIRED
        - MISGRADING
        - UNDEFINED
        - INCORRECT_IMEI
        - INCORRECT_SERIAL_NUMBER
        - INCORRECT_CIS
        - PART_MISSING
        - NON_COMPLIENT
        - NOT_ACCEPTABLE
        - SERVICE
        - MARKDOWN
        - DEMO
        - REPAIR
        - FIRMWARE
        - UNKNOWN
    ReturnInstanceStatusType:
      description: |
        Логистический статус конкретного товара:

        * `CREATED` — возврат создан.

        * `RECEIVED` — возврат принят у отправителя.

        * `IN_TRANSIT` — возврат в пути.

        * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.

        * `PICKED` — возврат выдан магазину.

        * `RECEIVED_ON_FULFILLMENT` — возврат принят на складе Маркета.

        * `CANCELLED` — возврат отменен.

        * `LOST` — возврат утерян.

        * `UTILIZED` — возврат утилизирован.

        * `PREPARED_FOR_UTILIZATION` — возврат готов к утилизации.

        * `EXPROPRIATED` — товары в возврате направлены на перепродажу.

        * `NOT_IN_DEMAND` — возврат не забрали с почты.
      type: string
      enum:
        - CREATED
        - RECEIVED
        - IN_TRANSIT
        - READY_FOR_PICKUP
        - PICKED
        - RECEIVED_ON_FULFILLMENT
        - CANCELLED
        - LOST
        - UTILIZED
        - PREPARED_FOR_UTILIZATION
        - EXPROPRIATED
        - NOT_IN_DEMAND
    ReturnInstanceDTO:
      description: Логистическая информация по возврату.
      type: object
      properties:
        stockType:
          description: Тип остатка на складе.
          $ref: '#/components/schemas/ReturnInstanceStockType'
        status:
          description: Логистический статус конкретного товара.
          $ref: '#/components/schemas/ReturnInstanceStatusType'
        cis:
          description: Код идентификации единицы товара в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).
          type: string
        imei:
          description: Международный идентификатор мобильного оборудования.
          type: string
    TrackDTO:
      description: Информация о трек-номерах.
      type: object
      properties:
        trackCode:
          description: Трек-код почтового отправления.
          type: string
    ReturnItemDTO:
      description: Список товаров в невыкупе или возврате.
      type: object
      required:
        - shopSku
        - count
      properties:
        marketSku:
          description: Идентификатор карточки товара на Маркете.
          $ref: '#/components/schemas/MarketSku'
        shopSku:
          $ref: '#/components/schemas/ShopSku'
        count:
          description: Количество единиц товара.
          type: integer
          format: int64
        decisions:
          description: Список решений по возврату.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ReturnDecisionDTO'
        instances:
          description: Список логистических позиций возврата.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ReturnInstanceDTO'
        tracks:
          description: Список трек-кодов для почтовых отправлений.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TrackDTO'
    ReturnDTO:
      description: "Невыкуп или возврат в заказе.\n\nПараметров `logisticPickupPoint`, `shipmentRecipientType` и\_`shipmentStatus` может не быть в случае возврата:\n  * С опцией **Быстрый возврат денег за дешевый брак**, когда товар остается у покупателя (`fastReturn=true`).\n  * По заказу от бизнеса, если:\n    * статус возврата `STARTED_BY_USER` или `WAITING_FOR_DECISION`;\n    * возврат отменен до передачи товара.\n\nСтатус возврата денег `refundStatus` актуален только для `returnType=RETURN`.\n"
      type: object
      required:
        - id
        - orderId
        - items
        - returnType
      properties:
        id:
          description: Идентификатор невыкупа или возврата.
          format: int64
          type: integer
        orderId:
          description: Номер заказа.
          format: int64
          type: integer
        creationDate:
          description: |
            Дата создания невыкупа или возврата клиентом.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          type: string
          format: date-time
          example: '2020-02-02T14:30:30+03:00'
        updateDate:
          description: |
            Дата обновления невыкупа или возврата.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          type: string
          format: date-time
          example: '2020-02-02T14:30:30+03:00'
        refundStatus:
          $ref: '#/components/schemas/RefundStatusType'
        logisticPickupPoint:
          description: Пункт вывоза.
          $ref: '#/components/schemas/LogisticPickupPointDTO'
        shipmentRecipientType:
          description: Способ возврата товара покупателем.
          $ref: '#/components/schemas/RecipientType'
        shipmentStatus:
          description: Статус передачи возврата.
          $ref: '#/components/schemas/ReturnShipmentStatusType'
        refundAmount:
          description: "{% note warning \"Вместо него используйте `amount`.\" %}\n\n\_\n\n{% endnote %}\n\nСумма возврата в копейках.\n"
          type: integer
          format: int64
          deprecated: true
        amount:
          description: Сумма возврата.
          $ref: '#/components/schemas/CurrencyValueDTO'
        items:
          description: Список товаров в невыкупе или возврате.
          type: array
          items:
            $ref: '#/components/schemas/ReturnItemDTO'
        returnType:
          description: Тип возврата.
          $ref: '#/components/schemas/ReturnType'
        fastReturn:
          description: |
            Используется ли опция **Быстрый возврат денег за дешевый брак**.

            Актуально только для `returnType=RETURN`.
          type: boolean
    PagedReturnsDTO:
      description: Невыкупы или возвраты.
      type: object
      required:
        - returns
      properties:
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        returns:
          description: Список невыкупов или возвратов.
          type: array
          items:
            $ref: '#/components/schemas/ReturnDTO'
    GetReturnsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/PagedReturnsDTO'
    GetReturnResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ReturnDTO'
    ReturnItemId:
      description: Идентификатор товара в возврате.
      type: integer
      format: int64
    ReturnRequestDecisionType:
      description: |
        Решение по возврату:

        * `FAST_REFUND_MONEY` — вернуть покупателю деньги без возврата товара.

        * `REFUND_MONEY` — вернуть покупателю деньги за товар.

        * `REFUND_MONEY_INCLUDING_SHIPMENT` — вернуть покупателю деньги за товар и обратную пересылку.

        * `REPAIR` — отремонтировать товар.

        * `REPLACE` — заменить товар.

        * `SEND_TO_EXAMINATION` — взять товар на экспертизу.

        * `DECLINE_REFUND` — отказать в возврате.

        * `OTHER_DECISION` — другое решение.
      type: string
      enum:
        - FAST_REFUND_MONEY
        - REFUND_MONEY
        - REFUND_MONEY_INCLUDING_SHIPMENT
        - REPAIR
        - REPLACE
        - SEND_TO_EXAMINATION
        - DECLINE_REFUND
        - OTHER_DECISION
    ReturnItemDecisionComment:
      description: |
        Комментарий к решению. Укажите:

        * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки.

        * для `REPAIR` — когда вы устраните недостатки товара.

        * для `DECLINE_REFUND` — причину отказа.

        * для `OTHER_DECISION` — какое решение вы предлагаете.
      type: string
    SetReturnDecisionRequest:
      description: Решения по товару в возврате.
      type: object
      required:
        - returnItemId
        - decisionType
      properties:
        returnItemId:
          $ref: '#/components/schemas/ReturnItemId'
        decisionType:
          description: Решение по товару в возврате.
          $ref: '#/components/schemas/ReturnRequestDecisionType'
        comment:
          $ref: '#/components/schemas/ReturnItemDecisionComment'
      example:
        returnItemId: 1
        decisionType: REFUND_MONEY_INCLUDING_SHIPMENT
        comment: Вернуть 149 рублей за пересылку.
    ReturnRequestDecisionReasonType:
      description: |
        Причина отказа:

        * `ISSUE_WITH_THE_PRODUCT_WAS_NOT_CONFIRMED` — проблема с товаром не подтвердилась.
        * `MECHANICAL_DAMAGE` — есть механические повреждения товара.
        * `WARRANTY_PERIOD_HAS_EXPIRED` — истек гарантийный срок.
        * `CONFIGURATION_OR_PACKAGING_COMPROMISED` — нарушена комплектация или упаковка.
        * `PRODUCT_APPEARANCE_COMPROMISED` — нарушен товарный вид.
        * `WARRANTY_TERMS_VIOLATED` — нарушены условия гарантии.
        * `DEVICE_ACTIVATED` — устройство активировано.
      type: string
      enum:
        - ISSUE_WITH_THE_PRODUCT_WAS_NOT_CONFIRMED
        - MECHANICAL_DAMAGE
        - WARRANTY_PERIOD_HAS_EXPIRED
        - CONFIGURATION_OR_PACKAGING_COMPROMISED
        - PRODUCT_APPEARANCE_COMPROMISED
        - WARRANTY_TERMS_VIOLATED
        - DEVICE_ACTIVATED
    ReturnItemDecisionDTO:
      description: Решения по товару в возврате.
      type: object
      required:
        - returnItemId
        - decisionType
      properties:
        returnItemId:
          $ref: '#/components/schemas/ReturnItemId'
        decisionType:
          description: Решение по товару в возврате.
          $ref: '#/components/schemas/ReturnRequestDecisionType'
        decisionReasonType:
          description: Причина отказа.
          $ref: '#/components/schemas/ReturnRequestDecisionReasonType'
        comment:
          $ref: '#/components/schemas/ReturnItemDecisionComment'
    SubmitReturnDecisionRequest:
      description: Запрос на подтверждение решения по возврату.
      type: object
      required:
        - returnItemDecisions
      properties:
        returnItemDecisions:
          description: Решения по товарам в возврате.
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/ReturnItemDecisionDTO'
    GetRegionsResponse:
      type: object
      required:
        - regions
      properties:
        regions:
          type: array
          description: Регион доставки.
          items:
            $ref: '#/components/schemas/RegionDTO'
        paging:
          description: Идентификатор следующей страницы.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetRegionWithChildrenResponse:
      type: object
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        regions:
          $ref: '#/components/schemas/RegionDTO'
    CountryDTO:
      description: Страна и ее код в формате :no-translate[ISO 3166-1 alpha-2].
      type: object
      required:
        - region
        - countryCode
      properties:
        region:
          $ref: '#/components/schemas/RegionDTO'
        countryCode:
          $ref: '#/components/schemas/CountryCode'
    GetRegionsCodesResponse:
      type: object
      required:
        - countries
      properties:
        countries:
          type: array
          description: Список стран с их кодами в формате :no-translate[ISO 3166-1 alpha-2].
          items:
            $ref: '#/components/schemas/CountryDTO'
    ShipmentType:
      description: |
        Способ отгрузки заказов:

        * `IMPORT` — вы самостоятельно привозите заказы в выбранный сортировочный центр или пункт приема заказов.
        * `WITHDRAW` — вы отгружаете заказы со своего склада курьерам Яндекс Маркета.
      type: string
      enum:
        - IMPORT
        - WITHDRAW
    PartnerShipmentWarehouseDTO:
      description: Данные о складе отправления.
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор склада отправления.
          format: int64
          type: integer
          minimum: 1
        name:
          description: Наименование склада отправления.
          type: string
        address:
          description: Адрес склада отправления.
          type: string
    DeliveryServiceDTO:
      description: Служба доставки.
      type: object
      properties:
        id:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        name:
          description: Наименование службы доставки.
          type: string
    PalletsCountDTO:
      type: object
      description: Количество палет в отгрузке.
      properties:
        planned:
          description: Количество палет, которое заявил продавец.
          type: integer
          format: int32
          minimum: 0
        fact:
          description: Количество палет, которое приняли в сортировочном центре.
          type: integer
          format: int32
          minimum: 0
    SignatureDTO:
      type: object
      description: Информация о подписи акта приема-передачи.
      required:
        - signed
      properties:
        signed:
          description: Подписан ли акт приема-передачи.
          type: boolean
    BaseShipmentDTO:
      type: object
      description: Информация об отгрузке.
      required:
        - orderIds
        - id
        - planIntervalFrom
        - planIntervalTo
        - draftCount
        - plannedCount
        - factCount
        - signature
      properties:
        id:
          description: Идентификатор отгрузки.
          format: int64
          type: integer
          minimum: 1
        planIntervalFrom:
          description: |
            Начало планового интервала отгрузки.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          format: date-time
          type: string
          example: '2017-11-21T00:00:00+03:00'
        planIntervalTo:
          description: |
            Конец планового интервала отгрузки.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC.
          format: date-time
          type: string
          example: '2017-11-21T00:00:00+03:00'
        shipmentType:
          description: Способ отгрузки заказов.
          $ref: '#/components/schemas/ShipmentType'
        warehouse:
          description: Данные о складе отправления.
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        warehouseTo:
          description: Данные о складе назначения.
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        externalId:
          description: Идентификатор отгрузки в вашей системе. Если вы еще не передавали идентификатор, вернется идентификатор из параметра `id`.
          type: string
        deliveryService:
          description: Служба доставки.
          $ref: '#/components/schemas/DeliveryServiceDTO'
        palletsCount:
          description: Данные о палетах в отгрузке.
          $ref: '#/components/schemas/PalletsCountDTO'
        orderIds:
          description: Идентификаторы заказов в отгрузке.
          type: array
          uniqueItems: true
          items:
            type: integer
            format: int64
            minimum: 1
        draftCount:
          description: Количество заказов, которое Маркет запланировал к отгрузке.
          type: integer
          format: int32
          minimum: 0
        plannedCount:
          description: Количество заказов, которое Маркет подтвердил к отгрузке.
          type: integer
          format: int32
          minimum: 0
        factCount:
          description: Количество заказов, принятых в сортировочном центре или пункте приема.
          type: integer
          format: int32
          minimum: 0
        signature:
          $ref: '#/components/schemas/SignatureDTO'
    ShipmentStatusType:
      description: |
        Статус отгрузки:

        * `OUTBOUND_CREATED` — формируется.
        * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать.
        * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке.
        * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи.
        * `ACCEPTED` — принята в сортировочном центре или пункте приема.
        * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями.
        * `FINISHED` — завершена.
        * `ERROR` — отменена из-за ошибки.
      type: string
      enum:
        - OUTBOUND_CREATED
        - OUTBOUND_READY_FOR_CONFIRMATION
        - OUTBOUND_CONFIRMED
        - OUTBOUND_SIGNED
        - FINISHED
        - ACCEPTED
        - ACCEPTED_WITH_DISCREPANCIES
        - ERROR
    ShipmentStatusChangeDTO:
      description: Статус отгрузки.
      type: object
      properties:
        status:
          description: Статус отгрузки.
          $ref: '#/components/schemas/ShipmentStatusType'
        description:
          description: Описание статуса отгрузки.
          type: string
        updateTime:
          description: |
            Время последнего изменения статуса отгрузки.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          format: date-time
          type: string
          example: '2017-11-21T00:00:00+03:00'
    ShipmentActionType:
      description: |
        Действия с отгрузкой:

        * `CONFIRM` — подтвердить отгрузку.
        * `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки.
        * `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов.
        * `DOWNLOAD_DISCREPANCY_ACT` — скачать акт расхождений.
        * `DOWNLOAD_TRANSPORTATION_WAYBILL` — скачать транспортную накладную.
        * `CHANGE_PALLETS_COUNT` — указать количество палет.
      type: string
      enum:
        - CONFIRM
        - DOWNLOAD_ACT
        - DOWNLOAD_INBOUND_ACT
        - DOWNLOAD_DISCREPANCY_ACT
        - DOWNLOAD_TRANSPORTATION_WAYBILL
        - CHANGE_PALLETS_COUNT
    ExtensionShipmentDTO:
      description: Информация об отгрузке.
      type: object
      required:
        - availableActions
      properties:
        currentStatus:
          description: Статус отгрузки.
          $ref: '#/components/schemas/ShipmentStatusChangeDTO'
        availableActions:
          description: Доступные действия над отгрузкой.
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShipmentActionType'
    ShipmentDTO:
      description: Информация об отгрузке.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseShipmentDTO'
        - $ref: '#/components/schemas/ExtensionShipmentDTO'
    GetShipmentResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ShipmentDTO'
    OrdersShipmentInfoDTO:
      description: Годные/негодные ярлыки по заказам в отгрузке.
      type: object
      required:
        - orderIdsWithLabels
        - orderIdsWithoutLabels
      properties:
        orderIdsWithLabels:
          description: Идентификаторы заказов в отгрузке, для которых можно распечатать ярлыки.
          type: array
          uniqueItems: true
          items:
            type: integer
            format: int64
        orderIdsWithoutLabels:
          description: Идентификаторы заказов в отгрузке, для которых нельзя распечатать ярлыки.
          type: array
          uniqueItems: true
          items:
            type: integer
            format: int64
    GetShipmentOrdersInfoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrdersShipmentInfoDTO'
    ConfirmShipmentRequest:
      description: Запрос для подтверждения отгрузки.
      type: object
      properties:
        externalShipmentId:
          description: Идентификатор отгрузки в системе поставщика.
          type: string
        signatory:
          description: "Логин пользователя в Яндекс\_ID, от имени которого будет подписываться электронный акт приема-передачи.\n\nУказывается без `@yandex.ru`.\n\nГде его найти:\n\n* на странице [Яндекс\_ID](https://id.yandex.ru);\n* в [кабинете продавца на Маркете](https://partner.market.yandex.ru/):\n\n  * слева снизу под иконкой пользователя;\n  * на странице **Настройки** → **Сотрудники и доступы**.\n"
          type: string
    SetShipmentPalletsCountRequest:
      type: object
      description: Запрос на передачу количества упаковок в отгрузке.
      properties:
        placesCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество упаковок в отгрузке.
      required:
        - placesCount
    ShipmentPalletLabelPageFormatType:
      description: |
        Формат страницы:
        * `A4` — формат страницы :no-translate[A4].
        * `A8` — формат страницы :no-translate[A8].
      type: string
      default: A8
      enum:
        - A4
        - A8
    SearchShipmentsRequest:
      required:
        - dateFrom
        - dateTo
      description: Запрос информации об отгрузках.
      type: object
      properties:
        dateFrom:
          description: |
            Начальная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          type: string
          format: date
        dateTo:
          description: |
            Конечная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          type: string
          format: date
        statuses:
          description: Список статусов отгрузок.
          type: array
          uniqueItems: true
          nullable: true
          minItems: 1
          items:
            description: Статус отгрузки
            $ref: '#/components/schemas/ShipmentStatusType'
        orderIds:
          description: Список идентификаторов заказов из отгрузок.
          type: array
          uniqueItems: true
          nullable: true
          minItems: 1
          items:
            description: Идентификатор заказа.
            type: integer
            format: int64
        cancelledOrders:
          description: |
            Возвращать ли отмененные заказы.

            Значение по умолчанию: `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.
          type: boolean
          default: true
    ShipmentInfoDTO:
      description: Список с информацией об отгрузках.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseShipmentDTO'
        - properties:
            status:
              description: Статус отгрузки.
              $ref: '#/components/schemas/ShipmentStatusType'
            statusDescription:
              description: Описание статуса отгрузки.
              type: string
            statusUpdateTime:
              description: |
                Время последнего изменения статуса отгрузки

                Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
              format: date-time
              type: string
              example: '2017-11-21T00:00:00+03:00'
    SearchShipmentsResponseDTO:
      description: Информация об отгрузках.
      type: object
      required:
        - shipments
      properties:
        shipments:
          description: Список с информацией об отгрузках.
          type: array
          items:
            $ref: '#/components/schemas/ShipmentInfoDTO'
        paging:
          description: Страницы с результатами поиска.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    SearchShipmentsResponse:
      description: Ответ на запрос информации об отгрузках.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/SearchShipmentsResponseDTO'
    TransferOrdersFromShipmentRequest:
      description: Запрос переноса заказов из отгрузки.
      type: object
      required:
        - orderIds
      properties:
        orderIds:
          description: Список заказов, которые вы не успеваете подготовить.
          type: array
          minItems: 1
          maxItems: 500
          uniqueItems: true
          items:
            description: Идентификатор заказа.
            type: integer
            format: int64
    DeleteOffersRequest:
      description: |
        Фильтрации удаляемых товаров по offerIds.
      type: object
      required:
        - offerIds
      properties:
        offerIds:
          description: Список :no-translate[SKU] товаров, которые нужно удалить.
          type: array
          minItems: 1
          maxItems: 500
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteOffersDTO:
      description: Список товаров, которые не удалось удалить, потому что они хранятся на складе Маркета.
      type: object
      properties:
        notDeletedOfferIds:
          description: Список SKU товаров, которые не удалось удалить.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteOffersResponse:
      description: Результат удаления товаров.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              description: Результат удаления.
              $ref: '#/components/schemas/DeleteOffersDTO'
    ApiLockedErrorResponse:
      description: Ресурс из запроса заблокирован от применения к нему указанного метода.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiErrorResponse'
    CatalogLanguageType:
      description: |
        Язык:

        * `RU` — русский.
        * `UZ` — узбекский.
      type: string
      enum:
        - RU
        - UZ
    OfferCardStatusType:
      description: |
        Статус карточки товара:

        * `HAS_CARD_CAN_NOT_UPDATE` — Карточка Маркета.
        * `HAS_CARD_CAN_UPDATE` — Можно дополнить.
        * `HAS_CARD_CAN_UPDATE_ERRORS` — Изменения не приняты.
        * `HAS_CARD_CAN_UPDATE_PROCESSING` — Изменения на проверке.
        * `NO_CARD_NEED_CONTENT` — Создайте карточку.
        * `NO_CARD_MARKET_WILL_CREATE` — Создаст Маркет.
        * `NO_CARD_ERRORS` — Не создана из-за ошибки.
        * `NO_CARD_PROCESSING` — Проверяем данные.
        * `NO_CARD_ADD_TO_CAMPAIGN` — Разместите товар в магазине.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/content/statuses.html)
      type: string
      enum:
        - HAS_CARD_CAN_NOT_UPDATE
        - HAS_CARD_CAN_UPDATE
        - HAS_CARD_CAN_UPDATE_ERRORS
        - HAS_CARD_CAN_UPDATE_PROCESSING
        - NO_CARD_NEED_CONTENT
        - NO_CARD_MARKET_WILL_CREATE
        - NO_CARD_ERRORS
        - NO_CARD_PROCESSING
        - NO_CARD_ADD_TO_CAMPAIGN
    GetOfferMappingsRequest:
      type: object
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным :no-translate[SKU], не заполняйте:\n* `page_token`;\n* `limit`;\n* `cardStatuses`;\n* `categoryIds`;\n* `vendorNames`;\n* `tags`;\n* `archived`.\n\n{% endnote %}\n\n\_\n"
          type: array
          nullable: true
          minItems: 1
          maxItems: 200
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
        categoryIds:
          description: Фильтр по категориям на Маркете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
        vendorNames:
          description: Фильтр по брендам.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        tags:
          description: Фильтр по тегам.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращаются товары, не находящиеся в архиве.
          type: boolean
    ScrollingPagerDTO:
      description: Информация о страницах результатов.
      type: object
      allOf:
        - $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        - properties:
            prevPageToken:
              description: Идентификатор предыдущей страницы результатов.
              type: string
    OfferName:
      description: |
        Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

        Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

        Оптимальная длина — 50–60 символов.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
      example: Ударная дрель Makita HP1630, 710 Вт
      type: string
      maxLength: 256
    PartnerMarketCategoryId:
      description: |
        Идентификатор категории на Маркете, к которой вы относите свой товар.

        {% note warning "Всегда указывайте, когда передаете `parameterValues`" %}

        Если при изменении характеристик передать `parameterValues` и не указать `marketCategoryId`, характеристики обновятся, но в ответе придет предупреждение (параметр `warnings`).

        Если не передать их оба, будет использована информация из устаревших параметров `params` и `category`, а `marketCategoryId` будет определен автоматически.

        {% endnote %}

        При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

        Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
      type: integer
      format: int64
    OfferCategory:
      description: "{% note warning \"Вместо него используйте `marketCategoryId`.\" %}\n\n\_\n\n{% endnote %}\n\nКатегория товара в вашем магазине.\n"
      type: string
      deprecated: true
    OfferManualDTO:
      type: object
      required:
        - url
      description: |
        Инструкция по использованию товара.
      properties:
        url:
          description: Ссылка на инструкцию.
          type: string
          maxLength: 512
        title:
          description: |
            Название инструкции, которое будет отображаться на карточке товара.
          type: string
          maxLength: 200
    OfferVendor:
      description: Название бренда или производителя. Должно быть записано так, как его пишет сам бренд.
      example: LEVENHUK
      type: string
    OfferBarcodes:
      description: |+
        Указывайте в виде последовательности цифр. Подойдут коды :no-translate[EAN-13, EAN-8, UPC-A, UPC-E] или :no-translate[Code 128].

        Для книг указывайте :no-translate[ISBN].

        Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом :no-translate[GTIN]. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата :no-translate[Code 128] не являются :no-translate[GTIN].

        [Что такое :no-translate[GTIN]](:no-translate[*gtin])

      type: array
      nullable: true
      minItems: 1
      uniqueItems: true
      items:
        type: string
        example: 46012300000000
    OfferDescription:
      description: |
        Подробное описание товара: например, его преимущества и особенности.

        Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

        Для форматирования текста можно использовать теги HTML:

        * \<h>, \<h1>, \<h2> и так далее — для заголовков;
        * \<br> и \<p> — для переноса строки;
        * \<ol> — для нумерованного списка;
        * \<ul> — для маркированного списка;
        * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
        * \<div> — поддерживается, но не влияет на отображение текста.

        Оптимальная длина — 400–600 символов.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
      type: string
      maxLength: 6000
    OfferWeightDimensionsDTO:
      description: |
        Габариты упаковки и вес товара.

        Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.

        ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png)
      type: object
      required:
        - length
        - width
        - height
        - weight
      properties:
        length:
          description: |
            Длина упаковки в см.
          example: 65.55
          type: number
          minimum: 0
          exclusiveMinimum: true
        width:
          description: |
            Ширина упаковки в см.
          example: 50.7
          type: number
          minimum: 0
          exclusiveMinimum: true
        height:
          description: |
            Высота упаковки в см.
          example: 20
          type: number
          minimum: 0
          exclusiveMinimum: true
        weight:
          description: |
            Вес товара в кг с учетом упаковки (брутто).
          example: 1.001
          type: number
          minimum: 0
          exclusiveMinimum: true
    OfferVendorCode:
      description: Артикул товара от производителя.
      example: VNDR-0005A
      type: string
    TimeUnitType:
      description: |
        Единица измерения времени:

        * `HOUR` — час.
        * `DAY` — сутки.
        * `WEEK` — неделя.
        * `MONTH` — месяц.
        * `YEAR` — год.
      type: string
      enum:
        - HOUR
        - DAY
        - WEEK
        - MONTH
        - YEAR
    TimePeriodDTO:
      description: Временной отрезок с комментарием. Требования к содержанию комментария зависят от контекста использования параметра и указаны в описании поля, которое его содержит.
      type: object
      required:
        - timePeriod
        - timeUnit
      properties:
        timePeriod:
          description: Продолжительность в указанных единицах.
          type: integer
        timeUnit:
          description: Единица измерения.
          $ref: '#/components/schemas/TimeUnitType'
        comment:
          description: Комментарий.
          type: string
          maxLength: 500
    CommodityCodeType:
      description: |
        Тип товарного кода:

        * `CUSTOMS_COMMODITY_CODE` — код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.
        * `IKPU_CODE` — идентификационный код продукции и услуг (ИКПУ) в Узбекистане – 17 цифр без пробелов.

        Не передавайте несколько кодов одного типа.
      type: string
      enum:
        - CUSTOMS_COMMODITY_CODE
        - IKPU_CODE
    CommodityCodeDTO:
      description: Товарный код.
      type: object
      required:
        - code
        - type
      properties:
        code:
          description: Товарный код.
          type: string
        type:
          description: Тип товарного кода.
          $ref: '#/components/schemas/CommodityCodeType'
    OfferConditionType:
      description: |
        Тип уценки:

        * `PREOWNED` —  бывший в употреблении товар, раньше принадлежал другому человеку.
        * `SHOWCASESAMPLE` — витринный образец.
        * `REFURBISHED` — повторная продажа товара.
        * `REDUCTION` — товар с дефектами.
        * `RENOVATED` — восстановленный товар.
        * `NOT_SPECIFIED` — не выбран.

        `REFURBISHED` — специальное значение для одежды, обуви и аксессуаров. Используется только для уцененных товаров из этой категории. Другие значения для одежды, обуви и аксессуаров не используются.
      type: string
      enum:
        - PREOWNED
        - SHOWCASESAMPLE
        - REFURBISHED
        - REDUCTION
        - RENOVATED
        - NOT_SPECIFIED
    OfferConditionQualityType:
      description: |
        Внешний вид товара:

        * `PERFECT` — идеальный.
        * `EXCELLENT` — отличный.
        * `GOOD` — хороший.
        * `NOT_SPECIFIED` — не выбран.
      type: string
      enum:
        - PERFECT
        - EXCELLENT
        - GOOD
        - NOT_SPECIFIED
    OfferConditionDTO:
      description: |
        Состояние уцененного товара.
      type: object
      properties:
        type:
          description: |
            Тип уценки.
          $ref: '#/components/schemas/OfferConditionType'
        quality:
          description: |
            Внешний вид товара.
          $ref: '#/components/schemas/OfferConditionQualityType'
        reason:
          description: |
            Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
          type: string
    OfferType:
      description: "Особый тип товара:\n\n* `DEFAULT` — товары, для которых вы передавали особый тип ранее и хотите убрать его.\n* `MEDICINE` — лекарства.\n* `BOOK` — бумажные и электронные книги.\n* `AUDIOBOOK` — аудиокниги.\n* `ARTIST_TITLE` — музыкальная и видеопродукция.\n* `ON_DEMAND` — товары на заказ.\n* `ALCOHOL` — алкоголь.\n\n{% note info \"Если ваш товар —\_книга\" %}\n\nУкажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)\n\n{% endnote %}\n"
      type: string
      enum:
        - DEFAULT
        - MEDICINE
        - BOOK
        - AUDIOBOOK
        - ARTIST_TITLE
        - ON_DEMAND
        - ALCOHOL
    AgeUnitType:
      description: |
        Единицы измерения возраста:

        * `YEAR` — год.
        * `MONTH` — месяц.
      type: string
      enum:
        - YEAR
        - MONTH
    AgeDTO:
      description: Возраст в заданных единицах измерения.
      type: object
      required:
        - value
        - ageUnit
      properties:
        value:
          description: |
            Значение.
          type: number
          minimum: 0
        ageUnit:
          description: |
            Единица измерения.
          $ref: '#/components/schemas/AgeUnitType'
    OfferParamDTO:
      description: |
        Параметры товара.

        Если у товара несколько значений одного параметра, передайте их с одним и тем же `name`, но разными `value`.

        {% cut "Пример" %}

        ```json translate=no
        "params": [
          {
            "name": "Цвет для фильтра",
            "value": "Зеленый"
          },
          {
            "name": "Цвет для фильтра",
            "value": "Желтый"
          }
        ]
        ```

        {% endcut %}
      type: object
      required:
        - name
        - value
      properties:
        name:
          description: |
            Название характеристики.

            Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).
          example: Wi-Fi
          type: string
          maxLength: 200
        value:
          description: |
            Значение.
          example: есть
          type: string
    BaseOfferDTO:
      description: Основные параметры товара.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        name:
          $ref: '#/components/schemas/OfferName'
        marketCategoryId:
          $ref: '#/components/schemas/PartnerMarketCategoryId'
        category:
          $ref: '#/components/schemas/OfferCategory'
        pictures:
          description: |
            Ссылки на изображения товара. Изображение по первой ссылке считается основным, остальные дополнительными.

            **Требования к ссылкам**

            * Ссылок может быть до 30.
            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на изображения и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/images/sku12345.jpg`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/images/sku12345.jpg`

            ❌ `https://www.dropbox.com/s/818f/tovar.jpg`

            Ссылки на изображение должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить изображение, выложите новое изображение по новой ссылке, а ссылку на старое удалите. Если просто заменить изображение по старой ссылке, оно не обновится.

            [Требования к изображениям](https://yandex.ru/support/marketplace/assortment/fields/images.html)
          type: array
          nullable: true
          minItems: 1
          maxItems: 30
          uniqueItems: false
          items:
            type: string
        videos:
          description: |
            Ссылки (URL) на видео товара.

            **Требования к ссылке**

            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на видео и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/video/sku12345.avi`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/video/sku12345.avi`

            ❌ `https://www.dropbox.com/s/818f/super-tovar.avi`

            Ссылки на видео должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить видео, выложите новое видео по новой ссылке, а ссылку на старое удалите. Если просто заменить видео по старой ссылке, оно не обновится.

            [Требования к видео](https://yandex.ru/support/marketplace/assortment/fields/video.html)
          type: array
          nullable: true
          minItems: 1
          maxItems: 6
          uniqueItems: false
          items:
            type: string
        manuals:
          description: |
            Список инструкций по использованию товара.

            Максимальное количество инструкций — 6.
          type: array
          nullable: true
          minItems: 1
          maxItems: 6
          items:
            $ref: '#/components/schemas/OfferManualDTO'
        vendor:
          $ref: '#/components/schemas/OfferVendor'
        barcodes:
          $ref: '#/components/schemas/OfferBarcodes'
        description:
          $ref: '#/components/schemas/OfferDescription'
        manufacturerCountries:
          description: |
            Страна, где был произведен товар.

            Записывайте названия стран так, как они записаны в [списке](https://yastatic.net/s3/doc-binary/src/support/market/ru/countries.xlsx).
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
            example: Россия
        weightDimensions:
          description: |
            Габариты упаковки и вес товара.
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        vendorCode:
          $ref: '#/components/schemas/OfferVendorCode'
        tags:
          description: |
            Метки товара, которые использует магазин. Покупателям теги не видны. По тегам можно группировать и фильтровать разные товары в каталоге — например, товары одной серии, коллекции или линейки.

            Максимальная длина тега — 20 символов. У одного товара может быть максимум 10 тегов.
          type: array
          nullable: true
          minItems: 1
          maxItems: 50
          uniqueItems: true
          items:
            type: string
            example: до 500 рублей
        shelfLife:
          description: |
            Срок годности — период, по прошествии которого товар становится непригоден.

            Указывайте срок, указанный на банке или упаковке. Текущая дата, дата поставки или дата отгрузки значения не имеет.

            Обязательно указывайте срок, если он есть.

            В комментарии укажите условия хранения. Например, `Хранить в сухом помещении`.
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          description: |
            Срок службы — период, в течение которого товар должен исправно выполнять свою функцию.

            Обязательно указывайте срок, если он есть.

            В комментарии укажите условия хранения. Например, `Использовать при температуре не ниже −10 градусов`.
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          description: |
            Гарантийный срок — период, в течение которого можно заменить или починить товар без дополнительной платы.

            Обязательно указывайте срок, если он есть.

            В комментарии опишите особенности гарантийного обслуживания. Например, `Гарантия на аккумулятор — 6 месяцев`.
          $ref: '#/components/schemas/TimePeriodDTO'
        customsCommodityCode:
          description: "{% note warning \"Вместо него используйте `commodityCodes` с типом `CUSTOMS_COMMODITY_CODE`.\" %}\n\n\_\n\n{% endnote %}\n\nКод товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.\n\nОбязательно укажите, если он есть.\n"
          deprecated: true
          example: 8517610008
          type: string
        commodityCodes:
          description: |
            Товарные коды.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CommodityCodeDTO'
        certificates:
          description: |
            Номера документов на товар: сертификата, декларации соответствия и т. п.

            Передавать можно только номера документов, сканы которого загружены в кабинете продавца по [инструкции](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html).
          type: array
          nullable: true
          minItems: 1
          maxItems: 6
          uniqueItems: true
          items:
            type: string
        boxCount:
          description: |
            Количество грузовых мест.

            Параметр используется, если товар представляет собой несколько коробок, упаковок и так далее. Например, кондиционер занимает два места — внешний и внутренний блоки в двух коробках.

            Для товаров, занимающих одно место, не передавайте этот параметр.
          type: integer
          format: int32
          minimum: 2
        condition:
          description: |
            Состояние уцененного товара.

            Используется только для товаров, продаваемых с уценкой.

            [Правила продажи уцененных товаров](https://yandex.ru/support/marketplace/assortment/restrictions/used-goods.html)
          $ref: '#/components/schemas/OfferConditionDTO'
        type:
          description: |
            Особый тип товара. Указывается, если товар:

            * имеет особый тип, который хотите убрать;
            * лекарство;
            * бумажная или электронная книга;
            * аудиокнига;
            * музыка или видео;
            * изготовляется на заказ;
            * алкоголь.
          $ref: '#/components/schemas/OfferType'
        downloadable:
          description: |
            Признак цифрового товара. Укажите `true`, если товар доставляется по электронной почте.

            [Как работать с цифровыми товарами](../../step-by-step/digital.md)
          type: boolean
        adult:
          description: |
            Параметр включает для товара пометку 18+. Устанавливайте ее только для товаров, которые относятся к удовлетворению сексуальных потребностей.
          type: boolean
        age:
          description: |
            Если товар не предназначен для детей младше определенного возраста, укажите это.

            Возрастное ограничение можно задавать в годах (с нуля, с 6, 12, 16 или 18) или в месяцах (любое число от 0 до 12).
          $ref: '#/components/schemas/AgeDTO'
        params:
          description: "{% note warning \"При передаче характеристик используйте `parameterValues`.\" %}\n\n\_\n\n{% endnote %}\n\nХарактеристики, которые есть только у товаров конкретной категории — например, диаметр колес велосипеда или материал подошвы обуви.\n"
          type: array
          nullable: true
          minItems: 1
          deprecated: true
          maxItems: 600
          items:
            $ref: '#/components/schemas/OfferParamDTO'
    BasePriceDTO:
      description: Цена на товар.
      type: object
      required:
        - value
        - currencyId
      properties:
        value:
          description: Цена товара.
          type: number
          minimum: 0
          exclusiveMinimum: true
        currencyId:
          description: Валюта.
          $ref: '#/components/schemas/CurrencyType'
    PriceWithDiscountDTO:
      description: Цена с указанием скидки.
      type: object
      allOf:
        - $ref: '#/components/schemas/BasePriceDTO'
        - properties:
            discountBase:
              description: |
                Зачеркнутая цена.

                Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.

                Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
              type: number
              minimum: 0
              exclusiveMinimum: true
    UpdateTimeDTO:
      description: Время последнего обновления.
      type: object
      required:
        - updatedAt
      properties:
        updatedAt:
          description: Время последнего обновления.
          type: string
          format: date-time
    GetPriceWithDiscountDTO:
      description: Цена с указанием валюты, скидки и времени последнего обновления.
      type: object
      allOf:
        - $ref: '#/components/schemas/PriceWithDiscountDTO'
        - $ref: '#/components/schemas/UpdateTimeDTO'
    GetPriceDTO:
      description: Цена с указанием времени последнего обновления.
      type: object
      allOf:
        - $ref: '#/components/schemas/BasePriceDTO'
        - $ref: '#/components/schemas/UpdateTimeDTO'
    OfferCampaignStatusType:
      description: |
        Статус товара:

        * `PUBLISHED` — Готов к продаже.
        * `CHECKING` — На проверке.
        * `DISABLED_BY_PARTNER` — Скрыт вами.
        * `REJECTED_BY_MARKET` — Отклонен.
        * `DISABLED_AUTOMATICALLY` — Исправьте ошибки.
        * `CREATING_CARD` — Создается карточка.
        * `NO_CARD` — Нужна карточка.
        * `NO_STOCKS` — Нет на складе.
        * `ARCHIVED` — В архиве.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/add/statuses.html)
      type: string
      enum:
        - PUBLISHED
        - CHECKING
        - DISABLED_BY_PARTNER
        - DISABLED_AUTOMATICALLY
        - REJECTED_BY_MARKET
        - CREATING_CARD
        - NO_CARD
        - NO_STOCKS
        - ARCHIVED
    OfferCampaignStatusDTO:
      description: Статус товара в магазине.
      type: object
      required:
        - campaignId
        - status
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        status:
          description: |
            Статус товара.
          $ref: '#/components/schemas/OfferCampaignStatusType'
    SellingProgramType:
      description: |
        Модель размещения:

        * `FBY` — FBY.
        * `FBS` — FBS.
        * `DBS` — DBS.
        * `EXPRESS` — Экспресс.
      type: string
      enum:
        - FBY
        - FBS
        - DBS
        - EXPRESS
    OfferSellingProgramStatusType:
      description: |
        Информация о доступности или недоступности.

        * `FINE` — доступно.
        * `REJECT` — недоступно.
      type: string
      enum:
        - FINE
        - REJECT
    OfferSellingProgramDTO:
      description: Информация о том, по каким моделям можно продавать товар, а по каким нельзя.
      type: object
      required:
        - sellingProgram
        - status
      properties:
        sellingProgram:
          description: |
            Модель размещения.
          $ref: '#/components/schemas/SellingProgramType'
        status:
          description: |
            Информация о том, можно ли по этой модели продавать товар.
          $ref: '#/components/schemas/OfferSellingProgramStatusType'
    MediaFileUploadStateType:
      description: |
        Состояние загрузки медиафайла:

        * `UPLOADING` — загружается.
        * `UPLOADED` — успешно загружен.
        * `FAILED` — при загрузке произошла ошибка. Повторите попытку позже.
      type: string
      enum:
        - UPLOADING
        - UPLOADED
        - FAILED
    OfferMediaFileDTO:
      type: object
      description: |
        Информация о медиафайле товара.
      properties:
        url:
          description: |
            Ссылка на медиафайл.
          type: string
        title:
          description: |
            Название медиафайла.
          type: string
        uploadState:
          description: |
            Состояние загрузки медиафайла.
          $ref: '#/components/schemas/MediaFileUploadStateType'
    OfferMediaFilesDTO:
      description: |
        Информация о медиафайлах товара.
      type: object
      properties:
        firstVideoAsCover:
          deprecated: true
          description: |
            Использовать первое видео в карточке как видеообложку.

            Передайте `true`, чтобы первое видео использовалось как видеообложка, или `false`, чтобы видеообложка не отображалась в карточке товара.
          type: boolean
        videos:
          description: |
            Видеофайлы товара.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
        pictures:
          description: |
            Изображения товара.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
        manuals:
          description: |
            Руководства по использованию товара.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
    GetOfferDTO:
      description: Параметры товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseOfferDTO'
        - properties:
            basicPrice:
              description: |
                Цена.
              $ref: '#/components/schemas/GetPriceWithDiscountDTO'
            purchasePrice:
              description: |
                Себестоимость — затраты на самостоятельное производство товара или закупку у производителя или поставщиков.
              $ref: '#/components/schemas/GetPriceDTO'
            additionalExpenses:
              description: |
                Дополнительные расходы на товар. Например, на доставку или упаковку.
              $ref: '#/components/schemas/GetPriceDTO'
            cardStatus:
              description: |
                Статус карточки товара.
              $ref: '#/components/schemas/OfferCardStatusType'
            campaigns:
              description: |
                Список магазинов, в которых размещен товар.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/OfferCampaignStatusDTO'
            sellingPrograms:
              description: |
                Информация о том, какие для товара доступны модели размещения.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/OfferSellingProgramDTO'
            mediaFiles:
              $ref: '#/components/schemas/OfferMediaFilesDTO'
            archived:
              description: |
                Товар помещен в архив.
              type: boolean
    UpdateMappingDTO:
      description: |
        Карточка на Маркете, которая, с вашей точки зрения, подходит товару. Чтобы определить идентификатор подходящей карточки, воспользуйтесь поиском в кабинете (**Товары** → **Каталог** → **Загрузить товары**).

        По результатам проверки Маркет может привязать товар к более подходящей карточке.
      type: object
      properties:
        marketSku:
          description: |
            Идентификатор карточки на Маркете.
          $ref: '#/components/schemas/MarketSku'
    GetMappingDTO:
      description: |
        Информация о товарах в каталоге.
      type: object
      allOf:
        - description: |
            Идентификатор карточки на Маркете. Показывает текущую привязку товара к карточке.

            Может отсутствовать в ответе, если товар еще не привязан к карточке. Проверьте статус карточки или исправьте ошибки.
          $ref: '#/components/schemas/UpdateMappingDTO'
        - properties:
            marketSkuName:
              description: |
                Название карточки товара.

                Может отсутствовать в ответе, если товар еще не привязан к карточке.
              type: string
            marketModelId:
              description: |
                Идентификатор модели на Маркете.

                Может отсутствовать в ответе, если товар еще не привязан к карточке.
              deprecated: true
              type: integer
              format: int64
            marketModelName:
              description: |
                Название модели на Маркете.

                Может отсутствовать в ответе, если товар еще не привязан к карточке.
              type: string
              deprecated: true
            marketCategoryId:
              description: |
                Идентификатор категории на Маркете, в которую попал товар.

                Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
              type: integer
              format: int64
            marketCategoryName:
              description: |
                Название категории карточки на Маркете.

                Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
              type: string
    GetOfferMappingDTO:
      description: Информация о товаре.
      type: object
      properties:
        offer:
          description: Основные параметры товара.
          $ref: '#/components/schemas/GetOfferDTO'
        mapping:
          description: Информация о карточке товара на Маркете.
          $ref: '#/components/schemas/GetMappingDTO'
    GetOfferMappingsResultDTO:
      description: Информация о товарах.
      type: object
      required:
        - offerMappings
      properties:
        paging:
          description: Идентификатор следующей страницы.
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappings:
          description: Информация о товарах.
          type: array
          items:
            $ref: '#/components/schemas/GetOfferMappingDTO'
    GetOfferMappingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetOfferMappingsResultDTO'
    ParameterValueDTO:
      description: |
        Значение характеристики.

        Вы можете указывать несколько значений одной характеристики при условии, что:

        * Тип характеристики — `ENUM`.
        * В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле `multivalue` имеет значение `true`.

        Для этого в `parameterValues` передавайте каждое значение отдельно — несколько объектов с параметрами `parameterId`, `valueId` и `value`. Параметр `parameterId` должен быть одинаковым.
      type: object
      required:
        - parameterId
      properties:
        parameterId:
          description: Идентификатор характеристики.
          type: integer
          format: int64
          minimum: 1
        unitId:
          description: Идентификатор единицы измерения. Если вы не передали параметр `unitId`, используется единица измерения по умолчанию.
          type: integer
          format: int64
        valueId:
          description: |
            Идентификатор значения.

            Обязательно указывайте идентификатор, если передаете значение из перечня допустимых значений, полученного от Маркета.

            Передавайте вместе с `value`.

            Только для характеристик типа `ENUM`.
          type: integer
          format: int64
        value:
          description: |
            Значение.

            Для характеристик типа `ENUM` передавайте вместе с `valueId`.
          type: string
    DeleteOfferParameterType:
      description: |
        Значения параметров, которые хотите удалить, и соответствующие параметры в `UpdateOfferDTO`, в которых вы передали эти значения ранее:

        * `ADDITIONAL_EXPENSES` — дополнительные расходы на товар (параметр `additionalExpenses`).
        * `ADULT` — пометка 18+ (параметр `adult`)
        * `AGE` — возрастное ограничение для детей (параметр `age`).
        * `BARCODES` — штрихкод (параметр `barcodes`).
        * `BOX_COUNT` — количество грузовых мест (параметр `boxCount`).
        * `CERTIFICATES` — номера документов на товар (параметр `certificates`).
        * `COMMODITY_CODES` — товарные коды (параметр `commodityCodes`).
        * `CONDITION` — состояние уцененного товара (параметр `condition`).
        * `CUSTOMS_COMMODITY_CODE` — код товара в ТН ВЭД (параметр `customsCommodityCode`).
        * `DESCRIPTION` — описание товара (параметр `description`).
        * `DOWNLOADABLE` — признак цифрового товара (параметр `downloadable`).
        * `FIRST_VIDEO_AS_COVER` — использование первого видео в карточке как видеообложки (параметр `firstVideoAsCover`).
        * `GUARANTEE_PERIOD` — гарантийный срок (параметр `guaranteePeriod`).
        * `LIFE_TIME` — срок службы (параметр `lifeTime`).
        * `MANUALS` — список инструкций по использованию товара (параметр `manuals`).
        * `MANUFACTURER_COUNTRIES` — страна производства (параметр `manufacturerCountries`).
        * `PARAMETERS` — характеристики товара (параметры `params`, `parameterValues`).
        * `PICTURES` — ссылки на изображения товара (параметр `pictures`).
        * `PURCHASE_PRICE` — себестоимость (параметр `purchasePrice`).
        * `SHELF_LIFE` — срок годности (параметр `shelfLife`).
        * `TAGS` — метки товара, которые использует магазин (параметр `tags`).
        * `TYPE` — особый тип товара (параметр `type`).
        * `VENDOR_CODE` — название бренда или производителя (параметр `vendorCode`).
        * `VIDEOS` — ссылки на видео товара (параметр `videos`).
      type: string
      enum:
        - ADDITIONAL_EXPENSES
        - ADULT
        - AGE
        - BARCODES
        - BOX_COUNT
        - CERTIFICATES
        - COMMODITY_CODES
        - CONDITION
        - CUSTOMS_COMMODITY_CODE
        - DESCRIPTION
        - DOWNLOADABLE
        - FIRST_VIDEO_AS_COVER
        - GUARANTEE_PERIOD
        - LIFE_TIME
        - MANUALS
        - MANUFACTURER_COUNTRIES
        - PARAMETERS
        - PICTURES
        - PURCHASE_PRICE
        - SHELF_LIFE
        - TAGS
        - TYPE
        - VENDOR_CODE
        - VIDEOS
    UpdateOfferDTO:
      description: Параметры товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseOfferDTO'
        - properties:
            parameterValues:
              description: |
                Список характеристик с их значениями.

                {% note warning "Всегда передавайте вместе с `marketCategoryId`" %}

                Если не передать `marketCategoryId` при изменении характеристик, они обновятся, но в ответе придет предупреждение (параметр `warnings`).

                Если не передать их оба, будет использована информация из устаревших параметров `params` и `category`, а `marketCategoryId` будет определен автоматически.

                {% endnote %}

                При **изменении** характеристик передавайте только те, значение которых нужно обновить. Если в `marketCategoryId` вы меняете категорию, значения общих характеристик для старой и новой категории сохранятся, передавать их не нужно.

                Чтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.
              type: array
              nullable: true
              minItems: 1
              maxItems: 300
              items:
                $ref: '#/components/schemas/ParameterValueDTO'
            basicPrice:
              description: |
                Цена.
              $ref: '#/components/schemas/PriceWithDiscountDTO'
            purchasePrice:
              description: Себестоимость — затраты на самостоятельное производство товара или закупку у производителя или поставщиков.
              $ref: '#/components/schemas/BasePriceDTO'
            additionalExpenses:
              description: Дополнительные расходы на товар. Например, на доставку или упаковку.
              $ref: '#/components/schemas/BasePriceDTO'
            firstVideoAsCover:
              deprecated: true
              description: |
                Использовать первое видео в карточке как видеообложку.

                Передайте `true`, чтобы первое видео использовалось как видеообложка, или `false`, чтобы видеообложка не отображалась в карточке товара.
              type: boolean
            deleteParameters:
              description: "Параметры, которые вы ранее передали в `UpdateOfferDTO`, а теперь хотите удалить.\n\nЕсли передать `adult`, `downloadable` и `firstVideoAsCover`, они не удалятся —\_их значение изменится на `false`.\n\nМожно передать сразу несколько значений.\n\nНе используйте вместе с соответствующим параметром в `UpdateOfferDTO`. Это приведет к ошибке `400`.\n"
              type: array
              nullable: true
              minItems: 1
              uniqueItems: true
              items:
                $ref: '#/components/schemas/DeleteOfferParameterType'
    UpdateOfferMappingDTO:
      description: Информация о товаре.
      type: object
      required:
        - offer
      properties:
        offer:
          description: Параметры товара.
          $ref: '#/components/schemas/UpdateOfferDTO'
        mapping:
          description: Информация о карточке товара на Маркете.
          $ref: '#/components/schemas/UpdateMappingDTO'
    UpdateOfferMappingsRequest:
      type: object
      required:
        - offerMappings
      properties:
        offerMappings:
          description: "Список товаров, которые нужно добавить или обновить.\n\n{% note warning \"Скоро мы уменьшим максимальное количество товаров в запросе\" %}\n\nУже сейчас не передавайте больше 100.\n\n{% endnote %}\n\n\_\n"
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/UpdateOfferMappingDTO'
        onlyPartnerMediaContent:
          description: |
            Будут ли использоваться только переданные вами данные о товарах.

            Значение по умолчанию: `false`. Чтобы удалить данные, которые добавил Маркет, передайте значение `true`.
          type: boolean
    OfferMappingErrorType:
      description: |
        Типы ошибок и предупреждений:

        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `INVALID_CATEGORY` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
        * `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории.
        * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.
        * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.
        * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.
        * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.
        * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.
        * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).
        * `INVALID_PICKER_URL` — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара.
        * `LOCKED_DIMENSIONS` — переданы габариты упаковки, которые нельзя изменить.
        * `INVALID_COMMODITY_CODE` — передан некорректный товарный код.

        Проверить, какие категорийные характеристики доступны для заданной категории, и получить их настройки можно с помощью запроса [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters).
      type: string
      enum:
        - UNKNOWN_CATEGORY
        - INVALID_CATEGORY
        - EMPTY_MARKET_CATEGORY
        - UNKNOWN_PARAMETER
        - UNEXPECTED_BOOLEAN_VALUE
        - NUMBER_FORMAT
        - INVALID_UNIT_ID
        - INVALID_GROUP_ID_LENGTH
        - INVALID_GROUP_ID_CHARACTERS
        - INVALID_PICKER_URL
        - LOCKED_DIMENSIONS
        - INVALID_COMMODITY_CODE
    OfferMappingErrorDTO:
      description: Текст ошибки или предупреждения.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OfferMappingErrorType'
        parameterId:
          description: Идентификатор характеристики, с которой связана ошибка или предупреждение.
          type: integer
          format: int64
        message:
          description: Текст ошибки или предупреждения.
          type: string
      required:
        - type
        - message
    UpdateOfferMappingResultDTO:
      description: Ошибки и предупреждения, которые появились из-за переданных характеристик.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        errors:
          description: |
            Ошибки.

            Если хотя бы по одному товару есть ошибка, информация в каталоге не обновится по всем переданным товарам.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferMappingErrorDTO'
        warnings:
          description: |
            Предупреждения.

            Информация в каталоге обновится.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferMappingErrorDTO'
      required:
        - offerId
    UpdateOfferMappingsResponse:
      description: Описывает проблемы, возникшие при сохранении товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            results:
              description: |
                Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.

                Если ошибок и предупреждений нет, поле не передается.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/UpdateOfferMappingResultDTO'
    SuggestedOfferDTO:
      description: Информация о товаре.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        name:
          $ref: '#/components/schemas/OfferName'
        category:
          $ref: '#/components/schemas/OfferCategory'
        vendor:
          $ref: '#/components/schemas/OfferVendor'
        barcodes:
          $ref: '#/components/schemas/OfferBarcodes'
        description:
          $ref: '#/components/schemas/OfferDescription'
        vendorCode:
          $ref: '#/components/schemas/OfferVendorCode'
        basicPrice:
          description: |
            Цена на товар.
          $ref: '#/components/schemas/BasePriceDTO'
    GetSuggestedOfferMappingsRequest:
      type: object
      properties:
        offers:
          description: Список товаров.
          type: array
          nullable: true
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/SuggestedOfferDTO'
    SuggestedOfferMappingDTO:
      description: Товар с соответствующей карточкой на Маркете.
      type: object
      properties:
        offer:
          description: Информация о товаре.
          $ref: '#/components/schemas/SuggestedOfferDTO'
        mapping:
          description: Информация о карточке на Маркете.
          $ref: '#/components/schemas/GetMappingDTO'
    GetSuggestedOfferMappingsResultDTO:
      description: Подобранные карточки на Маркете.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          items:
            $ref: '#/components/schemas/SuggestedOfferMappingDTO'
    GetSuggestedOfferMappingsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetSuggestedOfferMappingsResultDTO'
    AddOffersToArchiveRequest:
      description: |
        Товары, которые нужно поместить в архив.
      type: object
      required:
        - offerIds
      properties:
        offerIds:
          description: Список товаров, которые нужно поместить в архив.
          type: array
          minItems: 1
          maxItems: 200
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    AddOffersToArchiveErrorType:
      description: |
        Причина, по которой товар не удалось поместить в архив:

        * `OFFER_HAS_STOCKS` — товар хранится на складе Маркета.

        * `UNKNOWN` — неизвестная причина ошибки. Скорее всего произошел сбой на стороне Маркета. Если ошибка повторяется долгое время, обратитесь в поддержку.
      type: string
      enum:
        - OFFER_HAS_STOCKS
        - UNKNOWN
    AddOffersToArchiveErrorDTO:
      description: Товар, который не удалось поместить в архив.
      type: object
      required:
        - offerId
        - error
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        error:
          description: Причина, по которой товар не удалось поместить в архив.
          $ref: '#/components/schemas/AddOffersToArchiveErrorType'
    AddOffersToArchiveDTO:
      description: Товары, которые не удалось поместить в архив.
      type: object
      properties:
        notArchivedOffers:
          description: Список товаров, которые не удалось поместить в архив.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/AddOffersToArchiveErrorDTO'
    AddOffersToArchiveResponse:
      description: Результат архивации товаров.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              description: Товары, которые не удалось поместить в архив.
              $ref: '#/components/schemas/AddOffersToArchiveDTO'
    DeleteOffersFromArchiveRequest:
      description: |
        Товары, которые нужно восстановить из архива.
      type: object
      required:
        - offerIds
      properties:
        offerIds:
          description: Список товаров, которые нужно восстановить из архива.
          type: array
          minItems: 1
          maxItems: 200
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteOffersFromArchiveDTO:
      description: Товары, которые не удалось восстановить из архива.
      type: object
      properties:
        notUnarchivedOfferIds:
          description: Список товаров, которые не удалось восстановить из архива.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteOffersFromArchiveResponse:
      description: Результат разархивации товаров.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              description: Товары, которые не удалось восстановить из архива.
              $ref: '#/components/schemas/DeleteOffersFromArchiveDTO'
    OfferMappingKindType:
      description: |
        Вид маппинга:
        * `ALL` — все товары.
        * `ACTIVE` — готовые к продаже товары.
      type: string
      enum:
        - ACTIVE
        - ALL
    OfferProcessingStatusType:
      description: |
        Статус публикации товара:

        * `UNKNOWN` — неизвестный статус.
        * `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену.
        * `IN_WORK` — товар проходит модерацию. Это занимает несколько дней.
        * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`.
        * `NEED_MAPPING` — у товара нельзя создать карточку.
        * `NEED_CONTENT` — для товара без SKU на Маркете (`marketSku`) нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете.
        * `CONTENT_PROCESSING` — товар находится на модерации.
        * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
        * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * `REVIEW` — принимается решение о размещении товара.
        * `CREATE_ERROR` — не удалось создать карточку товара.
        * `UPDATE_ERROR` — у карточки товара есть непримененные изменения.
      type: string
      enum:
        - UNKNOWN
        - READY
        - IN_WORK
        - NEED_INFO
        - NEED_MAPPING
        - NEED_CONTENT
        - CONTENT_PROCESSING
        - SUSPENDED
        - REJECTED
        - REVIEW
        - CREATE_ERROR
        - UPDATE_ERROR
    OfferAvailabilityStatusType:
      description: |
        Планы по поставкам:

        * `ACTIVE` — поставки будут.
        * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`.
        * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`.
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - DELISTED
    DayOfWeekType:
      description: |
        День недели:

        * `MONDAY` — понедельник.
        * `TUESDAY` — вторник.
        * `WEDNESDAY` — среда.
        * `THURSDAY` — четверг.
        * `FRIDAY` — пятница.
        * `SATURDAY` — суббота.
        * `SUNDAY` — воскресенье.
      type: string
      enum:
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
        - SUNDAY
    OfferProcessingNoteType:
      description: |
        Тип причины, по которой товар не прошел модерацию:

        * `ASSORTMENT` — товар производится в разных вариантах. Каждый из них нужно описать как отдельный товар (параметр `offerMappings` в запросе [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md) или строка в каталоге, если вы загружаете товары через кабинет продавца на Маркете).
        * `CANCELLED` — товар отозван с модерации по вашей инициативе.
        * `CONFLICTING_INFORMATION` _(ранее ошибочно `CONFLICTING`)_ — вы предоставили противоречивую информацию о товаре. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `OTHER` — товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру.
        * `DEPARTMENT_FROZEN` — правила размещения товаров в данной категории перерабатываются, поэтому товар пока не может пройти модерацию.
        * `INCORRECT_INFORMATION` — информация о товаре, которую вы предоставили, противоречит описанию от производителя. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `LEGAL_CONFLICT` — товар не прошел модерацию по юридическим причинам. Например, он официально не продается в России или у вас нет разрешения на его продажу.
        * `NEED_CLASSIFICATION_INFORMATION` — информации о товаре, которую вы предоставили, не хватает, чтобы отнести его к категории. Проверьте, что правильно указали название, категорию, производителя и страны производства товара, а также URL изображений или страниц с описанием, по которым можно идентифицировать товар.
        * `NEED_INFORMATION` — товар раньше не продавался в России и пока не размещается на Маркете. Для него можно создать карточку. Подробнее см. в разделе [Работа с карточкой товара](https://yandex.ru/support/marketplace/assortment/content/index.html) Справки Маркета для продавцов.
        * `NEED_PICTURES` — для идентификации товара нужны его изображения. Отправьте URL изображений товара в запросе [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md) или загрузите обновленный каталог через кабинет продавца на Маркете.
        * `NEED_VENDOR` — неверно указан производитель товара.
        * `NO_CATEGORY`, `NO_KNOWLEDGE` — товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию.
        * `NO_PARAMETERS_IN_SHOP_TITLE` — товар производится в разных вариантах, и из указанного названия непонятно, о каком идет речь. Параметры, которые нужно добавить в название товара, указаны в параметре `payload`.
        * `NO_SIZE_MEASURE` — для этого товара нужна размерная сетка. Отправьте ее в службу поддержки или вашему менеджеру. Требования к размерной сетке указаны в параметре `payload`.
        * `SAMPLE_LINE` — товар не прошел модерацию из-за лишней строки.
      type: string
      enum:
        - ASSORTMENT
        - CANCELLED
        - CONFLICTING_INFORMATION
        - OTHER
        - DEPARTMENT_FROZEN
        - INCORRECT_INFORMATION
        - LEGAL_CONFLICT
        - NEED_CLASSIFICATION_INFORMATION
        - NEED_INFORMATION
        - NEED_PICTURES
        - NEED_VENDOR
        - NO_CATEGORY
        - NO_KNOWLEDGE
        - NO_PARAMETERS_IN_SHOP_TITLE
        - NO_SIZE_MEASURE
        - SAMPLE_LINE
    OfferProcessingNoteDTO:
      description: Причины, по которым товар не прошел модерацию.
      type: object
      properties:
        type:
          description: Тип причины, по которой товар не прошел модерацию.
          $ref: '#/components/schemas/OfferProcessingNoteType'
        payload:
          description: |
            Дополнительная информация о причине отклонения товара.
          type: string
    OfferProcessingStateDTO:
      description: Информация о статусе публикации товара на Маркете.
      type: object
      properties:
        status:
          description: Статус публикации товара
          $ref: '#/components/schemas/OfferProcessingStatusType'
        notes:
          description: Причины, по которым товар не прошел модерацию.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferProcessingNoteDTO'
    MappingsOfferInfoDTO:
      description: Базовая информация о товарах в каталоге.
      type: object
      properties:
        name:
          $ref: '#/components/schemas/OfferName'
        shopSku:
          $ref: '#/components/schemas/ShopSku'
        category:
          $ref: '#/components/schemas/OfferCategory'
        vendor:
          $ref: '#/components/schemas/OfferVendor'
        vendorCode:
          $ref: '#/components/schemas/OfferVendorCode'
        description:
          $ref: '#/components/schemas/OfferDescription'
        id:
          $ref: '#/components/schemas/ShopSku'
        feedId:
          description: Идентификатор фида.
          type: integer
          format: int64
        barcodes:
          $ref: '#/components/schemas/OfferBarcodes'
        urls:
          description: |
            URL фотографии товара или страницы с описанием на вашем сайте.

            Переданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.

            Должен содержать один вложенный параметр `url`.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        pictures:
          description: |
            Ссылки (:no-translate[URL]) изображений товара в хорошем качестве.

            Можно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.
          type: array
          nullable: true
          minItems: 1
          maxItems: 30
          uniqueItems: false
          items:
            type: string
        manufacturer:
          description: |
            Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).

            Необязательный параметр.
          type: string
        manufacturerCountries:
          description: |
            Список стран, в которых произведен товар.

            Обязательный параметр.

            Должен содержать хотя бы одну, но не больше 5 стран.
          type: array
          nullable: true
          minItems: 1
          maxItems: 5
          uniqueItems: true
          items:
            type: string
        minShipment:
          description: |
            Минимальное количество единиц товара, которое вы поставляете на склад.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60.
          type: integer
          format: int32
        transportUnitSize:
          description: |
            Количество единиц товара в одной упаковке, которую вы поставляете на склад.

            Например, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6.
          type: integer
          format: int32
        quantumOfSupply:
          deprecated: true
          description: |
            Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству `minShipment`.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12.
          type: integer
          format: int32
        deliveryDurationDays:
          description: Срок, за который продавец поставляет товары на склад, в днях.
          type: integer
          format: int32
        boxCount:
          description: |
            Сколько мест (если больше одного) занимает товар.

            Параметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр.
          type: integer
          format: int32
        customsCommodityCodes:
          description: |
            Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).

            Обязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).

            Может содержать только один вложенный код ТН ВЭД.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        weightDimensions:
          description: |
            Габариты упаковки и вес товара.
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        supplyScheduleDays:
          description: Дни недели, в которые продавец поставляет товары на склад.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/DayOfWeekType'
        shelfLifeDays:
          description: "{% note warning \"Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке.\" %}\n\n\_\n\n{% endnote %}\n\nСрок годности: через сколько дней товар станет непригоден для использования.\n"
          type: integer
          format: int32
          deprecated: true
        lifeTimeDays:
          description: "{% note warning \"Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке.\" %}\n\n\_\n\n{% endnote %}\n\nСрок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.\n"
          type: integer
          format: int32
          deprecated: true
        guaranteePeriodDays:
          description: |
            Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.
          type: integer
          format: int32
        processingState:
          description: Информация о статусе публикации товара на Маркете.
          $ref: '#/components/schemas/OfferProcessingStateDTO'
        availability:
          description: |
            Планы по поставкам:

            * `ACTIVE` — поставки будут.
            * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`.
            * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`.

            Значения по умолчанию:

            * при добавлении товара — `ACTIVE`;
            * при редактировании товара — такое же, как и при последнем обновлении каталога (в том числе другими способами, не через API).
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
        shelfLife:
          description: |
            Информация о сроке годности: через какое время (в годах, месяцах, днях, неделях или часах) товар станет непригоден для использования. Например, срок годности есть у таких категорий, как продукты питания и медицинские препараты.

            Обязательный параметр, если у товара есть срок годности.

            {% note alert "У товара есть срок годности, а вы не укажете его" %}

            Товар будет скрыт с Маркета.

            {% endnote %}
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          description: |
            Информация о сроке службы: в течение какого периода (в годах, месяцах, днях, неделях или часах) товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.

            Обязательный параметр, если у товара есть срок службы.

            {% note alert "У товара есть срок службы, а вы не укажете его" %}

             Товар будет скрыт с Маркета.

            {% endnote %}
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          description: |
            Информация о гарантийном сроке: в течение какого периода (в годах, месяцах, днях, неделях или часах) возможны обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.

            Обязательный параметр, если у товара есть гарантийный срок.

            {% note alert "У товара есть гарантийный срок, а вы не укажете его" %}

            Товар будет скрыт с Маркета.

            {% endnote %}
          $ref: '#/components/schemas/TimePeriodDTO'
        certificate:
          description: |
            Номер документа на товар.

            Перед указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html)
          type: string
    MappingsOfferDTO:
      description: Информация о товарах в каталоге.
      type: object
      allOf:
        - $ref: '#/components/schemas/MappingsOfferInfoDTO'
        - properties:
            price:
              description: Цена на товар.
              type: number
    OfferMappingDTO:
      description: Информация о текущей карточке товара на Маркете.
      type: object
      properties:
        marketSku:
          description: |
            :no-translate[SKU] на Маркете — идентификатор карточки товара на Маркете.

            При первом запросе `marketSku` привязывает товар к карточке Маркета. В дальнейшем изменить :no-translate[SKU] через отправку запроса нельзя, для этого нужно обратиться в службу поддержки.
          $ref: '#/components/schemas/MarketSku'
        modelId:
          description: |
            Идентификатор модели для текущей карточки товара на Маркете.

            Например, две лопатки разных цветов имеют разные :no-translate[SKU] на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара.
          type: integer
          format: int64
        categoryId:
          description: Идентификатор категории для текущей карточки товара на Маркете.
          type: integer
          format: int64
    OfferMappingInfoDTO:
      description: Информация о карточке товара.
      type: object
      properties:
        mapping:
          description: |
            Информация о карточке товара на Маркете.

            Если параметр не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).
          $ref: '#/components/schemas/OfferMappingDTO'
        awaitingModerationMapping:
          description: Информация о карточке товара на Маркете, проходящей модерацию для данного товара
          $ref: '#/components/schemas/OfferMappingDTO'
        rejectedMapping:
          description: Информация о последней карточке товара на Маркете, отклоненной на модерации для данного товара
          $ref: '#/components/schemas/OfferMappingDTO'
    OfferMappingEntryDTO:
      description: |
        Список товаров.
      type: object
      allOf:
        - properties:
            offer:
              description: Информация о товаре из каталога.
              $ref: '#/components/schemas/MappingsOfferDTO'
        - $ref: '#/components/schemas/OfferMappingInfoDTO'
    OfferMappingEntriesDTO:
      description: Информация о товарах в каталоге.
      type: object
      required:
        - offerMappingEntries
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          type: array
          items:
            $ref: '#/components/schemas/OfferMappingEntryDTO'
    GetOfferMappingEntriesResponse:
      description: Ответ на запрос списка товаров в каталоге.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferMappingEntriesDTO'
    UpdateMappingsOfferDTO:
      description: Информация о товарах в каталоге.
      type: object
      allOf:
        - $ref: '#/components/schemas/MappingsOfferInfoDTO'
    UpdateOfferMappingEntryDTO:
      description: |
        Список товаров.
      type: object
      allOf:
        - properties:
            offer:
              description: Информация о товаре из каталога.
              $ref: '#/components/schemas/UpdateMappingsOfferDTO'
        - $ref: '#/components/schemas/OfferMappingInfoDTO'
    UpdateOfferMappingEntryRequest:
      description: Запрос на обновление товаров.
      type: object
      required:
        - offerMappingEntries
      properties:
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/UpdateOfferMappingEntryDTO'
    GetSuggestedOfferMappingEntriesRequest:
      description: Запрос рекомендованных карточек товара.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/MappingsOfferDTO'
    EnrichedMappingsOfferDTO:
      description: Информация о рекомендованных карточках товаров.
      type: object
      allOf:
        - $ref: '#/components/schemas/MappingsOfferDTO'
        - properties:
            marketCategoryId:
              description: |
                Идентификатор категории для рекомендованной карточки товара на Маркете.

                Возвращается только вместе с параметром `marketSku`.
              type: integer
              format: int64
            marketCategoryName:
              description: |
                Название категории для рекомендованной карточки товара на Маркете.

                Может отсутствовать в ответе.
              type: string
            marketModelId:
              description: |
                Идентификатор модели для рекомендованной карточки товара на Маркете.

                Может отсутствовать в ответе.
              deprecated: true
              type: integer
              format: int64
            marketModelName:
              description: |
                Название модели для рекомендованной карточки товара на Маркете.

                Возвращается только вместе с параметром ##marketSku##.
              deprecated: true
              type: string
            marketSku:
              description: |
                :no-translate[SKU] на Маркете — идентификатор рекомендованной карточки товара на Маркете.

                Параметр возвращается, если для товара нашлась карточка. Если параметра нет в ответе, возможно, товар еще не продается на Маркете или вы передали неполные (некорректные) данные в запросе.
              $ref: '#/components/schemas/MarketSku'
            marketSkuName:
              description: |
                Название товара с рекомендованной карточки на Маркете.

                Может отсутствовать в ответе.
              type: string
    OfferMappingSuggestionsListDTO:
      description: Список рекомендованных карточек товара.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          items:
            $ref: '#/components/schemas/EnrichedMappingsOfferDTO'
    GetSuggestedOfferMappingEntriesResponse:
      description: Ответ со списком рекомендованных карточек товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferMappingSuggestionsListDTO'
    UpdateBusinessPricesDTO:
      description: Цены.
      type: object
      allOf:
        - $ref: '#/components/schemas/PriceWithDiscountDTO'
        - properties:
            minimumForBestseller:
              description: |
                Минимальная цена товара для попадания в акцию «Бестселлеры Маркета». Подробнее об этом способе участия читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/marketing/promos/market/bestsellers#minimum).

                При передаче цены ориентируйтесь на значение параметра `maxPromoPrice` (максимально возможная цена для участия в акции) в методе [POST businesses/{businessId}/promos/offers](../../reference/promos/getPromoOffers.md).

                Товар не попадет в акцию с помощью этого способа, если:

                * Не передать этот параметр. Удалится значение, которое вы указали ранее.
                * В методе [POST businesses/{businessId}/offer-prices](../../reference/prices/getDefaultPrices.md) для этого товара возвращается параметр `excludedFromBestsellers` со значением `true`.

                  Но товар по-прежнему сможет попасть в акцию через [автоматическое участие](:no-translate[*auto]) или [ручное добавление](:no-translate[*updatePromoOffers]).
              type: number
              minimum: 0
              maximum: 100000000
              exclusiveMinimum: true
    UpdateBusinessOfferPriceDTO:
      description: Товар с новой ценой.
      type: object
      required:
        - offerId
        - price
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        price:
          $ref: '#/components/schemas/UpdateBusinessPricesDTO'
    UpdateBusinessPricesRequest:
      description: Запрос на установку цен, которые действуют во всех магазинах.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров с ценами.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/UpdateBusinessOfferPriceDTO'
    VatType:
      description: |
        Идентификатор НДС, применяемый для товара:

        * `2` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.
        * `5` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.
        * `6` — НДС не облагается, используется только для отдельных видов услуг.
        * `7` — НДС 20%. Основной НДС с 2019 года.
        * `10` — НДС 5%. НДС для упрощенной системы налогообложения (УСН).
        * `11` — НДС 7%. НДС для упрощенной системы налогообложения (УСН).

        Если параметр не указан, используется НДС, установленный в кабинете.

        **Для продавцов :no-translate[Market Yandex Go]** недоступна передача и получение НДС.
      type: integer
      format: int32
    PriceDTO:
      description: Цена с указанием скидки, валюты и времени последнего обновления.
      type: object
      properties:
        value:
          description: Цена на товар.
          type: number
        discountBase:
          description: |
            Цена на товар без скидки.

            Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.

            Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
          type: number
        currencyId:
          description: |
            Валюта, в которой указана цена на товар.
          $ref: '#/components/schemas/CurrencyType'
        vat:
          $ref: '#/components/schemas/VatType'
    OfferPriceDTO:
      description: Товар с информацией о новой цене на него.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        price:
          $ref: '#/components/schemas/PriceDTO'
    UpdatePricesRequest:
      description: Запрос на установку цен на товары.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          minItems: 1
          maxItems: 2000
          items:
            $ref: '#/components/schemas/OfferPriceDTO'
    OfferPriceResponseDTO:
      description: Информация об установленной цене на товар.
      type: object
      properties:
        id:
          description: Идентификатор предложения из прайс-листа.
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
        marketSku:
          $ref: '#/components/schemas/MarketSku'
        updatedAt:
          description: Дата и время последнего обновления цены на товар.
          type: string
          format: date-time
    OfferPriceListResponseDTO:
      description: Список цен на товары.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Страница списка.
          type: array
          items:
            $ref: '#/components/schemas/OfferPriceResponseDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        total:
          description: Количество всех цен магазина, измененных через :no-translate[API].
          type: integer
          format: int32
    GetPricesResponse:
      description: Ответ на запрос списка цен.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferPriceListResponseDTO'
    GetPricesByOfferIdsRequest:
      description: Запрос списка цен.
      type: object
      properties:
        offerIds:
          description: "Список :no-translate[SKU].\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным :no-translate[SKU], не заполняйте:\n\n* `page_token`\n* `limit`\n\n{% endnote %}\n\n\_\n"
          type: array
          minItems: 1
          maxItems: 2000
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    OfferPriceByOfferIdsResponseDTO:
      description: Информация об установленной цене.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        price:
          $ref: '#/components/schemas/PriceDTO'
        updatedAt:
          description: Дата и время последнего обновления цены.
          type: string
          format: date-time
    OfferPriceByOfferIdsListResponseDTO:
      description: Список цен.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Страница списка цен.
          type: array
          items:
            $ref: '#/components/schemas/OfferPriceByOfferIdsResponseDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetPricesByOfferIdsResponse:
      description: Ответ на запрос списка цен.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferPriceByOfferIdsListResponseDTO'
    SuggestOfferPriceDTO:
      description: Товар, для которого требуется получить цены для продвижения.
      type: object
      properties:
        offerId:
          description: Идентификатор предложения из прайс-листа.
          $ref: '#/components/schemas/ShopSku'
        marketSku:
          $ref: '#/components/schemas/MarketSku'
    SuggestPricesRequest:
      description: Запрос на получение списка цен для продвижения.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          items:
            $ref: '#/components/schemas/SuggestOfferPriceDTO'
          maxItems: 1000
    PriceSuggestType:
      description: |
        Тип цены:

        * `BUYBOX` — самая низкая цена на товар, по которой он продается сейчас. Эта цена обновляется в режиме реального времени. Если вы установите цену ниже, начнет показываться ваше предложение. Если для этого значения в параметре `price` указана цена, которая совпадает с вашей, значит, ваш товар уже показывается на витрине. Если кроме вас этот товар продают другие продавцы по такой же цене, их предложения также будут отображаться вместе с вашими по очереди.
        * `DEFAULT_OFFER` — рекомендованная Маркетом цена, которая привлекает покупателей. Рассчитывается только для популярных на сервисе товаров и обновляется раз в четыре часа.
        * `MIN_PRICE_MARKET` — минимальная цена на Маркете. Самая низкая цена среди всех предложений товара на Маркете во всех регионах, включая те, которые не видны на витрине. Эта цена обновляется в режиме реального времени и обеспечивает большее количество показов на Маркете, чем самая низкая или рекомендованная цена.
      type: string
      enum:
        - BUYBOX
        - DEFAULT_OFFER
        - MIN_PRICE_MARKET
    PriceSuggestDTO:
      description: Тип цены.
      type: object
      properties:
        type:
          description: Тип цены.
          $ref: '#/components/schemas/PriceSuggestType'
        price:
          description: Цена в рублях.
          type: number
    PriceSuggestOfferDTO:
      description: Товар с ценами для продвижения.
      type: object
      properties:
        marketSku:
          $ref: '#/components/schemas/MarketSku'
        offerId:
          description: Идентификатор предложения из прайс-листа.
          $ref: '#/components/schemas/ShopSku'
        priceSuggestion:
          description: |
            Цены для продвижения.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/PriceSuggestDTO'
    SuggestPricesResultDTO:
      description: Результат запроса цен для продвижения.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров с ценами для продвижения.
          type: array
          items:
            $ref: '#/components/schemas/PriceSuggestOfferDTO'
    SuggestPricesResponse:
      description: Ответ на запрос списка цен для продвижения.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/SuggestPricesResultDTO'
    GetDefaultPricesRequest:
      description: Запрос списка цен.
      type: object
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.
          type: array
          nullable: true
          minItems: 1
          maxItems: 200
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
        archived:
          description: Находится ли товар в архиве.
          type: boolean
    OfferDefaultPriceDTO:
      description: Цена с указанием валюты, скидки и времени последнего обновления, а также минимальная цена для попадания в акцию «Бестселлеры Маркета».
      type: object
      allOf:
        - $ref: '#/components/schemas/GetPriceWithDiscountDTO'
        - properties:
            minimumForBestseller:
              description: |
                Минимальная цена товара для попадания в акцию «Бестселлеры Маркета». Подробнее об этом способе участия читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/marketing/promos/market/bestsellers#minimum).

                Передается в методе [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).
              type: number
              minimum: 0
              maximum: 100000000
              exclusiveMinimum: true
            excludedFromBestsellers:
              description: |
                Признак того, что товар не попадает в акцию «Бестселлеры Маркета». Подробнее об акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).

                Если значение `true`, в методе [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md) параметр `minimumForBestseller` игнорируется.
              type: boolean
    OfferDefaultPriceResponseDTO:
      description: Информация об установленной цене на товар.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        price:
          $ref: '#/components/schemas/OfferDefaultPriceDTO'
    OfferDefaultPriceListResponseDTO:
      description: Список цен на товары.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Список товаров.
          type: array
          items:
            $ref: '#/components/schemas/OfferDefaultPriceResponseDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetDefaultPricesResponse:
      description: Ответ на запрос списка цен.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferDefaultPriceListResponseDTO'
    GetQuarantineOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр `offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
      type: object
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.
            <br><br>
            ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          type: array
          minItems: 1
          maxItems: 500
          uniqueItems: true
          nullable: true
          items:
            $ref: '#/components/schemas/ShopSku'
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
        categoryIds:
          description: Фильтр по категориям на Маркете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
        vendorNames:
          description: Фильтр по брендам.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        tags:
          description: Фильтр по тегам.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
    PriceQuarantineVerdictType:
      description: |
        Типы карантина:

        * `PRICE_CHANGE` — новая цена слишком сильно отличается от прежней. В поле `params` будет  новая цена `CURRENT_PRICE` и последняя цена до попадания в карантин `LAST_VALID_PRICE`.
        * `LOW_PRICE` — установленная цена слишком сильно отличается от рыночной. В поле `params` будет установленная вами цена `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
        * `LOW_PRICE_PROMO` — цена после применения акций слишком сильно отличается от рыночной. В поле `params` будет цена после применения акций `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
      type: string
      enum:
        - PRICE_CHANGE
        - LOW_PRICE
        - LOW_PRICE_PROMO
    PriceQuarantineVerdictParamNameType:
      description: |
        Имя параметра причины скрытия товара по цене.

        * `CURRENT_PRICE` — цена, из-за которой товар попал в карантин.
        * `LAST_VALID_PRICE` — последняя цена до попадания в карантин (только для карантина типа `PRICE_CHANGE`).
        * `MIN_PRICE` — порог попадания в карантин (только для карантина типов `LOW_PRICE` и `LOW_PRICE_PROMO`).
        * `CURRENCY` — валюта.
      type: string
      enum:
        - CURRENT_PRICE
        - LAST_VALID_PRICE
        - MIN_PRICE
        - CURRENCY
    PriceQuarantineVerdictParameterDTO:
      description: Параметр карантина.
      type: object
      properties:
        name:
          description: Название параметра.
          $ref: '#/components/schemas/PriceQuarantineVerdictParamNameType'
        value:
          description: Значение параметра.
          type: string
      required:
        - name
        - value
    PriceQuarantineVerdictDTO:
      description: Причина попадания товара в карантин.
      type: object
      required:
        - params
      properties:
        type:
          description: Тип карантина.
          $ref: '#/components/schemas/PriceQuarantineVerdictType'
        params:
          description: Цена, из-за которой товар попал в карантин, и значения для сравнения. Конкретный набор параметров зависит от типа карантина.
          type: array
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictParameterDTO'
    QuarantineOfferDTO:
      description: Товар в карантине.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        currentPrice:
          description: "{% note warning \"Вместо него используйте значение из `verdicts` → `params`.\" %}\n\n\_\n\n{% endnote %}\n\nНовая цена.\n"
          deprecated: true
          $ref: '#/components/schemas/BasePriceDTO'
        lastValidPrice:
          description: "{% note warning \"Вместо него используйте значение из `verdicts` → `params`.\" %}\n\n\_\n\n{% endnote %}\n\nПоследняя цена до попадания в карантин.\n"
          deprecated: true
          $ref: '#/components/schemas/BasePriceDTO'
        verdicts:
          description: Причины попадания товара в карантин.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictDTO'
    GetQuarantineOffersResultDTO:
      description: Список товаров в карантине.
      type: object
      required:
        - offers
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров в карантине.
          type: array
          items:
            $ref: '#/components/schemas/QuarantineOfferDTO'
    GetQuarantineOffersResponse:
      description: Ответ на запрос списка товаров в карантине.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetQuarantineOffersResultDTO'
    ConfirmPricesRequest:
      description: |
        Запрос на подтверждение цены.
      type: object
      required:
        - offerIds
      properties:
        offerIds:
          description: Идентификаторы товаров, у которых подтверждается цена.
          type: array
          minItems: 1
          maxItems: 200
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    HiddenOfferDTO:
      description: Информация о скрытии.
      type: object
      required:
        - offerId
      properties:
        offerId:
          description: |
            Идентификатор предложения из прайс-листа.
          $ref: '#/components/schemas/ShopSku'
    GetHiddenOffersResultDTO:
      description: |
        Список скрытых вами товаров.
      type: object
      required:
        - hiddenOffers
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        hiddenOffers:
          description: Список скрытых товаров.
          type: array
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
    GetHiddenOffersResponse:
      description: Ответ на запрос списка скрытий.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/GetHiddenOffersResultDTO'
    AddHiddenOffersRequest:
      description: Запрос на скрытие оферов.
      type: object
      required:
        - hiddenOffers
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
    DeleteHiddenOffersRequest:
      description: Запрос на возобновление показа оферов.
      type: object
      required:
        - hiddenOffers
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
    UpdateStockItemDTO:
      description: |
        Информация об остатках товара.
      type: object
      required:
        - count
      properties:
        count:
          description: |
            Количество доступного товара.
          format: int64
          type: integer
          minimum: 0
          maximum: 2000000000
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках.
            <br><br>
            Если вы не передали параметр `updatedAt`, используется текущее время.
            <br><br>
            Формат даты и времени: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Например, `2017-11-21T00:42:42+03:00`.
          type: string
          format: date-time
    UpdateStockDTO:
      description: Информация об остатках одного товара на одном из складов.
      type: object
      required:
        - sku
        - items
      properties:
        sku:
          $ref: '#/components/schemas/ShopSku'
        items:
          description: |
            Информация об остатках товара.
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/UpdateStockItemDTO'
    UpdateStocksRequest:
      description: Запрос на изменение информации по остаткам товаров.
      type: object
      required:
        - skus
      properties:
        skus:
          description: |
            Данные об остатках товаров.
          type: array
          minItems: 1
          maxItems: 2000
          uniqueItems: true
          items:
            $ref: '#/components/schemas/UpdateStockDTO'
    GetWarehouseStocksRequest:
      description: |
        Фильтры для запроса остатков.
      type: object
      properties:
        stocksWarehouseId:
          description: |
            Идентификатор склада.

            Если параметр указан, возвращаются только товары в наличии на переданном складе.

            **Для модели :no-translate[FBY]:** получить список складов Маркета можно с помощью метода [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
          type: integer
          format: int64
          minimum: 1
        withTurnover:
          description: |
            **Только для модели FBY**

            Возвращать ли информацию по оборачиваемости.

            Значение по умолчанию: `false`. Если информация нужна, передайте значение `true`.
          type: boolean
          default: false
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве.
          type: boolean
        offerIds:
          description: "Фильтр по вашим :no-translate[SKU] товаров.\n\nВозвращается информация об остатках всех переданных :no-translate[SKU], включая товары в архиве.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nЕсли вы запрашиваете информацию по конкретным :no-translate[SKU], не заполняйте:\n\n* `page_token`\n* `limit`\n* `archived`\n* `stocksOnWarehouse`\n\n{% endnote %}\n\n\_\n"
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 500
          nullable: true
          items:
            $ref: '#/components/schemas/ShopSku'
    TurnoverType:
      description: |
        Оценка оборачиваемости.

        |enum|Диапазон оборачиваемости|Комментарий|
        |-|-|-|
        |`LOW`|`turnoverDays` ≥ 120||
        |`ALMOST_LOW`|100 ≤ `turnoverDays` < 120||
        |`HIGH`|45 ≤ `turnoverDays` < 100||
        |`VERY_HIGH`|0 ≤ `turnoverDays` < 45||
        |`NO_SALES`|—|Продаж нет.|
        |`FREE_STORE`|Любое значение.|Платить за хранение товаров этой категории не требуется.|
      type: string
      enum:
        - LOW
        - ALMOST_LOW
        - HIGH
        - VERY_HIGH
        - NO_SALES
        - FREE_STORE
    TurnoverDTO:
      description: |
        Информация об оборачиваемости товара.

        Подробнее о хранении и оборачиваемости товаров читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/storage/logistics#turnover).
      type: object
      required:
        - turnover
      properties:
        turnover:
          description: Оценка оборачиваемости.
          $ref: '#/components/schemas/TurnoverType'
        turnoverDays:
          description: Значение в днях.
          type: number
          format: double
    WarehouseStockType:
      description: |
        Тип остатков товаров на складе:

        * `AVAILABLE` (соответствует типу «Доступный к заказу» в отчете «Остатки на складе» в кабинете продавца на Маркете) — товар, доступный для продажи.

        * `DEFECT` (соответствует типу «Брак») — товар с браком.

        * `EXPIRED` (соответствует типу «Просрочен») — товар с истекшим сроком годности.

        * `FIT` (соответствует типу «Годный») — товар, который доступен для продажи или уже зарезервирован.

        * `FREEZE` — товар, который зарезервирован для заказов.

        * `QUARANTINE` (соответствует типу «Карантин») — товар, временно недоступный для продажи (например, товар перемещают из одного помещения склада в другое).

        * `UTILIZATION` — товар, который будет утилизирован.
      type: string
      enum:
        - FIT
        - FREEZE
        - AVAILABLE
        - QUARANTINE
        - UTILIZATION
        - DEFECT
        - EXPIRED
    WarehouseStockDTO:
      description: Информация об остатках товара.
      type: object
      required:
        - type
        - count
      properties:
        type:
          description: Тип остатков.
          $ref: '#/components/schemas/WarehouseStockType'
        count:
          description: Значение остатков.
          type: integer
          format: int64
    WarehouseOfferDTO:
      description: Информация об остатках товара.
      type: object
      required:
        - offerId
        - stocks
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        turnoverSummary:
          description: Информация об оборачиваемости.
          $ref: '#/components/schemas/TurnoverDTO'
        stocks:
          description: Информация об остатках.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках.

            Формат даты и времени: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Например, `2023-11-21T00:42:42+03:00`.
          type: string
          format: date-time
    WarehouseOffersDTO:
      description: Информация об остатках товаров на складе.
      type: object
      required:
        - warehouseId
        - offers
      properties:
        warehouseId:
          description: Идентификатор склада.
          type: integer
          format: int64
        offers:
          description: Информация об остатках.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseOfferDTO'
    GetWarehouseStocksDTO:
      description: Список складов с информацией об остатках на каждом из них.
      type: object
      required:
        - warehouses
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        warehouses:
          description: Страница списка складов.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseOffersDTO'
    GetWarehouseStocksResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetWarehouseStocksDTO'
    DeliveryServiceInfoDTO:
      description: Информация о службе доставки.
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: Идентификатор службы доставки.
          type: integer
          format: int64
        name:
          description: Наименование службы доставки.
          type: string
    DeliveryServicesDTO:
      description: Информация о службах доставки.
      type: object
      required:
        - deliveryService
      properties:
        deliveryService:
          description: Информация о службе доставки.
          type: array
          items:
            $ref: '#/components/schemas/DeliveryServiceInfoDTO'
    GetDeliveryServicesResponse:
      description: Ответ на запрос списка служб доставки.
      type: object
      properties:
        result:
          $ref: '#/components/schemas/DeliveryServicesDTO'
    OrderStatsStatusType:
      description: |
        Текущий статус заказа:

        * `CANCELLED_BEFORE_PROCESSING` — заказ отменен до начала его обработки.

        * `CANCELLED_IN_DELIVERY` — заказ отменен во время его доставки.

        * `CANCELLED_IN_PROCESSING` — заказ отменен во время его обработки.

        * `DELIVERY` — заказ передан службе доставки.

        * `DELIVERED` — заказ доставлен.

        * `PARTIALLY_DELIVERED` — заказ частично доставлен.

            {% note warning "Статус заказа может перейти в `PARTIALLY_DELIVERED` не сразу" %}

            Если в доставленном заказе был невыкуп, статус изменится только после получения заказа на складе Маркета.

            {% endnote %}

        * `PARTIALLY_RETURNED` — заказ частично возвращен покупателем.

        * `PENDING` — заказ ожидает подтверждения.

        * `PICKUP` — заказ доставлен в пункт выдачи.

        * `PROCESSING` — заказ в обработке.

        * `RESERVED` — товар зарезервирован на складе.

        * `RETURNED` — заказ полностью возвращен покупателем.

        * `UNKNOWN` — неизвестный статус заказа.

        * `UNPAID` — заказ от юридического лица ожидает оплаты.

        * `LOST` — заказ утерян.
      type: string
      enum:
        - CANCELLED_BEFORE_PROCESSING
        - CANCELLED_IN_DELIVERY
        - CANCELLED_IN_PROCESSING
        - DELIVERY
        - DELIVERED
        - PARTIALLY_DELIVERED
        - PARTIALLY_RETURNED
        - PENDING
        - PICKUP
        - PROCESSING
        - RESERVED
        - RETURNED
        - UNKNOWN
        - UNPAID
        - LOST
    GetOrdersStatsRequest:
      description: Запрос информации по заказам.
      type: object
      properties:
        dateFrom:
          description: |
            Начальная дата, когда заказ был сформирован.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          type: string
          format: date
        dateTo:
          description: |
            Конечная дата, когда заказ был сформирован.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          type: string
          format: date
        updateFrom:
          description: |
            Начальная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          type: string
          format: date
        updateTo:
          description: |
            Конечная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          type: string
          format: date
        orders:
          description: Список идентификаторов заказов.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            description: |
              Список товаров в заказе после возможных изменений.

              В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

              * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

              * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
            type: integer
            format: int64
        statuses:
          description: Список статусов заказов.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OrderStatsStatusType'
        hasCis:
          description: |
            Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]):

            * `true` — да.
            * `false` — нет.
            Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
          type: boolean
    OrdersStatsOrderPaymentType:
      description: |
        Тип оплаты заказа:
        - `POSTPAID` — заказ оплачен после того, как был получен.
        - `PREPAID` — заказ оплачен до того, как был получен.
        - `UNKNOWN` — неизвестный тип оплаты. Скорее всего покупатель отменил или вернул заказ или не было его оплаты.
      type: string
      enum:
        - POSTPAID
        - PREPAID
        - UNKNOWN
    OrdersStatsDeliveryRegionDTO:
      description: Информация о регионе доставки.
      type: object
      properties:
        id:
          description: Идентификатор региона доставки.
          type: integer
          format: int64
        name:
          description: Название региона доставки.
          type: string
    OrdersStatsPriceType:
      description: |
        Тип скидки или цена на товар:
        - `BUYER` — цена на товар с учетом скидок, в том числе купонов.
        - `CASHBACK` — баллы Плюса.
        - `MARKETPLACE` — купоны.
      type: string
      enum:
        - BUYER
        - CASHBACK
        - MARKETPLACE
    OrdersStatsPriceDTO:
      description: Цена или скидки на товар.
      type: object
      properties:
        type:
          description: Тип скидки или цена на товар.
          $ref: '#/components/schemas/OrdersStatsPriceType'
        costPerItem:
          description: |
            Цена или скидка на единицу товара в заказе.

            Точность — два знака после запятой.

            Включает НДС.
          type: number
        total:
          description: |
            Суммарная цена или скидка на все единицы товара в заказе.

            Точность — два знака после запятой.

            Включает НДС.
          type: number
    OrdersStatsWarehouseDTO:
      description: Информация о складе, на котором хранится товар.
      type: object
      properties:
        id:
          description: Идентификатор склада.
          type: integer
          format: int64
        name:
          description: Название склада.
          type: string
    OrdersStatsItemStatusType:
      description: |
        Статус товара:

        * `REJECTED` — товар был добавлен в созданный заказ, но не был оплачен.
        * `RETURNED` — товар вернули.
      type: string
      enum:
        - REJECTED
        - RETURNED
    OrdersStatsStockType:
      description: |
        Тип товара:

        * `FIT` — товар надлежащего качества.

        * `DEFECT` — товар бракованный.

        * `EXPIRED` — товар с истекшим сроком годности.
      type: string
      enum:
        - FIT
        - DEFECT
        - EXPIRED
    OrdersStatsDetailsDTO:
      description: Информация об удалении товара из заказа.
      type: object
      properties:
        itemStatus:
          description: Статус товара.
          $ref: '#/components/schemas/OrdersStatsItemStatusType'
        itemCount:
          description: Количество товара со статусом, указанном в параметре `itemStatus`.
          type: integer
          format: int64
        updateDate:
          description: |
            Дата, когда товар получил статус, указанный в параметре `itemStatus`.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
        stockType:
          description: Тип товара.
          $ref: '#/components/schemas/OrdersStatsStockType'
    OrdersStatsItemDTO:
      description: |
        Список товаров в заказе после возможных изменений.

        В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

        * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

        * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
      type: object
      properties:
        offerName:
          description: Название товара.
          type: string
        marketSku:
          $ref: '#/components/schemas/MarketSku'
        shopSku:
          $ref: '#/components/schemas/ShopSku'
        count:
          description: |
            Количество единиц товара с учетом удаленных единиц.

            Если из заказа удалены все единицы товара, он попадет только в список `initialItems`.
          type: integer
          format: int32
        prices:
          description: Цена или скидки на товар.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrdersStatsPriceDTO'
        warehouse:
          description: Информация о складе, на котором хранится товар.
          $ref: '#/components/schemas/OrdersStatsWarehouseDTO'
        details:
          description: Информация об удалении товара из заказа.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrdersStatsDetailsDTO'
        cisList:
          description: Список кодов идентификации товара в системе [:no-translate[«Честный ЗНАК»]](https://честныйзнак.рф/) или [:no-translate[«ASL BELGISI»]](https://aslbelgisi.uz) (для продавцов :no-translate[Market Yandex Go]).
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        initialCount:
          description: Первоначальное количество единиц товара.
          type: integer
          format: int32
        bidFee:
          description: |
            Списанная ставка ближайшего конкурента.

            Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
          type: integer
          format: int32
          minimum: 0
          maximum: 10000
          example: 570
        cofinanceThreshold:
          description: |
            Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Точность — два знака после запятой.
          type: number
        cofinanceValue:
          description: |
            Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Точность — два знака после запятой.
          type: number
    OrdersStatsPaymentType:
      description: |
        Тип денежного перевода:
        - `PAYMENT` — оплата.
        - `REFUND` — возврат.
      type: string
      enum:
        - PAYMENT
        - REFUND
    OrdersStatsPaymentSourceType:
      description: |
        Способ денежного перевода:
        - `BUYER` — оплата или возврат деньгами.

        Устаревшие способы:
        - `CASHBACK`.
        - `MARKETPLACE`.
        - `SPLIT`.
      type: string
      enum:
        - BUYER
        - CASHBACK
        - MARKETPLACE
        - SPLIT
    OrdersStatsPaymentOrderDTO:
      description: Информация о платежном поручении.
      type: object
      properties:
        id:
          description: Номер платежного поручения.
          type: string
        date:
          description: |
            Дата платежного поручения.

            Формат даты: `ГГГГ‑ММ‑ДД`.
          type: string
          format: date
    OrdersStatsPaymentDTO:
      description: Информация о денежных переводах по заказу.
      type: object
      properties:
        id:
          description: Идентификатор денежного перевода.
          type: string
        date:
          description: |
            Дата денежного перевода.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
        type:
          description: Тип денежного перевода.
          $ref: '#/components/schemas/OrdersStatsPaymentType'
        source:
          description: Способ денежного перевода.
          $ref: '#/components/schemas/OrdersStatsPaymentSourceType'
        total:
          description: |
            Сумма денежного перевода.

            Точность — два знака после запятой.
          type: number
        paymentOrder:
          description: Информация о платежном поручении.
          $ref: '#/components/schemas/OrdersStatsPaymentOrderDTO'
    OrdersStatsCommissionType:
      description: |
        Услуга:

        * `FEE` — размещение товара на Маркете.
        * `FULFILLMENT` — складская обработка. Не возвращается с 1 января 2024 года.
        * `LOYALTY_PARTICIPATION_FEE` — участие в программе лояльности и отзывы за баллы.
        * `AUCTION_PROMOTION` — буст продаж с оплатой за продажи.
        * `INSTALLMENT` — рассрочка. Не возвращается с 24 февраля 2022 года.
        * `DELIVERY_TO_CUSTOMER` — доставка покупателю :no-translate[(FBY, FBS)]. Для DBS и Экспресс — если заказ возвращается через логистику Маркета.
        * `EXPRESS_DELIVERY_TO_CUSTOMER` — экспресс-доставка покупателю (Экспресс).
        * `AGENCY` — прием платежа покупателя.
        * `PAYMENT_TRANSFER` — перевод платежа покупателя.
        * `RETURNED_ORDERS_STORAGE` — хранение невыкупов и возвратов (:no-translate[FBS]). Для :no-translate[DBS] и Экспресс — если заказ возвращается через логистику Маркета.
        * `SORTING` — обработка заказа (:no-translate[FBS]).
        * `INTAKE_SORTING` — организация забора заказов со склада продавца (:no-translate[FBS]).
        * `RETURN_PROCESSING` — обработка заказов на складе (:no-translate[FBS]). Для :no-translate[DBS] и Экспресс — если заказ возвращается через логистику Маркета.
        * `ILLIQUID_GOODS_SALE` — вознаграждение за продажу невывезенных товаров.
      type: string
      enum:
        - FEE
        - FULFILLMENT
        - LOYALTY_PARTICIPATION_FEE
        - AUCTION_PROMOTION
        - INSTALLMENT
        - DELIVERY_TO_CUSTOMER
        - EXPRESS_DELIVERY_TO_CUSTOMER
        - AGENCY
        - PAYMENT_TRANSFER
        - RETURNED_ORDERS_STORAGE
        - SORTING
        - INTAKE_SORTING
        - RETURN_PROCESSING
        - ILLIQUID_GOODS_SALE
    OrdersStatsCommissionDTO:
      description: Информация о стоимости услуг.
      type: object
      properties:
        type:
          description: Услуга.
          $ref: '#/components/schemas/OrdersStatsCommissionType'
        actual:
          description: |
            Сумма, которая была выставлена в момент создания заказа и которую нужно оплатить.
            Точность — два знака после запятой.
          type: number
    OrdersStatsSubsidyOperationType:
      description: |
        Тип операции с баллами, которые используются для уменьшения стоимости размещения:

        * `ACCRUAL` — начисление баллов.
        * `DEDUCTION` — списание баллов.
      type: string
      enum:
        - ACCRUAL
        - DEDUCTION
    OrdersStatsSubsidyType:
      description: |
        Источник баллов, которые используются для уменьшения стоимости размещения:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.)

        * `DELIVERY` — скидка за доставку (:no-translate[DBS]).
      type: string
      enum:
        - YANDEX_CASHBACK
        - SUBSIDY
        - DELIVERY
    OrdersStatsSubsidyDTO:
      description: Информация о начислении баллов, которые используются для уменьшения стоимости размещения, и их списании в случае невыкупа или возврата.
      type: object
      required:
        - operationType
        - type
        - amount
      properties:
        operationType:
          description: Тип операции c баллами, которые используются для уменьшения стоимости размещения.
          $ref: '#/components/schemas/OrdersStatsSubsidyOperationType'
        type:
          description: Источник баллов, которые используются для уменьшения стоимости размещения.
          $ref: '#/components/schemas/OrdersStatsSubsidyType'
        amount:
          description: |
            Количество баллов, которые используются для уменьшения стоимости размещения, с точностью до двух знаков после запятой.
          type: number
    OrdersStatsOrderDTO:
      description: Информация о заказе.
      type: object
      required:
        - items
        - payments
        - commissions
        - currency
      properties:
        id:
          description: Идентификатор заказа.
          type: integer
          format: int64
        creationDate:
          description: |
            Дата создания заказа.

            Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
        statusUpdateDate:
          description: |
            Дата и время, когда статус заказа был изменен в последний раз.

            Формат даты и времени: :no-translate[ISO 8601]. Например, `2017-11-21T00:00:00`. Часовой пояс — :no-translate[UTC+03:00] (Москва).
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/OrderStatsStatusType'
        partnerOrderId:
          description: Идентификатор заказа в информационной системе магазина.
          type: string
        paymentType:
          description: Тип оплаты заказа.
          $ref: '#/components/schemas/OrdersStatsOrderPaymentType'
        fake:
          description: |
            Тип заказа:

            * `false` — настоящий заказ покупателя.

            * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
          type: boolean
        deliveryRegion:
          $ref: '#/components/schemas/OrdersStatsDeliveryRegionDTO'
        items:
          description: |
            Список товаров в заказе после возможных изменений.

            Информация о доставке заказа добавляется отдельным элементом в массиве `items`— параметр `offerName` со значением `Доставка`.
          type: array
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
        initialItems:
          description: |
            Список товаров в заказе.

            Возвращается, только если было изменение количества товаров.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
        payments:
          description: |
            Информация о денежных переводах по заказу.

            Может вернуться пустым, если нет данных о переводах. Например, заказ отменен или выбрана оплата при получении (для модели DBS).
          type: array
          items:
            $ref: '#/components/schemas/OrdersStatsPaymentDTO'
        commissions:
          description: Информация о стоимости услуг.
          type: array
          items:
            $ref: '#/components/schemas/OrdersStatsCommissionDTO'
        subsidies:
          description: Начисление баллов, которые используются для уменьшения стоимости размещения, и их списание в случае невыкупа или возврата.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OrdersStatsSubsidyDTO'
        currency:
          description: |
            Валюта, в которой указаны цены в заказе.
          $ref: '#/components/schemas/CurrencyType'
    OrdersStatsDTO:
      description: Информация по заказам.
      type: object
      required:
        - orders
      properties:
        orders:
          description: Список заказов.
          type: array
          items:
            $ref: '#/components/schemas/OrdersStatsOrderDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetOrdersStatsResponse:
      description: Ответ на запрос информации по заказам.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OrdersStatsDTO'
    GetGoodsStatsRequest:
      description: Запрос отчета по товарам.
      type: object
      required:
        - shopSkus
      properties:
        shopSkus:
          description: |
            Список ваших идентификаторов :no-translate[SKU].
          type: array
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          maxItems: 500
    GoodsStatsWeightDimensionsDTO:
      description: |
        Информация о весе и габаритах товара.

        Если товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.
      type: object
      properties:
        length:
          description: Длина товара в сантиметрах.
          type: number
        width:
          description: Ширина товара в сантиметрах.
          type: number
        height:
          description: Высота товара в сантиметрах.
          type: number
        weight:
          description: Вес товара в килограммах.
          type: number
    GoodsStatsWarehouseDTO:
      description: Информация о складе.
      type: object
      required:
        - stocks
      properties:
        id:
          description: Идентификатор склада.
          type: integer
          format: int64
        name:
          description: Название склада.
          type: string
        stocks:
          description: Информация об остатках товаров на складе.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
    TariffType:
      description: |
        Услуга Маркета или дополнительный тариф к услуге размещения:

        * `AGENCY_COMMISSION` — прием платежа покупателя.

        * `PAYMENT_TRANSFER` — перевод платежа покупателя.

        * `STORAGE` — хранение товара на складе Маркета в течение суток.

        * `SURPLUS` — хранение излишков на складе Маркета.

        * `WITHDRAW` — вывоз товара со склада Маркета.

        * `FEE` — размещение товара на Маркете.

        * `DELIVERY_TO_CUSTOMER` — доставка покупателю.

        * `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.

        * `CROSSREGIONAL_DELIVERY_RETURN` — доставка невыкупов и возвратов.

        * `DISPOSAL` — утилизация.

        * `SORTING_CENTER_STORAGE` — хранение невыкупов и возвратов.

        * `EXPRESS_DELIVERY` — экспресс-доставка покупателю.

        * `FF_XDOC_SUPPLY_BOX` — поставка товара через транзитный склад (за короб).

        * `FF_XDOC_SUPPLY_PALLET` — поставка товара через транзитный склад (за палету).

        * `SORTING` — обработка заказа.

        * `MIDDLE_MILE` — средняя миля.

        * `RETURN_PROCESSING` — обработка невыкупов и возвратов.

        * `EXPRESS_CANCELLED_BY_PARTNER` — отмена заказа с экспресс-доставкой.

        * `CROSSBORDER_DELIVERY` — доставка из-за рубежа.

        * `INTAKE_SORTING_BULKY_CARGO` — сортировка заказов с крупногабаритными товарами, которые Маркет забрал со склада продавца.

        * `INTAKE_SORTING_SMALL_GOODS` — сортировка заказов с малогабаритными товарами, которые Маркет забрал со склада продавца.

        * `INTAKE_SORTING_DAILY` — организация забора заказов со склада продавца.

        * `FF_STORAGE_BILLING` — хранения товаров на складе.

        * `CANCELLED_ORDER_FEE_QI` — отмена заказа по вине продавца.

        * `LATE_ORDER_EXECUTION_FEE_QI` — несвоевременная отгрузка или доставка.

        Подробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).
      type: string
      enum:
        - AGENCY_COMMISSION
        - PAYMENT_TRANSFER
        - STORAGE
        - WITHDRAW
        - SURPLUS
        - FEE
        - DELIVERY_TO_CUSTOMER
        - CROSSREGIONAL_DELIVERY
        - CROSSREGIONAL_DELIVERY_RETURN
        - DISPOSAL
        - SORTING_CENTER_STORAGE
        - EXPRESS_DELIVERY
        - FF_XDOC_SUPPLY_BOX
        - FF_XDOC_SUPPLY_PALLET
        - SORTING
        - MIDDLE_MILE
        - RETURN_PROCESSING
        - EXPRESS_CANCELLED_BY_PARTNER
        - CROSSBORDER_DELIVERY
        - INTAKE_SORTING_BULKY_CARGO
        - INTAKE_SORTING_SMALL_GOODS
        - INTAKE_SORTING_DAILY
        - FF_STORAGE_BILLING
        - CANCELLED_ORDER_FEE_QI
        - LATE_ORDER_EXECUTION_FEE_QI
    TariffParameterDTO:
      description: Детали расчета конкретной услуги Маркета.
      type: object
      required:
        - name
        - value
      properties:
        name:
          description: Название параметра.
          type: string
        value:
          description: Значение параметра.
          type: string
    TariffDTO:
      description: Информация о тарифах, по которым нужно заплатить за услуги Маркета.
      type: object
      required:
        - type
        - amount
        - currency
        - parameters
      properties:
        type:
          description: Услуга Маркета, за которую начисляется тариф.
          $ref: '#/components/schemas/TariffType'
        percent:
          description: Значение тарифа в процентах.
          deprecated: true
          type: number
        amount:
          description: Значение тарифа.
          type: number
        currency:
          description: Валюта, в которой указано значение тарифа.
          $ref: '#/components/schemas/CurrencyType'
        parameters:
          description: Параметры расчета тарифа.
          type: array
          items:
            $ref: '#/components/schemas/TariffParameterDTO'
    GoodsStatsGoodsDTO:
      description: Информация о товаре.
      type: object
      properties:
        shopSku:
          $ref: '#/components/schemas/ShopSku'
        marketSku:
          description: ':no-translate[SKU] на Маркете — идентификатор карточки товара на Маркете.'
          $ref: '#/components/schemas/MarketSku'
        name:
          description: Название товара.
          type: string
        price:
          description: Цена на товар в валюте, которая установлена [в кабинете продавца на Маркете](https://partner.market.yandex.ru/).
          type: number
        categoryId:
          description: Идентификатор категории товара на Маркете.
          type: integer
          format: int64
        categoryName:
          description: Название категории товара на Маркете.
          type: string
        weightDimensions:
          description: |
            Информация о весе и габаритах товара.
            Если товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.
          $ref: '#/components/schemas/GoodsStatsWeightDimensionsDTO'
        warehouses:
          description: |
            Информация о складах, на которых хранится товар.

            Параметр не приходит, если товара нет ни на одном складе.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/GoodsStatsWarehouseDTO'
        tariffs:
          description: |
            Информация о тарифах, по которым нужно заплатить за услуги Маркета.

            По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели :no-translate[FBS] стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки
            и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/TariffDTO'
        pictures:
          description: Ссылки (:no-translate[URL]) изображений товара в хорошем качестве.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
    GoodsStatsDTO:
      description: Отчет по товарам.
      type: object
      required:
        - shopSkus
      properties:
        shopSkus:
          description: Список товаров.
          type: array
          items:
            $ref: '#/components/schemas/GoodsStatsGoodsDTO'
    GetGoodsStatsResponse:
      description: Ответ на запрос отчета по товарам.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GoodsStatsDTO'
    ReportStatusType:
      description: |
        Статус генерации:

        * `PENDING` — ожидает генерации.
        * `PROCESSING` — генерируется.
        * `FAILED` — во время генерации произошла ошибка.
        * `DONE` — отчет или документ готов.
      type: string
      enum:
        - PENDING
        - PROCESSING
        - FAILED
        - DONE
    ReportSubStatusType:
      description: |
        Подстатус генерации:
        * `NO_DATA` — для такого отчета или документа нет данных.
        * `TOO_LARGE` — отчет или документ превысил допустимый размер — укажите меньший период времени или уточните условия запроса.
        * `RESOURCE_NOT_FOUND` — для такого отчета или документа не удалось найти часть сущностей.
      type: string
      enum:
        - NO_DATA
        - TOO_LARGE
        - RESOURCE_NOT_FOUND
    ReportInfoDTO:
      description: Статус генерации и ссылка на готовый отчет или документ.
      type: object
      required:
        - status
        - generationRequestedAt
      properties:
        status:
          $ref: '#/components/schemas/ReportStatusType'
        subStatus:
          $ref: '#/components/schemas/ReportSubStatusType'
        generationRequestedAt:
          description: Дата и время запроса на генерацию.
          type: string
          format: date-time
        generationFinishedAt:
          description: Дата и время завершения генерации.
          type: string
          format: date-time
        file:
          description: Ссылка на готовый отчет или документ.
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          type: integer
          format: int64
    GetReportInfoResponse:
      description: Ответ на запрос информации об отчете или документе.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ReportInfoDTO'
    ReportFormatType:
      description: |
        Формат отчета:

        * `FILE` — файл с электронной таблицей (:no-translate[XLSX]).
        * `CSV` — ZIP-архив с CSV-файлами на каждый лист отчета.
        * `JSON` — ZIP-архив с JSON-файлами на каждый лист отчета.
      type: string
      enum:
        - FILE
        - CSV
        - JSON
      default: FILE
    ReportLanguageType:
      description: |
        Язык отчета:

        * `RU` — русский язык.
        * `EN` — английский язык.
      type: string
      enum:
        - RU
        - EN
    Year:
      description: Год.
      type: integer
      format: int32
      example: 2025
    Month:
      description: Номер месяца.
      type: integer
      format: int32
      minimum: 1
      maximum: 12
      example: 12
    MonthOfYearDTO:
      description: Месяц, за который нужен отчет о баллах Маркета.
      type: object
      required:
        - year
        - month
      properties:
        year:
          $ref: '#/components/schemas/Year'
        month:
          $ref: '#/components/schemas/Month'
    GenerateUnitedNettingReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании, период, за который нужен отчет, а также фильтры.
      type: object
      required:
        - businessId
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateTimeFrom:
          description: Начало периода, включительно.
          format: date-time
          type: string
          deprecated: true
        dateTimeTo:
          description: Конец периода, включительно. Максимальный период — 3 месяца.
          format: date-time
          type: string
          deprecated: true
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно. Максимальный период — 3 месяца.
          format: date
          type: string
        bankOrderId:
          description: Номер платежного поручения.
          format: int64
          type: integer
        bankOrderDateTime:
          description: Дата платежного поручения.
          format: date-time
          type: string
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYearDTO'
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PlacementType'
        inns:
          description: Список ИНН, которые нужны в отчете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
    GenerateReportDTO:
      description: Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета или документа.
      type: object
      required:
        - reportId
        - estimatedGenerationTime
      properties:
        reportId:
          description: Идентификатор, который понадобится для отслеживания статуса генерации и получения готового отчета или документа.
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          type: integer
          format: int64
    GenerateReportResponse:
      description: Ответ на запрос генерации отчета или документа.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GenerateReportDTO'
    GenerateUnitedMarketplaceServicesReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании, период, за который нужен отчет, а также фильтры.
      type: object
      required:
        - businessId
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateTimeFrom:
          description: Начало периода, включительно.
          format: date-time
          type: string
          deprecated: true
        dateTimeTo:
          description: Конец периода, включительно. Максимальный период — 3 месяца.
          format: date-time
          type: string
          deprecated: true
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно. Максимальный период — 3 месяца.
          format: date
          type: string
        yearFrom:
          description: Начальный год формирования акта.
          $ref: '#/components/schemas/Year'
        monthFrom:
          description: Начальный номер месяца формирования акта.
          $ref: '#/components/schemas/Month'
        yearTo:
          description: Конечный год формирования акта.
          $ref: '#/components/schemas/Year'
        monthTo:
          description: Конечный номер месяца формирования акта.
          $ref: '#/components/schemas/Month'
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/PlacementType'
        inns:
          description: Список ИНН, которые нужны в отчете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
    GenerateUnitedOrdersRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно. Максимальный период — 1 год.
          format: date
          type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
        promoId:
          description: Идентификатор акции, товары из которой нужны в отчете.
          type: string
    GenerateUnitedReturnsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
        returnType:
          $ref: '#/components/schemas/ReturnType'
          nullable: true
        returnStatusTypes:
          description: |
            Статусы передачи возвратов, которые нужны в отчете.

            Если их не указать, вернется информация по всем возвратам.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ReturnShipmentStatusType'
    GenerateGoodsRealizationReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании и период, за который нужен отчет.
      type: object
      required:
        - campaignId
        - year
        - month
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        year:
          $ref: '#/components/schemas/Year'
        month:
          $ref: '#/components/schemas/Month'
    GeneratePricesReportRequest:
      description: Данные, необходимые для генерации отчета.
      type: object
      properties:
        businessId:
          description: |
            Идентификатор кабинета.

            В большинстве случаев обязателен. Не указывается, если задан `campaignId`.
          type: integer
          format: int64
        campaignId:
          description: |
            Идентификатор кампании.

            Передавайте, только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        categoryIds:
          description: Фильтр по категориям на Маркете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
        creationDateFrom:
          description: |
            Фильтр по времени появления предложения — начало периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          type: string
          format: date
        creationDateTo:
          description: |
            Фильтр по времени появления предложения — окончание периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          type: string
          format: date
    GenerateStocksOnWarehousesReportRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      properties:
        campaignId:
          description: "\n{% note warning \"Отчет об остатках на конкретном складе магазина скоро станет недоступен.\" %}\n\n\_\n\n{% endnote %}\n\nИдентификатор кампании.\n\nЕго можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:\n\n  * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.\n  * **Лог запросов** → выпадающий список в блоке **Показывать логи**.\n\n⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.\n\nНе передавайте вместе с `businessId`.\n"
          type: integer
          format: int64
        businessId:
          description: |
            Идентификатор кабинета, по магазинам которого нужно сформировать отчет (кроме :no-translate[FBY]-магазинов).

            Не передавайте вместе с `campaignId`.
          format: int64
          type: integer
        warehouseIds:
          description: Фильтр по идентификаторам складов (только модель :no-translate[FBY]). Чтобы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
        reportDate:
          description: Фильтр по дате (для модели :no-translate[FBY]). В отчет попадут данные за **предшествующий** дате день.
          type: string
          format: date
        categoryIds:
          description: Фильтр по категориям на Маркете (кроме модели :no-translate[FBY]).
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
        hasStocks:
          description: Фильтр по наличию остатков (кроме модели :no-translate[FBY]).
          type: boolean
        campaignIds:
          description: |
            Фильтр по магазинам для отчета по кабинету (кроме модели :no-translate[FBY]).

            Передавайте вместе с `businessId`.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            description: |
              Список кампании тех магазинов, для которых необходимо получить информацию.

              Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

                * **Модули и API** → блок **Передача данных Маркету**.
                * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

              ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
            type: integer
            format: int64
    GenerateGoodsMovementReportRequest:
      description: Данные, необходимые для генерации отчета.
      type: object
      required:
        - campaignId
        - dateFrom
        - dateTo
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
          minimum: 1
        dateFrom:
          description: |
            Начало периода, включительно. Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
          example: '2022-09-22'
        dateTo:
          description: |
            Конец периода, включительно. Формат даты: `ГГГГ-ММ-ДД`.
          type: string
          format: date
          example: '2022-09-23'
        shopSku:
          $ref: '#/components/schemas/ShopSku'
    ShowsSalesGroupingType:
      type: string
      description: |
        Группировка данных отчета.
        Возможные значения:
        * `CATEGORIES` — группировка по категориям.
        * `OFFERS` — группировка по товарам.
      enum:
        - CATEGORIES
        - OFFERS
    GenerateShowsSalesReportRequest:
      description: Данные, необходимые для генерации отчета.
      type: object
      required:
        - dateFrom
        - dateTo
        - grouping
      properties:
        businessId:
          description: |
            Идентификатор кабинета.

            Указывается, если нужно составить отчет по всем магазинам в кабинете. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.
          type: integer
          format: int64
        campaignId:
          description: |
            Идентификатор кампании.

            Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        dateFrom:
          description: Начало периода, включительно.
          type: string
          format: date
        dateTo:
          description: Конец периода, включительно.
          type: string
          format: date
        grouping:
          description: Группировка данных отчета.
          $ref: '#/components/schemas/ShowsSalesGroupingType'
    GenerateCompetitorsPositionReportRequest:
      description: Данные, необходимые для генерации отчета.
      type: object
      required:
        - dateFrom
        - dateTo
        - businessId
        - categoryId
      properties:
        businessId:
          description: Идентификатор кабинета.
          type: integer
          format: int64
        categoryId:
          description: Идентификатор категории.
          type: integer
          format: int64
        dateFrom:
          description: Начало периода, включительно.
          type: string
          format: date
        dateTo:
          description: Конец периода, включительно.
          type: string
          format: date
    GenerateGoodsTurnoverRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - campaignId
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        date:
          description: Дата, за которую нужно рассчитать оборачиваемость. Если параметр не указан, используется текущая дата.
          type: string
          format: date
    GenerateBoostConsolidatedRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
    GenerateShipmentListDocumentReportRequest:
      description: |
        Данные, необходимые для генерации документа.
      type: object
      required:
        - campaignId
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        shipmentId:
          description: |
            Идентификатор отгрузки.

            В запросе обязательно передавайте `shipmentId` или `orderIds`.
          format: int64
          type: integer
        orderIds:
          description: |
            Фильтр по идентификаторам заказа в отгрузке.

            В запросе обязательно передавайте `shipmentId` или `orderIds`.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
    StatisticsAttributionType:
      type: string
      description: |
        Тип атрибуции:
          * `CLICKS` — по кликам.
          * `SHOWS` — по показам.
        <br><br>

        О том, какие данные в отчете зависят и не зависят от типа атрибуции, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf#stats).
      enum:
        - CLICKS
        - SHOWS
    GenerateShelfsStatisticsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - attributionType
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
        attributionType:
          description: Тип атрибуции.
          $ref: '#/components/schemas/StatisticsAttributionType'
    LabelsSortingType:
      description: |
        Тип сортировки ярлыков:

        * `SORT_BY_GIVEN_ORDER` — ярлыки заказов будут расположены в том же порядке, в каком были переданы идентификаторы заказов в запросе.
        * `SORT_BY_ORDER_CREATED_AT` — ярлыки будут расположены в соответствии с датой создания заказа с группировкой по магазинам.

        Если параметр не указан, ярлыки сортируются по дате создания.
      type: string
      enum:
        - SORT_BY_GIVEN_ORDER
        - SORT_BY_ORDER_CREATED_AT
    GenerateMassOrderLabelsRequest:
      description: |
        Данные, необходимые для генерации файла.
      type: object
      required:
        - businessId
        - orderIds
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        orderIds:
          description: Список идентификаторов заказов.
          type: array
          minItems: 1
          maxItems: 1000
          uniqueItems: true
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
        sortingType:
          description: Тип сортировки ярлыков в файле.
          $ref: '#/components/schemas/LabelsSortingType'
    GenerateGoodsFeedbackRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
    GenerateShowsBoostRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
        - attributionType
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
        attributionType:
          description: Тип атрибуции.
          $ref: '#/components/schemas/StatisticsAttributionType'
    GenerateBannersStatisticsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
    ClosureDocumentsMonthOfYearDTO:
      description: |
        Месяц и год.
      type: object
      required:
        - year
        - month
      properties:
        year:
          description: Год.
          type: integer
          format: int32
          example: 2025
        month:
          $ref: '#/components/schemas/Month'
    ClosureDocumentsContractType:
      description: |
        Тип договора:

        * `INCOME` — договор на размещение.

        * `OUTCOME` — договор на продвижение.

        * `MARKETING` — договор на маркетинг.
      type: string
      enum:
        - INCOME
        - OUTCOME
        - MARKETING
    GenerateClosureDocumentsRequest:
      description: |
        Данные, необходимые для запроса закрывающих документов.
      type: object
      required:
        - campaignId
        - monthOfYear
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        monthOfYear:
          description: Месяц, за который нужны закрывающие документы.
          $ref: '#/components/schemas/ClosureDocumentsMonthOfYearDTO'
        contractTypes:
          description: |
            Типы договоров, по которым нужны закрывающие документы.

            Если их не указать, вернется архив с документами по всем найденным договорам.
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 3
          nullable: true
          items:
            $ref: '#/components/schemas/ClosureDocumentsContractType'
    GenerateJewelryFiscalReportRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - campaignId
        - dateFrom
        - dateTo
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
    GenerateSalesGeographyRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - businessId
        - dateFrom
        - dateTo
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: Начало периода, включительно.
          format: date
          type: string
        dateTo:
          description: Конец периода, включительно.
          format: date
          type: string
        categoryIds:
          description: Идентификаторы категорий.
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 1000
          nullable: true
          items:
            type: integer
            format: int64
        offerIds:
          description: Идентификаторы товаров.
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 1000
          nullable: true
          items:
            $ref: '#/components/schemas/ShopSku'
    KeyIndicatorsReportDetalizationLevelType:
      description: |
        За какой период нужна детализация:

        * `WEEK` — по неделям.

        * `MONTH` — по месяцам.
      type: string
      enum:
        - WEEK
        - MONTH
    GenerateKeyIndicatorsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - detalizationLevel
      properties:
        businessId:
          description: |
            Идентификатор кабинета.

            Указывается, если нужно составить отчет по всем магазинам в кабинете. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.
          format: int64
          type: integer
        campaignId:
          description: |
            Идентификатор кампании.

            Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        detalizationLevel:
          description: За какой период нужна детализация.
          $ref: '#/components/schemas/KeyIndicatorsReportDetalizationLevelType'
    GenerateClosureDocumentsDetalizationRequest:
      description: |
        Данные, необходимые для генерации отчета.
      type: object
      required:
        - campaignId
        - monthOfYear
        - contractType
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        monthOfYear:
          description: Месяц, за который сформированы необходимые закрывающие документы.
          $ref: '#/components/schemas/ClosureDocumentsMonthOfYearDTO'
        contractType:
          description: Тип договора, по которому нужно сгенерировать отчет по схождению с закрывающими документами.
          $ref: '#/components/schemas/ClosureDocumentsContractType'
    OutletType:
      description: |
        Тип точки продаж.

        Возможные значения:

        * `DEPOT` — пункт выдачи заказов.
        * `MIXED` — смешанный тип точки продаж (торговый зал и пункт выдачи заказов).
        * `RETAIL` — розничная точка продаж (торговый зал).
        * `NOT_DEFINED` — неизвестный тип точки продажи. При определении типа произошла ошибка.
      type: string
      enum:
        - DEPOT
        - MIXED
        - RETAIL
        - NOT_DEFINED
    OutletVisibilityType:
      description: |
        Состояние точки продаж.

        Возможные значения:

        * `HIDDEN` — точка продаж выключена.
        * `VISIBLE` — точка продаж включена.
        * `UNKNOWN` — неизвестное состояние точки продажи. При определении состояния произошла ошибка.
      type: string
      enum:
        - HIDDEN
        - VISIBLE
        - UNKNOWN
    OutletAddressDTO:
      description: |
        Адрес точки продаж.
      type: object
      required:
        - regionId
      properties:
        regionId:
          description: |
            Идентификатор региона.

            Идентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).

            {% note alert "Типы регионов при создании и редактировании точек продаж" %}

            Указывайте только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах `type` запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).

            {% endnote %}
          type: integer
          format: int64
        street:
          description: Улица.
          type: string
          maxLength: 512
        number:
          description: Номер дома.
          type: string
          maxLength: 256
        building:
          description: Номер строения.
          type: string
          maxLength: 16
        estate:
          description: Номер владения.
          type: string
          maxLength: 16
        block:
          description: Номер корпуса.
          type: string
          maxLength: 16
        additional:
          description: Дополнительная информация.
          type: string
        km:
          description: Порядковый номер километра дороги, на котором располагается точка продаж, если отсутствует улица.
          type: integer
          format: int32
        city:
          description: "{% note warning \"В ответах города и населенные пункты возвращаются в параметре `regionId`.\" %}\n\n\_\n\n{% endnote %}\n"
          maxLength: 200
          type: string
          deprecated: true
    OutletWorkingScheduleItemDTO:
      description: Расписание работы точки продаж.
      type: object
      required:
        - startDay
        - endDay
        - startTime
        - endTime
      properties:
        startDay:
          description: |
            Точка продаж работает с указанного дня недели.

            Возможные значения:

            * `MONDAY` — понедельник.
            * `TUESDAY` — вторник.
            * `WEDNESDAY` — среда.
            * `THURSDAY` — четверг.
            * `FRIDAY` — пятница.
            * `SATURDAY` — суббота.
            * `SUNDAY` — воскресенье.
          $ref: '#/components/schemas/DayOfWeekType'
        endDay:
          description: |
            Точка продаж работает до указанного дня недели.

            Возможные значения:

            * `MONDAY` — понедельник.
            * `TUESDAY` — вторник.
            * `WEDNESDAY` — среда.
            * `THURSDAY` — четверг.
            * `FRIDAY` — пятница.
            * `SATURDAY` — суббота.
            * `SUNDAY` — воскресенье.
          $ref: '#/components/schemas/DayOfWeekType'
        startTime:
          description: |
            Точка продаж работает c указанного часа.

            Формат: `ЧЧ:ММ`.
          type: string
          pattern: ^([0-1][0-9]|2[0-3]):[0-5][0-9]$
          example: '09:59'
        endTime:
          description: |
            Точка продаж работает до указанного часа.

            Формат: `ЧЧ:ММ`.
          type: string
          pattern: ^([0-1][0-9]|2[0-3]):[0-5][0-9]$
          example: '23:59'
    OutletWorkingScheduleDTO:
      description: |
        Список режимов работы точки продаж.
      type: object
      required:
        - scheduleItems
      properties:
        workInHoliday:
          description: |
            Признак, работает ли точка продаж в дни государственных праздников.

            Возможные значения:

            * `false` — точка продаж не работает в дни государственных праздников.
            * `true` — точка продаж работает в дни государственных праздников.
          type: boolean
        scheduleItems:
          description: |
            Список расписаний работы точки продаж.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OutletWorkingScheduleItemDTO'
    OutletDeliveryRuleDTO:
      description: Информация об условиях доставки для данной точки продаж.
      type: object
      properties:
        minDeliveryDays:
          description: |
            Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.

            Минимальное значение: `0` — доставка в день заказа.

            Максимальное значение: `60`.

            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.

            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.

            Для доставки в другие регионы:

            * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.

            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.

            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          type: integer
          format: int32
          minimum: 0
          maximum: 60
        maxDeliveryDays:
          description: |
            Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.

            Минимальное значение: `0` — доставка в день заказа.

            Максимальное значение: `60`.

            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.

            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.

            Для доставки в другие регионы:

            * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.

            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.

            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          type: integer
          format: int32
          minimum: 0
          maximum: 60
        deliveryServiceId:
          description: |
            Идентификатор службы доставки товаров в точку продаж.

            Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
          type: integer
          format: int64
        orderBefore:
          description: |
            Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.

            Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.

            Значение по умолчанию: `24`.
          type: integer
          format: int32
          minimum: 0
          maximum: 24
        priceFreePickup:
          description: Цена на товар, начиная с которой действует бесплатный самовывоз товара из точки продаж.
          type: number
        unspecifiedDeliveryInterval:
          description: |
            Признак доставки товаров в точку продаж на заказ.

            Признак выставлен, если:

            * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт);
            * все товары изготавливаются или поставляются на заказ.

            Возможные значения:
            * `true` — товары доставляются в точку продаж на заказ.

            Параметр указывается только со значением `true`.

            Взаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`.
          type: boolean
    OutletDTO:
      description: Информация о точке продаж.
      type: object
      required:
        - name
        - type
        - address
        - phones
        - workingSchedule
      properties:
        name:
          description: |
            Название точки продаж.
          type: string
        type:
          $ref: '#/components/schemas/OutletType'
        coords:
          description: |
            Координаты точки продаж.

            Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.

            Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.
          type: string
        isMain:
          description: |
            Признак основной точки продаж.

            Возможные значения:

            * `false` — неосновная точка продаж.
            * `true` — основная точка продаж.
          type: boolean
        shopOutletCode:
          description: Идентификатор точки продаж, присвоенный магазином.
          type: string
        visibility:
          $ref: '#/components/schemas/OutletVisibilityType'
        address:
          $ref: '#/components/schemas/OutletAddressDTO'
        phones:
          description: |
            Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.
          type: array
          minItems: 1
          uniqueItems: true
          items:
            type: string
            minLength: 1
        workingSchedule:
          $ref: '#/components/schemas/OutletWorkingScheduleDTO'
        deliveryRules:
          description: |
            Информация об условиях доставки для данной точки продаж.

            Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OutletDeliveryRuleDTO'
        storagePeriod:
          description: Срок хранения заказа в собственном пункте выдачи заказов. Считается в днях.
          type: integer
          format: int64
    OutletStatusType:
      description: |
        Статус точки продаж.

        Возможные значения:

        * `AT_MODERATION` — проверяется.
        * `FAILED` — не прошла проверку и отклонена модератором.
        * `MODERATED` — проверена и одобрена.
        * `NONMODERATED` — новая точка, нуждается в проверке.
        * `UNKNOWN` — статус не указан. При определении статуса произошла ошибка.
      type: string
      enum:
        - AT_MODERATION
        - FAILED
        - MODERATED
        - NONMODERATED
        - UNKNOWN
    FullOutletDTO:
      type: object
      description: Информация о точке продаж.
      required:
        - id
      allOf:
        - $ref: '#/components/schemas/OutletDTO'
        - properties:
            id:
              description: Идентификатор точки продаж, присвоенный Маркетом.
              type: integer
              format: int64
            status:
              $ref: '#/components/schemas/OutletStatusType'
            region:
              $ref: '#/components/schemas/RegionDTO'
            shopOutletId:
              description: "{% note warning \"Вместо него используйте `shopOutletCode`.\" %}\n\n\_\n\n{% endnote %}\n\nИдентификатор точки продаж, заданный магазином.\n"
              type: string
              deprecated: true
            workingTime:
              description: "{% note warning \"Вместо него используйте `workingSchedule`.\" %}\n\n\_\n\n{% endnote %}\n\nРабочее время.\n"
              type: string
              deprecated: true
            moderationReason:
              description: Статус модерации.
              type: string
    GetOutletsResponse:
      description: Ответ на запрос информации о точках продаж.
      type: object
      required:
        - outlets
      properties:
        outlets:
          description: Информация о точках продаж.
          type: array
          items:
            $ref: '#/components/schemas/FullOutletDTO'
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
    ChangeOutletRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/OutletDTO'
    OutletResponseDTO:
      description: |
        Результат выполнения запроса.
        Выводится, если `status="OK"`.
      type: object
      properties:
        id:
          description: Идентификатор точки продаж, присвоенный Маркетом.
          type: integer
          format: int64
    CreateOutletResponse:
      description: Ответ на запрос о создании точки продаж.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OutletResponseDTO'
    GetOutletResponse:
      description: Ответ на запрос информации о точке продаж.
      type: object
      properties:
        outlet:
          $ref: '#/components/schemas/FullOutletDTO'
    LicenseType:
      description: |
        Тип лицензии:

        * `ALCOHOL` — лицензия на розничную продажу алкогольной продукции.
        * `UNKNOWN` — неизвестный тип лицензии.
      type: string
      enum:
        - ALCOHOL
        - UNKNOWN
    OutletLicenseDTO:
      description: Информация о лицензии.
      type: object
      required:
        - outletId
        - licenseType
        - number
        - dateOfIssue
        - dateOfExpiry
      properties:
        id:
          description: |
            Идентификатор лицензии.

            Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.

            Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.
          type: integer
          format: int64
        outletId:
          description: Идентификатор точки продаж, для которой действительна лицензия.
          type: integer
          format: int64
          minimum: 1
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        number:
          description: Номер лицензии.
          type: string
        dateOfIssue:
          description: |
            Дата выдачи лицензии.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.

            Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.
          type: string
          format: date-time
          example: '2017-11-13T00:00:00+03:00'
        dateOfExpiry:
          description: |
            Дата окончания действия лицензии.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC]. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.

            Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.
          type: string
          format: date-time
          example: '2022-11-20T00:00:00+03:00'
    LicenseCheckStatusType:
      description: |
        Статус проверки лицензии:

        * `NEW` — лицензия проверяется.
        * `SUCCESS` — лицензия прошла проверку.
        * `FAIL` — лицензия не прошла проверку.
        * `REVOKE` — лицензия отозвана службой качества.
        * `DONT_WANT` — не проверяется.
        * `FAIL_MANUAL` — лицензия не прошла проверку службы качества.
      type: string
      enum:
        - NEW
        - SUCCESS
        - FAIL
        - REVOKE
        - DONT_WANT
        - FAIL_MANUAL
    FullOutletLicenseDTO:
      description: Информация о лицензии.
      type: object
      allOf:
        - $ref: '#/components/schemas/OutletLicenseDTO'
        - properties:
            checkStatus:
              $ref: '#/components/schemas/LicenseCheckStatusType'
            checkComment:
              description: |
                Причина, по которой лицензия не прошла проверку.

                Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`.
              type: string
    OutletLicensesResponseDTO:
      description: Ответ на запрос информации о лицензиях для точек продаж.
      type: object
      required:
        - licenses
      properties:
        licenses:
          description: Список лицензий.
          type: array
          items:
            $ref: '#/components/schemas/FullOutletLicenseDTO'
    GetOutletLicensesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OutletLicensesResponseDTO'
    UpdateOutletLicenseRequest:
      description: Запрос на создание или изменение лицензий для точек продаж.
      type: object
      required:
        - licenses
      properties:
        licenses:
          description: |
            Список лицензий.
            Обязательный параметр, должен содержать информацию хотя бы об одной лицензии.
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OutletLicenseDTO'
    GoodsFeedbackId:
      description: |
        Идентификатор отзыва.
      type: integer
      format: int64
    FeedbackReactionStatusType:
      description: |
        Статус реакции на отзыв:

        * `ALL` — все отзывы.

        * `NEED_REACTION` — отзывы, на которые нужно ответить.
      type: string
      enum:
        - ALL
        - NEED_REACTION
    GetGoodsFeedbackRequest:
      description: |
        Фильтр запроса отзывов в кабинете.
      type: object
      properties:
        feedbackIds:
          description: |
            Идентификаторы отзывов.

            ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
          type: array
          nullable: true
          uniqueItems: true
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/GoodsFeedbackId'
        dateTimeFrom:
          description: |
            Начало периода. Не включительно.

            Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты.
          type: string
          format: date-time
        dateTimeTo:
          description: |
            Конец периода. Не включительно.

            Если параметр не указан, используется текущая дата.
          type: string
          format: date-time
        reactionStatus:
          description: |
            Нужно ли вернуть только непрочитанные отзывы. Для этого передайте значение `NEED_REACTION`.

            По умолчанию возвращаются все отзывы.
          $ref: '#/components/schemas/FeedbackReactionStatusType'
        ratingValues:
          description: Оценка товара.
          type: array
          uniqueItems: true
          maxItems: 5
          nullable: true
          minItems: 1
          items:
            type: integer
            format: int32
        modelIds:
          description: |
            Фильтр по идентификатору модели товара.

            Получить идентификатор модели можно с помощью одного из запросов:

            * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);

            * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md).
          deprecated: true
          type: array
          uniqueItems: true
          maxItems: 20
          nullable: true
          minItems: 1
          items:
            type: integer
            format: int64
        paid:
          description: Фильтр отзывов за баллы Плюса.
          type: boolean
    GoodsFeedbackIdentifiersDTO:
      description: Идентификаторы, которые связаны с отзывом.
      type: object
      properties:
        orderId:
          description: Идентификатор заказа на Маркете.
          type: integer
          format: int64
        modelId:
          description: Идентификатор модели товара.
          deprecated: true
          type: integer
          format: int64
    GoodsFeedbackDescriptionDTO:
      description: Текстовая часть отзыва.
      type: object
      properties:
        advantages:
          description: Описание плюсов товара в отзыве.
          type: string
        disadvantages:
          description: Описание минусов товара в отзыве.
          type: string
        comment:
          description: Комментарий в отзыве.
          type: string
    GoodsFeedbackMediaDTO:
      description: Фото и видео.
      type: object
      properties:
        photos:
          description: Ссылки на фото.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
        videos:
          description: Ссылки на видео.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: string
    GoodsFeedbackStatisticsDTO:
      description: Статистическая информация по отзыву.
      type: object
      required:
        - rating
        - commentsCount
      properties:
        rating:
          description: Оценка товара.
          type: integer
          format: int32
          minimum: 1
          maximum: 5
        commentsCount:
          description: |
            Количество комментариев к отзыву.

            Учитываются только ответы на отзывы, а не дочерние комментарии.
          type: integer
          format: int64
        recommended:
          description: Рекомендуют ли этот товар.
          type: boolean
        paidAmount:
          description: Количество баллов Плюса, которое автор получил за отзыв.
          type: integer
          format: int64
    GoodsFeedbackDTO:
      description: Отзыв о товаре.
      type: object
      required:
        - identifiers
        - statistics
        - feedbackId
        - needReaction
        - createdAt
      properties:
        feedbackId:
          $ref: '#/components/schemas/GoodsFeedbackId'
        createdAt:
          description: Дата и время создания отзыва.
          type: string
          format: date-time
        needReaction:
          description: |
            Прочитан ли отзыв.

            Принимает значение `false`, если магазин:

            * Прочитал отзыв в кабинете продавца на Маркете.
            * Отметил отзыв прочитанным — метод [POST businesses/{businessId}/goods-feedback/skip-reaction](../../reference/goods-feedback/skipGoodsFeedbacksReaction.md).
            * Оставил комментарий к отзыву — метод [POST businesses/{businessId}/goods-feedback/comments/update](../../reference/goods-feedback/updateGoodsFeedbackComment.md).
          type: boolean
        identifiers:
          $ref: '#/components/schemas/GoodsFeedbackIdentifiersDTO'
        author:
          description: Имя автора отзыва.
          type: string
        description:
          $ref: '#/components/schemas/GoodsFeedbackDescriptionDTO'
        media:
          $ref: '#/components/schemas/GoodsFeedbackMediaDTO'
        statistics:
          $ref: '#/components/schemas/GoodsFeedbackStatisticsDTO'
    GoodsFeedbackListDTO:
      description: |
        Список отзывов о товарах.
      type: object
      required:
        - feedbacks
      properties:
        feedbacks:
          description: Список отзывов.
          type: array
          items:
            $ref: '#/components/schemas/GoodsFeedbackDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetGoodsFeedbackResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GoodsFeedbackListDTO'
    SkipGoodsFeedbackReactionRequest:
      description: Идентификаторы отзывов.
      type: object
      required:
        - feedbackIds
      properties:
        feedbackIds:
          description: Список идентификаторов отзывов, на которые магазин не будет отвечать.
          type: array
          minItems: 1
          maxItems: 50
          uniqueItems: true
          items:
            $ref: '#/components/schemas/GoodsFeedbackId'
    GoodsFeedbackCommentId:
      description: |
        Идентификатор комментария к отзыву.
      type: integer
      format: int64
    GoodsFeedbackCommentText:
      description: Текст комментария.
      type: string
      minLength: 1
      maxLength: 4096
    UpdateGoodsFeedbackCommentDTO:
      description: Комментарий к отзыву или другому комментарию.
      type: object
      required:
        - text
      properties:
        id:
          description: |
            Идентификатор комментария, который нужно изменить.

            Оставьте поле пустым, если хотите добавить новый комментарий.
          $ref: '#/components/schemas/GoodsFeedbackCommentId'
        parentId:
          description: Идентификатор родительского комментария, на который нужно ответить.
          $ref: '#/components/schemas/GoodsFeedbackCommentId'
        text:
          $ref: '#/components/schemas/GoodsFeedbackCommentText'
    UpdateGoodsFeedbackCommentRequest:
      description: Комментарий к отзыву.
      type: object
      required:
        - feedbackId
        - comment
      properties:
        feedbackId:
          $ref: '#/components/schemas/GoodsFeedbackId'
        comment:
          description: Параметры комментария.
          $ref: '#/components/schemas/UpdateGoodsFeedbackCommentDTO'
    GoodsFeedbackCommentAuthorType:
      description: |
        Тип автора:

        * `USER` — пользователь.
        * `BUSINESS` — кабинет.
      type: string
      enum:
        - USER
        - BUSINESS
    GoodsFeedbackCommentAuthorDTO:
      description: Информация об авторе комментария.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/GoodsFeedbackCommentAuthorType'
        name:
          description: Имя автора или название кабинета.
          type: string
    GoodsFeedbackCommentStatusType:
      description: |
        Статус комментария:

        * `PUBLISHED` — опубликован.
        * `UNMODERATED` — не проверен.
        * `BANNED` — заблокирован.
        * `DELETED` — удален.
      type: string
      enum:
        - PUBLISHED
        - UNMODERATED
        - BANNED
        - DELETED
    GoodsFeedbackCommentDTO:
      description: Комментарий к отзыву.
      type: object
      required:
        - id
        - text
        - status
        - feedbackId
      properties:
        id:
          $ref: '#/components/schemas/GoodsFeedbackCommentId'
        text:
          $ref: '#/components/schemas/GoodsFeedbackCommentText'
        canModify:
          description: Может ли продавец изменять комментарий или удалять его.
          type: boolean
        parentId:
          description: Идентификатор родительского комментария.
          $ref: '#/components/schemas/GoodsFeedbackCommentId'
        author:
          $ref: '#/components/schemas/GoodsFeedbackCommentAuthorDTO'
        status:
          $ref: '#/components/schemas/GoodsFeedbackCommentStatusType'
        feedbackId:
          $ref: '#/components/schemas/GoodsFeedbackId'
    UpdateGoodsFeedbackCommentResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GoodsFeedbackCommentDTO'
    DeleteGoodsFeedbackCommentRequest:
      description: |
        Фильтр запроса отзывов по бизнесу.
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/GoodsFeedbackCommentId'
    GetGoodsFeedbackCommentsRequest:
      description: |
        Фильтр запроса комментариев отзыва.
      type: object
      properties:
        feedbackId:
          $ref: '#/components/schemas/GoodsFeedbackId'
        commentIds:
          description: |
            Идентификаторы комментариев.

            ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
          type: array
          nullable: true
          uniqueItems: true
          minItems: 1
          maxItems: 50
          items:
            $ref: '#/components/schemas/GoodsFeedbackCommentId'
    GoodsFeedbackCommentListDTO:
      description: Комментарии к отзыву.
      type: object
      required:
        - comments
      properties:
        comments:
          description: Список комментариев.
          type: array
          items:
            $ref: '#/components/schemas/GoodsFeedbackCommentDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetGoodsFeedbackCommentsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GoodsFeedbackCommentListDTO'
    GetCampaignOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра `offerIds` с другими фильтрациями приведет к ошибке.
      type: object
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна.\n\n{% note warning \"Такой список возвращается только целиком\" %}\n\nНе используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.\n\nЕсли вы запрашиваете информацию по конкретным :no-translate[SKU], не заполняйте:\n\n* `page_token`\n* `limit`\n\n{% endnote %}\n\n\_\n"
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          maxItems: 200
          uniqueItems: true
        statuses:
          description: |
            Фильтр по статусам товаров.
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/OfferCampaignStatusType'
          minItems: 1
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          type: array
          nullable: true
          items:
            type: integer
          minItems: 1
          uniqueItems: true
        vendorNames:
          description: Фильтр по брендам.
          type: array
          nullable: true
          items:
            type: string
          minItems: 1
          uniqueItems: true
        tags:
          description: Фильтр по тегам.
          type: array
          nullable: true
          items:
            type: string
          minItems: 1
          uniqueItems: true
    QuantumDTO:
      deprecated: true
      description: |
        Настройка продажи квантами.

        Чтобы сбросить установленные ранее значения, передайте пустой параметр `quantum`.

        {% cut "Пример" %}

        ```json translate=no
        {
          "offers": [
            {
              "offerId": "08e35dc1-89a2-11e3-8055-0015e9b8c48d",
              "quantum": {}
            }
          ]
        }
        ```

        {% endcut %}
      type: object
      properties:
        minQuantity:
          description: |
            Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.

            ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.
          type: integer
          format: int32
          minimum: 1
        stepQuantity:
          description: |
            На сколько единиц покупатель сможет увеличить количество товара в корзине.

            Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.

            ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.
          type: integer
          format: int32
          minimum: 1
          maximum: 100
    BaseCampaignOfferDTO:
      description: Информация о новой цене на товар.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        quantum:
          description: Настройка продажи квантами. [Что это значит?](https://yandex.ru/support/marketplace/assortment/fields/quantum.html)
          $ref: '#/components/schemas/QuantumDTO'
        available:
          description: |
            {% note warning "Вместо него используйте методы скрытия товаров с витрины" %}

            * [GET campaigns/{campaignId}/hidden-offers](../../reference/assortment/getHiddenOffers.md) — просмотр скрытых товаров;
            * [POST campaigns/{campaignId}/hidden-offers](../../reference/assortment/addHiddenOffers.md) — скрытие товаров;
            * [POST campaigns/{campaignId}/hidden-offers/delete](../../reference/assortment/deleteHiddenOffers.md) — возобновление показа.

            {% endnote %}

            Есть ли товар в продаже.
          deprecated: true
          type: boolean
    GetPriceWithVatDTO:
      description: Цена с указанием НДС и времени последнего обновления.
      type: object
      allOf:
        - $ref: '#/components/schemas/PriceDTO'
        - $ref: '#/components/schemas/UpdateTimeDTO'
    OfferErrorDTO:
      description: Сообщение об ошибке, связанной с размещением товара.
      type: object
      properties:
        message:
          description: Тип ошибки.
          type: string
        comment:
          description: Пояснение.
          type: string
    GetCampaignOfferDTO:
      description: Параметры размещения товара в магазине.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseCampaignOfferDTO'
        - properties:
            basicPrice:
              description: Цена на товар для всех магазинов.
              $ref: '#/components/schemas/GetPriceWithDiscountDTO'
            campaignPrice:
              description: Цена, установленная в отдельном магазине.
              $ref: '#/components/schemas/GetPriceWithVatDTO'
            status:
              description: |
                Статус товара.
              $ref: '#/components/schemas/OfferCampaignStatusType'
            errors:
              description: |
                Ошибки, препятствующие размещению товара на витрине.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/OfferErrorDTO'
            warnings:
              description: |
                Предупреждения, не препятствующие размещению товара на витрине.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/OfferErrorDTO'
    GetCampaignOffersResultDTO:
      description: Список товаров в заданном магазине.
      type: object
      required:
        - offers
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров.
          type: array
          items:
            $ref: '#/components/schemas/GetCampaignOfferDTO'
    GetCampaignOffersResponse:
      description: Ответ на запрос списка товаров в магазине.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetCampaignOffersResultDTO'
    UpdateCampaignOfferDTO:
      description: Параметры размещения товара в магазине.
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseCampaignOfferDTO'
        - properties:
            vat:
              $ref: '#/components/schemas/VatType'
    UpdateCampaignOffersRequest:
      description: Запрос на обновление предложений товаров магазина.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Параметры размещения товаров в заданном магазине.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/UpdateCampaignOfferDTO'
    DeleteCampaignOffersRequest:
      description: |
        Фильтрации удаляемых товаров по `offerIds`.
      type: object
      required:
        - offerIds
      properties:
        offerIds:
          description: Идентификаторы товаров в каталоге.
          type: array
          minItems: 1
          maxItems: 500
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteCampaignOffersDTO:
      description: Список товаров, которые не удалось удалить, потому что они не найдены или хранятся на складе Маркета.
      type: object
      properties:
        notDeletedOfferIds:
          description: Список SKU.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    DeleteCampaignOffersResponse:
      description: Результат удаления товаров.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/DeleteCampaignOffersDTO'
    PriceCompetitivenessType:
      description: |
        Привлекательность цены:

        * `OPTIMAL` — привлекательная.
        * `AVERAGE` — умеренная.
        * `LOW` — непривлекательная.
      type: string
      enum:
        - OPTIMAL
        - AVERAGE
        - LOW
    GetOfferRecommendationsRequest:
      type: object
      properties:
        offerIds:
          description: Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
        competitivenessFilter:
          description: Фильтр, выводящий товары, с привлекательными, умеренными и непривлекательными ценами.
          $ref: '#/components/schemas/PriceCompetitivenessType'
    OfferForRecommendationDTO:
      description: Информация о состоянии цены на товар.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        price:
          description: Цена на товар в каталоге.
          $ref: '#/components/schemas/BasePriceDTO'
        competitiveness:
          description: Привлекательность цены на товар.
          $ref: '#/components/schemas/PriceCompetitivenessType'
        shows:
          description: Количество показов карточки товара за последние 7 дней.
          type: integer
          format: int64
    PriceCompetitivenessThresholdsDTO:
      description: Максимальные значения цены, при которых она является привлекательной или умеренной.
      type: object
      properties:
        optimalPrice:
          description: Максимальная привлекательная цена.
          $ref: '#/components/schemas/BasePriceDTO'
        averagePrice:
          description: Максимальная умеренная цена.
          $ref: '#/components/schemas/BasePriceDTO'
    OfferRecommendationInfoDTO:
      description: Рекомендации, касающиеся цены на товар.
      type: object
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        competitivenessThresholds:
          description: Максимальные значения цены, при которых она является привлекательной или умеренной.
          $ref: '#/components/schemas/PriceCompetitivenessThresholdsDTO'
    OfferRecommendationDTO:
      description: |
        Информация о состоянии цен и рекомендации.
      type: object
      properties:
        offer:
          description: Информация о состоянии цен.
          $ref: '#/components/schemas/OfferForRecommendationDTO'
        recommendation:
          description: Рекомендации.
          $ref: '#/components/schemas/OfferRecommendationInfoDTO'
    OfferRecommendationsResultDTO:
      description: Список товаров с рекомендациями.
      type: object
      required:
        - offerRecommendations
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerRecommendations:
          description: Страница списка товаров.
          type: array
          items:
            $ref: '#/components/schemas/OfferRecommendationDTO'
    GetOfferRecommendationsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferRecommendationsResultDTO'
    ModelPriceDTO:
      description: Информация о ценах на модель товара.
      type: object
      properties:
        avg:
          description: Средняя цена предложения для модели в регионе.
          type: number
        max:
          description: Максимальная цена предложения для модели в регионе.
          type: number
        min:
          description: Минимальная цена предложения для модели в регионе.
          type: number
    ModelDTO:
      description: Модель товара.
      type: object
      properties:
        id:
          description: Идентификатор модели товара.
          type: integer
          format: int64
        name:
          description: Название модели товара.
          type: string
        prices:
          $ref: '#/components/schemas/ModelPriceDTO'
    ModelsDTO:
      description: Список моделей товаров.
      type: object
      required:
        - models
      properties:
        models:
          description: Список моделей товаров.
          type: array
          items:
            $ref: '#/components/schemas/ModelDTO'
    RegionalModelInfoDTO:
      description: Региональная информация.
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyType'
        regionId:
          description: |
            Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).

            Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).
          type: integer
          format: int64
    GetModelsResponse:
      description: Ответ на запрос информации о моделях.
      type: object
      allOf:
        - $ref: '#/components/schemas/ModelsDTO'
        - $ref: '#/components/schemas/RegionalModelInfoDTO'
    SearchModelsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/GetModelsResponse'
        - properties:
            pager:
              $ref: '#/components/schemas/FlippingPagerDTO'
    GetModelsRequest:
      description: Запрос информации о моделях.
      type: object
      required:
        - models
      properties:
        models:
          description: Список моделей.
          type: array
          uniqueItems: true
          items:
            description: Идентификатор модели.
            type: integer
            format: int64
            minimum: 0
            exclusiveMinimum: true
          minItems: 1
    SortOrderType:
      type: string
      description: |
        Направление сортировки:

        - `ASC` — сортировка по возрастанию.
        - `DESC` — сортировка по убыванию.
      enum:
        - ASC
        - DESC
    ModelOfferDTO:
      description: Информация о предложении.
      type: object
      properties:
        discount:
          description: Скидка на предложение в процентах.
          type: integer
          format: int32
        name:
          description: Наименование предложения.
          type: string
        pos:
          description: Позиция предложения в выдаче Маркета на карточке модели.
          type: integer
          format: int32
        preDiscountPrice:
          description: Цена предложения без скидки магазина.
          type: number
        price:
          description: Цена предложения без скидки, которую получает покупатель при оплате через :no-translate[Yandex Pay].
          type: number
        regionId:
          description: |
            Идентификатор региона предложения (регион, откуда доставляется товар).

            Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.
          type: integer
          format: int64
        shippingCost:
          description: |
            Стоимость доставки товара в регион:

            * `0` — платить за доставку не нужно.
            * `-1` — магазин не осуществляет доставку этого товара (самовывоз).

            Если стоимость доставки неизвестна, параметр не выводится.
          type: number
        shopName:
          description: Название магазина (в том виде, в котором отображается на Маркете).
          type: string
        shopRating:
          description: |
            Рейтинг магазина.

            Возможные значения:
            * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`.
            * `1`.
            * `2`.
            * `3`.
            * `4`.
            * `5`.
          type: integer
          format: int32
        inStock:
          description: "{% note warning \"Не используйте этот параметр.\" %}\n\n\_\n\n{% endnote %}\n"
          deprecated: true
          type: integer
          format: int32
    EnrichedModelDTO:
      description: Модель товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/ModelDTO'
        - properties:
            offers:
              description: |
                Список первых десяти предложений, расположенных на карточке модели.

                В ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/ModelOfferDTO'
            offlineOffers:
              description: Суммарное количество предложений в розничных магазинах в регионе. Учитываются все предложения от каждого магазина.
              type: integer
              format: int32
            onlineOffers:
              description: Суммарное количество предложений в интернет-магазинах в регионе. Учитываются все предложения от каждого магазина.
              type: integer
              format: int32
    EnrichedModelsDTO:
      description: Список моделей товаров.
      type: object
      required:
        - models
      properties:
        models:
          description: Список моделей товаров.
          type: array
          items:
            $ref: '#/components/schemas/EnrichedModelDTO'
    GetModelsOffersResponse:
      description: Ответ на запрос списка предложений для моделей.
      type: object
      allOf:
        - $ref: '#/components/schemas/EnrichedModelsDTO'
        - $ref: '#/components/schemas/RegionalModelInfoDTO'
    Bid:
      description: Значение ставки.
      type: integer
      format: int32
      minimum: 0
      maximum: 9999
      example: 570
    SkuBidItemDTO:
      description: Список товаров и ставок на них.
      type: object
      required:
        - sku
        - bid
      properties:
        sku:
          description: ':no-translate[SKU] товара, которому соответствует ставка из параметра `bid`.'
          $ref: '#/components/schemas/ShopSku'
        bid:
          description: |
            Значение ставки для товара из параметра `sku`, от 50 до 9999.

            Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
          $ref: '#/components/schemas/Bid'
    PutSkuBidsRequest:
      description: description.
      type: object
      required:
        - bids
      properties:
        bids:
          description: Список товаров и ставки для продвижения, которые на них нужно установить.
          type: array
          minItems: 1
          maxItems: 1500
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
    GetBidsInfoRequest:
      description: description.
      type: object
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить значения ставок.

            Если список не задан, постранично возвращаются все товары со ставками.

            Если список задан, результаты возвращаются одной страницей, а параметры `page_token` и `limit` игнорируются.
          type: array
          minItems: 1
          maxItems: 1500
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    GetBidsInfoResponseDTO:
      description: Список товаров с указанными ставками.
      type: object
      required:
        - bids
      properties:
        bids:
          description: Страница списка товаров.
          type: array
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetBidsInfoResponse:
      description: description.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetBidsInfoResponseDTO'
    GetBidsRecommendationsRequest:
      description: description.
      type: object
      required:
        - skus
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить рекомендации по ставкам.
          type: array
          minItems: 1
          maxItems: 1500
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    BenefitType:
      description: |
        Типы дополнительных инструментов продвижения:

        * `BESTS` — участие в акции «Бестселлеры Маркета».
        * `SPLIT_0_0_4` — возможность оплаты со Сплитом сроком на 4 месяца.
        * `SPLIT_0_0_6` — возможность оплаты со Сплитом сроком на 6 месяцев.
        * `SPLIT_0_0_12` — возможность оплаты со Сплитом сроком на 12 месяцев.
        * `MARKET_SUBSIDY_1_4` — скидка от Маркета от 1 до 4%.
        * `MARKET_SUBSIDY_5_9` — скидка от Маркета от 5 до 9%.
        * `MARKET_SUBSIDY_10` — скидка от Маркета от 10%.
      type: string
      enum:
        - BESTS
        - SPLIT_0_0_4
        - SPLIT_0_0_6
        - SPLIT_0_0_12
        - MARKET_SUBSIDY_1_4
        - MARKET_SUBSIDY_5_9
        - MARKET_SUBSIDY_10
    BidRecommendationItemDTO:
      description: Рекомендованная ставка, возможная доля показов и доступные дополнительные инструменты продвижения.
      type: object
      required:
        - bid
        - showPercent
      properties:
        bid:
          description: |
            Значение рекомендованной ставки для товара из параметра `sku`, от 50 до 9999.

            Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
          $ref: '#/components/schemas/Bid'
        showPercent:
          description: |
            Доля показов.
          type: integer
          format: int64
          minimum: 0
          maximum: 100
        benefits:
          description: |
            Список доступных субсидий.

            Чтобы получить необходимый инструмент продвижения, установите ставку, которая будет рекомендована для этого инструмента или выше.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/BenefitType'
    PriceRecommendationItemDTO:
      description: Рекомендованная цена.
      type: object
      required:
        - campaignId
        - price
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        price:
          description: |
            Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)
          type: number
          format: decimal
          minimum: 1
    SkuBidRecommendationItemDTO:
      description: Список товаров с рекомендованными ставками.
      type: object
      required:
        - sku
        - bid
      properties:
        sku:
          description: SKU товара, которому соответствует ставка из параметра `bid`.
          $ref: '#/components/schemas/ShopSku'
        bid:
          description: "Значение рекомендованной ставки для товара из параметра `sku`, от 50 до 9999.\n\nУказывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.\n\n{% note tip \"В ответе присутствует не пустой `bidRecommendations`\" %}\n\nНе обращайте внимания на это поле.\n\n{% endnote %}\n\n\_\n"
          $ref: '#/components/schemas/Bid'
        bidRecommendations:
          description: |
            Список рекомендованных ставок с соответствующими долями показов и доступными дополнительными инструментами продвижения.

            Чем больше ставка, тем большую долю показов она помогает получить и тем больше дополнительных инструментов продвижения доступно.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/BidRecommendationItemDTO'
        priceRecommendations:
          description: Рекомендованные цены.
          deprecated: true
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/PriceRecommendationItemDTO'
    GetBidsRecommendationsResponseDTO:
      description: Список товаров с рекомендованными ставками.
      type: object
      required:
        - recommendations
      properties:
        recommendations:
          description: Список товаров с рекомендованными ставками.
          type: array
          items:
            $ref: '#/components/schemas/SkuBidRecommendationItemDTO'
    GetBidsRecommendationsResponse:
      description: description.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetBidsRecommendationsResponseDTO'
    WarehouseAddressDTO:
      description: Адрес склада.
      type: object
      required:
        - city
        - gps
      properties:
        city:
          description: Город.
          type: string
          maxLength: 200
        street:
          description: Улица.
          type: string
          maxLength: 512
        number:
          description: Номер дома.
          type: string
          maxLength: 256
        building:
          description: Номер строения.
          type: string
          maxLength: 16
        block:
          description: Номер корпуса.
          type: string
          maxLength: 16
        gps:
          $ref: '#/components/schemas/GpsDTO'
    WarehouseDTO:
      description: Информация о складе.
      type: object
      required:
        - id
        - name
        - campaignId
        - express
      properties:
        id:
          description: Идентификатор склада.
          type: integer
          format: int64
        name:
          description: Название склада.
          type: string
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        express:
          description: Возможна ли доставка по модели Экспресс.
          type: boolean
        address:
          description: Адрес склада.
          $ref: '#/components/schemas/WarehouseAddressDTO'
    WarehouseGroupDTO:
      description: Информация о группе складов.
      type: object
      required:
        - name
        - mainWarehouse
        - warehouses
      properties:
        name:
          description: Название группы складов.
          type: string
        mainWarehouse:
          description: Склад, идентификатор которого нужно использовать для передачи остатков по всей группе.
          $ref: '#/components/schemas/WarehouseDTO'
        warehouses:
          description: Список складов, входящих в группу.
          type: array
          items:
            description: Склад.
            $ref: '#/components/schemas/WarehouseDTO'
    WarehousesDTO:
      description: Информация о складах и группах складов.
      type: object
      required:
        - warehouses
        - warehouseGroups
      properties:
        warehouses:
          description: Список складов, не входящих в группы.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseDTO'
        warehouseGroups:
          description: Список групп складов.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseGroupDTO'
    GetWarehousesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/WarehousesDTO'
    WarehouseComponentType:
      description: |
        Свойства складов, которые необходимо вернуть:

        * `ADDRESS` — адрес склада.
        * `STATUS` — статус склада.
      type: string
      enum:
        - ADDRESS
        - STATUS
    GetPagedWarehousesRequest:
      description: Запрос на получение складов кабинета.
      type: object
      properties:
        components:
          description: |
            Свойства складов, которые необходимо вернуть. Если какое-то значение параметра не задано, этой информации в ответе не будет.

            Передавайте параметр, только если нужна информация, которую он возвращает.

            Можно передать сразу несколько значений.
          type: array
          nullable: true
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/WarehouseComponentType'
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, склады которых необходимо вернуть.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          nullable: true
          uniqueItems: true
          minItems: 1
          maxItems: 25
          items:
            type: integer
            format: int64
            minimum: 1
    WarehouseGroupInfoDTO:
      description: |
        Информация о группе, к которой принадлежит склад.

        Возвращается только для складов в группах.

        [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)
      type: object
      required:
        - name
        - id
      properties:
        name:
          description: Название группы, к которой принадлежит склад.
          type: string
        id:
          description: Идентификатор группы складов.
          type: integer
          format: int64
    WarehouseStatusType:
      description: |
        Статус склада:

        * `DISABLED_MANUALLY` – отключен вами.
        * `OTHER` – другой статус. Например, склад включен или отключен Маркетом.
      type: string
      enum:
        - DISABLED_MANUALLY
        - OTHER
    WarehouseStatusDTO:
      description: Информация о статусе склада.
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/WarehouseStatusType'
    WarehouseDetailsDTO:
      description: Информация о складе.
      type: object
      required:
        - id
        - name
        - campaignId
        - express
      properties:
        id:
          description: Идентификатор склада.
          type: integer
          format: int64
        name:
          description: Название склада.
          type: string
        campaignId:
          description: |
            Идентификатор кампании того магазина, который связан со складом.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        express:
          description: Возможна ли доставка для модели Экспресс.
          type: boolean
        groupInfo:
          $ref: '#/components/schemas/WarehouseGroupInfoDTO'
        address:
          description: |
            Адрес склада.

            Возвращается, только если в запросе параметр `components` принимает значение `ADDRESS`.
          $ref: '#/components/schemas/WarehouseAddressDTO'
        status:
          description: |
            Статус склада.

            Возвращается, только если в запросе параметр `components` принимает значение `STATUS`.

            {% note info "Статус склада, полученный через :no-translate[API], может не совпадать со статусом в кабинете" %}

            Например, сначала Маркет отключил склад, а затем вы с помощью метода [POST campaigns/{campaignId}/warehouse/status](../../reference/warehouses/updateWarehouseStatus.md).

            Статус в кабинете — **Отключен Маркетом**, а через API вернется **DISABLED_MANUALLY** (отключен вами).

            {% endnote %}
          $ref: '#/components/schemas/WarehouseStatusDTO'
    PagedWarehousesDTO:
      description: Информация о складах в кабинете.
      type: object
      required:
        - warehouses
      properties:
        warehouses:
          description: Список складов.
          type: array
          items:
            $ref: '#/components/schemas/WarehouseDetailsDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetPagedWarehousesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/PagedWarehousesDTO'
    FulfillmentWarehouseDTO:
      description: Склад Маркета (:no-translate[FBY]).
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: Идентификатор склада.
          type: integer
          format: int64
        name:
          description: Название склада.
          type: string
        address:
          description: Адрес склада.
          $ref: '#/components/schemas/WarehouseAddressDTO'
    FulfillmentWarehousesDTO:
      description: Список складов Маркета (:no-translate[FBY]).
      type: object
      required:
        - warehouses
      properties:
        warehouses:
          description: Список складов Маркета (:no-translate[FBY]).
          type: array
          items:
            $ref: '#/components/schemas/FulfillmentWarehouseDTO'
    GetFulfillmentWarehousesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/FulfillmentWarehousesDTO'
    UpdateWarehouseStatusRequest:
      description: |
        Запрос на изменение статуса склада.

        Позволяет выключить склад или включить ранее отключенный вами склад.

        Если склад был отключен Маркетом, то включить его вручную с помощью этого метода не получится.
      type: object
      required:
        - enabled
      properties:
        enabled:
          description: |
            Статус склада:

            * `true` — включен.
            * `false` — отключен.
          type: boolean
    UpdateWarehouseStatusResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/WarehouseStatusDTO'
    CategoryId:
      description: |
        Идентификатор категории на Маркете.

        При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

        Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
      format: int32
      type: integer
      minimum: 1
    ParameterType:
      description: |
        Тип данных:

        * `TEXT` — текст.
        * `ENUM` — список возможных значений.
        * `BOOLEAN` — `true` или `false`.
        * `NUMERIC` — число.
      type: string
      enum:
        - TEXT
        - ENUM
        - BOOLEAN
        - NUMERIC
    UnitDTO:
      description: Единица измерения.
      type: object
      required:
        - id
        - name
        - fullName
      properties:
        id:
          description: Идентификатор единицы измерения.
          type: integer
          format: int64
        name:
          description: Сокращенное название единицы измерения.
          type: string
          example: кг
        fullName:
          description: Полное название единицы измерения.
          type: string
          example: килограмм
    CategoryParameterUnitDTO:
      description: Единицы измерения характеристики товара.
      type: object
      required:
        - defaultUnitId
        - units
      properties:
        defaultUnitId:
          description: Единица измерения по умолчанию.
          type: integer
          format: int64
        units:
          description: Допустимые единицы измерения.
          type: array
          items:
            $ref: '#/components/schemas/UnitDTO'
    OfferCardRecommendationType:
      description: |
        Рекомендация по дополнению или замене контента. Не возвращается для карточек, которые заполнены Маркетом или содержат бывшие в употреблении товары.

        Часть рекомендаций относятся к **основным параметрам**, которые есть у товаров любых категорий. Другие — к тем **характеристикам**, которые есть у товара потому, что он относится к определенной категории.

        **1. Рекомендации, относящиеся к основным параметрам**

        Каждая такая рекомендация относится к **единственному параметру**. Чтобы заполнить этот параметр, пользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        Рекомендации по заполнению параметров в `updateOfferMappings`:

        * `RECOGNIZED_VENDOR` — напишите название производителя так, как его пишет сам производитель (параметр `vendor`).
        * `PICTURE_COUNT` — добавьте изображения (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)

          Для рекомендации приходит процент ее выполнения.
        * `FIRST_PICTURE_SIZE`— замените первое изображение более крупным (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)
        * `TITLE_LENGTH` — измените название (параметр `name`). Составьте название по схеме: тип + бренд или производитель + модель + особенности, если есть (размер, вес, цвет). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/title)
        * `DESCRIPTION_LENGTH` — добавьте описание рекомендуемого размера (параметр `description`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/description)
        * `AVERAGE_PICTURE_SIZE` — замените все изображения на изображения высокого качества (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)
        * `FIRST_VIDEO_LENGTH` — добавьте первое видео рекомендуемой длины (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `FIRST_VIDEO_SIZE` — замените первое видео на видео высокого качества (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `AVERAGE_VIDEO_SIZE` — замените все видео на видео высокого качества (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `VIDEO_COUNT` — добавьте хотя бы одно видео (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)

          Для рекомендации приходит процент ее выполнения.

        **2. Рекомендации, относящиеся к характеристикам по категориям**

        Каждая такая рекомендация предполагает заполнение **одной или нескольких характеристик**. Чтобы узнать, какие именно характеристики нужно заполнить, воспользуйтесь запросом [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md). Например, если вы получили рекомендацию `MAIN`, нужно заполнить характеристики, имеющие `MAIN` в массиве `recommendationTypes`.

        Рекомендации:

        * `MAIN` — заполните ключевые характеристики товара, которые используются в поиске и фильтрах.

          Для рекомендации приходит процент ее выполнения.
        * `ADDITIONAL` — заполните дополнительные характеристики товара.

          Для рекомендации приходит процент ее выполнения.
        * `DISTINCTIVE` — заполните характеристики, которыми отличаются друг от друга варианты товара.

          Для рекомендации приходит процент ее выполнения.

        **3. Устаревшие рекомендации**

        * `HAS_VIDEO`.
        * `FILTERABLE`.
        * `HAS_DESCRIPTION`.
        * `HAS_BARCODE`.
      type: string
      enum:
        - HAS_VIDEO
        - RECOGNIZED_VENDOR
        - MAIN
        - ADDITIONAL
        - DISTINCTIVE
        - FILTERABLE
        - PICTURE_COUNT
        - HAS_DESCRIPTION
        - HAS_BARCODE
        - FIRST_PICTURE_SIZE
        - TITLE_LENGTH
        - DESCRIPTION_LENGTH
        - AVERAGE_PICTURE_SIZE
        - FIRST_VIDEO_SIZE
        - FIRST_VIDEO_LENGTH
        - AVERAGE_VIDEO_SIZE
        - VIDEO_COUNT
    ParameterValueOptionDTO:
      description: Значение характеристики.
      type: object
      required:
        - id
        - value
      properties:
        id:
          description: Идентификатор значения.
          type: integer
          format: int64
        value:
          description: Значение.
          type: string
        description:
          description: Описание значения.
          type: string
    ParameterValueConstraintsDTO:
      description: Ограничения на значения характеристик.
      type: object
      properties:
        minValue:
          description: Минимальное число.
          type: number
          format: double
        maxValue:
          description: Максимальное число.
          type: number
          format: double
        maxLength:
          description: Максимальная длина текста.
          type: integer
          format: int32
    OptionValuesLimitedDTO:
      description: Значение ограничивающей характеристики и список допустимых значений ограничиваемой характеристики.
      type: object
      required:
        - limitingOptionValueId
        - optionValueIds
      properties:
        limitingOptionValueId:
          description: Идентификатор значения ограничивающей характеристики.
          type: integer
          format: int64
        optionValueIds:
          description: |
            Идентификаторы допустимых значений ограничиваемой характеристики.
          type: array
          uniqueItems: true
          items:
            type: integer
            format: int64
            minimum: 1
    ValueRestrictionDTO:
      description: |
        Ограничение на возможные значения, накладываемое другой характеристикой.

        Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.

        **Пример**

        Характеристика **размер** сама по себе может принимать девять разных значений: `S`, `M`, `L`, `44`, `46`, `48`, `42/164`, `46/176`, `44S`.

        Если ограничивающая характеристика **размерная сетка** принимает значение `RU`, список возможных значений размера сокращается до `44`, `46`, `48`.
      type: object
      required:
        - limitingParameterId
        - limitedValues
      properties:
        limitingParameterId:
          description: Идентификатор ограничивающей характеристики.
          type: integer
          format: int64
          minimum: 1
        limitedValues:
          description: Значения ограничивающей характеристики и соответствующие допустимые значения текущей характеристики.
          type: array
          items:
            $ref: '#/components/schemas/OptionValuesLimitedDTO'
    CategoryParameterDTO:
      description: Характеристика товара.
      type: object
      required:
        - id
        - type
        - required
        - filtering
        - distinctive
        - multivalue
        - allowCustomValues
      properties:
        id:
          description: Идентификатор характеристики.
          type: integer
          format: int64
          minimum: 1
        name:
          description: Название характеристики.
          type: string
        type:
          description: Тип данных.
          $ref: '#/components/schemas/ParameterType'
        unit:
          $ref: '#/components/schemas/CategoryParameterUnitDTO'
        description:
          description: Описание характеристики.
          type: string
        recommendationTypes:
          description: Перечень возможных рекомендаций по заполнению карточки, к которым относится данная характеристика.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/OfferCardRecommendationType'
        required:
          description: Обязательность характеристики.
          type: boolean
        filtering:
          description: Используется ли характеристика в фильтре.
          type: boolean
        distinctive:
          description: Является ли характеристика особенностью варианта.
          type: boolean
        multivalue:
          description: Можно ли передать сразу несколько значений.
          type: boolean
        allowCustomValues:
          description: Можно ли передавать собственное значение, которого нет в списке вариантов Маркета. Только для характеристик типа `ENUM`.
          type: boolean
        values:
          description: Список допустимых значений параметра. Только для характеристик типа `ENUM`.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ParameterValueOptionDTO'
        constraints:
          description: Ограничения на значения. Только для характеристик типа `TEXT` и `NUMERIC`.
          $ref: '#/components/schemas/ParameterValueConstraintsDTO'
        valueRestrictions:
          description: Ограничения на значения, накладываемые другими характеристиками. Только для характеристик типа `ENUM`.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ValueRestrictionDTO'
    CategoryContentParametersDTO:
      description: Информация о параметрах категории.
      type: object
      required:
        - categoryId
      properties:
        categoryId:
          $ref: '#/components/schemas/CategoryId'
        parameters:
          description: Список характеристик.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CategoryParameterDTO'
    GetCategoryContentParametersResponse:
      description: Ответ со списком характеристик для категории и их допустимыми значениями.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/CategoryContentParametersDTO'
    GetOfferCardsContentStatusRequest:
      type: object
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.
            <br><br>
            ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          type: array
          maxItems: 200
          uniqueItems: true
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ShopSku'
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          type: array
          uniqueItems: true
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
        categoryIds:
          description: Фильтр по категориям на Маркете.
          type: array
          maxItems: 200
          uniqueItems: true
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CategoryId'
    OfferCardContentStatusType:
      description: |
        Статус вычисления рейтинга карточки товара и рекомендаций:

        * `UPDATING` — рейтинг обновляется.
        * `ACTUAL` — рейтинг актуальный.
      type: string
      enum:
        - UPDATING
        - ACTUAL
    OfferCardRecommendationDTO:
      description: Рекомендация по заполнению карточки товара.
      type: object
      required:
        - type
      properties:
        type:
          description: Рекомендация.
          $ref: '#/components/schemas/OfferCardRecommendationType'
        percent:
          description: |
            Процент выполнения рекомендации.

            Указывается для рекомендаций некоторых типов:

            * `PICTURE_COUNT`.
            * `VIDEO_COUNT`.
            * `MAIN`.
            * `ADDITIONAL`.
            * `DISTINCTIVE`.
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          exclusiveMaximum: true
        remainingRatingPoints:
          description: |
            Максимальное количество баллов рейтинга карточки, которые можно получить за выполнение рекомендаций.
          type: integer
          format: int32
          minimum: 1
          maximum: 100
    OfferCardDTO:
      description: |
        Информация о состоянии карточки товара.

        Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        mapping:
          description: Основная информация о карточке товара.
          $ref: '#/components/schemas/GetMappingDTO'
        parameterValues:
          description: |
            Список характеристик с их значениями.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ParameterValueDTO'
        cardStatus:
          description: Статус карточки.
          $ref: '#/components/schemas/OfferCardStatusType'
        contentRating:
          description: Рейтинг карточки.
          type: integer
          format: int32
        averageContentRating:
          description: Средний рейтинг карточки у товаров той категории, которая указана в `marketCategoryId`.
          type: integer
          format: int32
        contentRatingStatus:
          description: Статус вычисления рейтинга карточки и рекомендаций.
          $ref: '#/components/schemas/OfferCardContentStatusType'
        recommendations:
          description: |
            Список рекомендаций к заполнению карточки.

            Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferCardRecommendationDTO'
        errors:
          description: Ошибки в контенте, препятствующие размещению товара на витрине.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
        warnings:
          description: Связанные с контентом предупреждения, не препятствующие размещению товара на витрине.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
    OfferCardsContentStatusDTO:
      description: Список товаров с информацией о состоянии карточек.
      type: object
      required:
        - offerCards
      properties:
        offerCards:
          description: Страница списка товаров с информацией о состоянии карточек.
          type: array
          items:
            $ref: '#/components/schemas/OfferCardDTO'
        paging:
          description: Идентификатор следующей страницы.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetOfferCardsContentStatusResponse:
      description: Ответ со списком состояний товаров и пагинацией.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/OfferCardsContentStatusDTO'
    OfferContentDTO:
      description: Товар с указанными характеристиками.
      type: object
      required:
        - offerId
        - categoryId
        - parameterValues
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        categoryId:
          $ref: '#/components/schemas/CategoryId'
        parameterValues:
          description: |
            Список характеристик с их значениями.

            При **изменении** характеристик передавайте только те, значение которых нужно обновить. Если в `categoryId` вы меняете категорию, значения общих характеристик для старой и новой категории сохранятся, передавать их не нужно.

            Чтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.
          type: array
          maxItems: 300
          minItems: 1
          items:
            $ref: '#/components/schemas/ParameterValueDTO'
    UpdateOfferContentRequest:
      description: Запрос на установку новых значений для параметров.
      type: object
      required:
        - offersContent
      properties:
        offersContent:
          description: Список товаров с указанными характеристиками.
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/OfferContentDTO'
    OfferContentErrorType:
      description: |
        Типы ошибок и предупреждений:

        * `OFFER_NOT_FOUND` — такого товара нет в каталоге.
        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `INVALID_CATEGORY` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
        * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.
        * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.
        * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.
        * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.
        * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.
        * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](:no-translate[*ascii-code]).

        Проверить, какие категорийные характеристики доступны для заданной категории, и получить их настройки можно с помощью запроса [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters).
      type: string
      enum:
        - OFFER_NOT_FOUND
        - UNKNOWN_CATEGORY
        - INVALID_CATEGORY
        - UNKNOWN_PARAMETER
        - UNEXPECTED_BOOLEAN_VALUE
        - NUMBER_FORMAT
        - INVALID_UNIT_ID
        - INVALID_GROUP_ID_LENGTH
        - INVALID_GROUP_ID_CHARACTERS
    OfferContentErrorDTO:
      description: Текст ошибки или предупреждения.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/OfferContentErrorType'
        parameterId:
          description: Идентификатор характеристики, с которой связана ошибка или предупреждение.
          type: integer
          format: int64
        message:
          description: Текст ошибки или предупреждения.
          type: string
      required:
        - type
        - message
    UpdateOfferContentResultDTO:
      description: Ошибки и предупреждения, которые появились из-за переданных характеристик.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        errors:
          description: |
            Ошибки.

            Если хотя бы по одному товару есть ошибка, информация в каталоге не обновится по всем переданным товарам.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
        warnings:
          description: |
            Предупреждения.

            Информация в каталоге обновится.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
    UpdateOfferContentResponse:
      description: Описывает проблемы, которые появились при сохранении товара.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            results:
              description: |
                Ошибки и предупреждения, которые появились при обработке переданных значений. Каждый элемент списка соответствует одному товару.

                Если ошибок и предупреждений нет, поле не передается.
              type: array
              nullable: true
              minItems: 1
              items:
                $ref: '#/components/schemas/UpdateOfferContentResultDTO'
    ChatContextType:
      description: |
        Тип чата:

        * `ORDER` — по заказам. Подробнее о чатах по заказам читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/communication/about-orders).
        * `RETURN` — по возвратам (:no-translate[FBS] и Экспресс). Подробнее о чатах по возвратам читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/communication/about-orders).
        * `DIRECT` — чат, который начал покупатель. Подробнее о таком типе читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/communication/with-users).
      type: string
      enum:
        - ORDER
        - RETURN
        - DIRECT
    ChatContextDTO:
      description: Информация о заказе или возврате, по которому начат чат.
      type: object
      required:
        - type
        - id
      properties:
        type:
          $ref: '#/components/schemas/ChatContextType'
        id:
          description: Идентификатор заказа или возврата.
          type: integer
          format: int64
          minimum: 1
    CreateChatRequest:
      description: |
        Заказ, для которого нужно создать чат.
      type: object
      properties:
        orderId:
          description: Идентификатор заказа на Маркете.
          type: integer
          format: int64
          deprecated: true
        context:
          $ref: '#/components/schemas/ChatContextDTO'
    CreateChatResultDTO:
      description: Информация о созданном чате.
      type: object
      required:
        - chatId
      properties:
        chatId:
          description: Идентификатор чата.
          type: integer
          format: int64
          minimum: 1
    CreateChatResponse:
      description: Результат создания чата.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/CreateChatResultDTO'
    ChatType:
      description: |
        Тип чата:

        * `CHAT` — чат с покупателем.
        * `ARBITRAGE` — спор.
      type: string
      enum:
        - CHAT
        - ARBITRAGE
    ChatStatusType:
      description: |
        Статус чата:

        * `NEW` — новый чат.
        * `WAITING_FOR_CUSTOMER` — нужен ответ покупателя.
        * `WAITING_FOR_PARTNER` — нужен ответ магазина.
        * `WAITING_FOR_ARBITER` — нужен ответ арбитра.
        * `WAITING_FOR_MARKET` — нужен ответ Маркета.
        * `FINISHED` — чат завершен.
      type: string
      enum:
        - NEW
        - WAITING_FOR_CUSTOMER
        - WAITING_FOR_PARTNER
        - WAITING_FOR_ARBITER
        - WAITING_FOR_MARKET
        - FINISHED
    GetChatsRequest:
      description: |
        Фильтры по чатам, которые нужно вернуть.
      type: object
      properties:
        orderIds:
          description: Фильтр по идентификаторам заказов на Маркете.
          type: array
          nullable: true
          uniqueItems: true
          items:
            type: integer
            format: int64
          minItems: 1
          deprecated: true
        contexts:
          description: Фильтр по заказам или возвратам, по которым начаты чаты.
          type: array
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ChatContextDTO'
          minItems: 1
        types:
          description: Фильтр по типам чатов.
          type: array
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ChatType'
          minItems: 1
        statuses:
          description: Фильтр по статусам чатов.
          type: array
          nullable: true
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ChatStatusType'
          minItems: 1
    ChatFullContextDTO:
      description: Информация о заказе или возврате, по которому начат чат.
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ChatContextType'
        orderId:
          description: |
            Идентификатор заказа.

            Возвращается для заказов и возвратов.
          type: integer
          format: int64
          minimum: 1
        returnId:
          description: |
            Идентификатор возврата.

            Возвращается только для возвратов.
          type: integer
          format: int64
          minimum: 1
    GetChatInfoDTO:
      description: Информация о чате.
      type: object
      required:
        - chatId
        - context
        - type
        - status
        - createdAt
        - updatedAt
      properties:
        chatId:
          description: Идентификатор чата.
          type: integer
          format: int64
          minimum: 1
        orderId:
          description: Идентификатор заказа.
          type: integer
          format: int64
          minimum: 1
          deprecated: true
        context:
          $ref: '#/components/schemas/ChatFullContextDTO'
        type:
          $ref: '#/components/schemas/ChatType'
        status:
          $ref: '#/components/schemas/ChatStatusType'
        createdAt:
          description: |
            Дата и время создания чата.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          type: string
          format: date-time
          example: '2017-11-21T00:00:00+03:00'
        updatedAt:
          description: |
            Дата и время последнего сообщения в чате.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          type: string
          format: date-time
          example: '2017-11-21T00:00:00+03:00'
    GetChatsInfoDTO:
      description: Список чатов.
      type: object
      required:
        - chats
      properties:
        chats:
          description: Информация о чатах.
          type: array
          items:
            $ref: '#/components/schemas/GetChatInfoDTO'
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetChatsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetChatsInfoDTO'
    GetChatResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetChatInfoDTO'
    SendFileToChatRequest:
      description: Информация о чате и отправляемом файле.
      type: object
      required:
        - file
      properties:
        file:
          description: Содержимое файла. Максимальный размер файла — 5 Мбайт.
          type: string
          format: binary
    ChatMessageSenderType:
      description: |
        Кто отправил сообщение:

        * `PARTNER` — магазин.
        * `CUSTOMER` — покупатель.
        * `MARKET` — Маркет.
        * `SUPPORT` — сотрудник службы поддержки Маркета.
      type: string
      enum:
        - PARTNER
        - CUSTOMER
        - MARKET
        - SUPPORT
    ChatMessagePayloadDTO:
      description: Информация о приложенных к сообщению файлах.
      type: object
      required:
        - name
        - size
        - url
      properties:
        name:
          description: Название файла.
          type: string
        url:
          description: Ссылка для скачивания файла.
          type: string
        size:
          description: Размер файла в байтах.
          type: integer
          format: int32
    ChatMessageDTO:
      description: Информация о сообщении.
      type: object
      required:
        - messageId
        - createdAt
        - sender
      properties:
        messageId:
          description: Идентификатор сообщения.
          type: integer
          format: int64
          minimum: 1
        createdAt:
          description: |
            Дата и время создания сообщения.

            Формат даты: :no-translate[ISO 8601] со смещением относительно :no-translate[UTC].
          type: string
          format: date-time
          example: '2017-11-21T00:00:00+03:00'
        sender:
          description: Отправитель.
          $ref: '#/components/schemas/ChatMessageSenderType'
        message:
          description: |
            Текст сообщения.

            Необязательный параметр, если возвращается параметр `payload`.
          type: string
        payload:
          description: |
            Информация о приложенных к сообщению файлах.

            Необязательный параметр, если возвращается параметр `message`.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/ChatMessagePayloadDTO'
    GetChatMessageResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ChatMessageDTO'
    SendMessageToChatRequest:
      description: В какой чат нужно отправить сообщение и текст сообщения.
      type: object
      required:
        - message
      properties:
        message:
          description: Текст сообщения.
          type: string
          minLength: 1
          maxLength: 4096
    GetChatHistoryRequest:
      description: |
        Историю какого чата нужно получить — и начиная с какого сообщения.
      type: object
      properties:
        messageIdFrom:
          description: Идентификатор сообщения, начиная с которого нужно получить все последующие сообщения.
          type: integer
          format: int64
          minimum: 1
    ChatMessagesResultDTO:
      description: Информация о сообщениях.
      type: object
      required:
        - context
        - messages
      properties:
        orderId:
          description: Идентификатор заказа.
          type: integer
          format: int64
          deprecated: true
        context:
          description: Информация о заказе или возврате, по которому начат чат.
          $ref: '#/components/schemas/ChatFullContextDTO'
        messages:
          description: Информация о сообщениях.
          type: array
          items:
            $ref: '#/components/schemas/ChatMessageDTO'
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetChatHistoryResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/ChatMessagesResultDTO'
    PaymentFrequencyType:
      description: |
        Частота выплат:

        * `DAILY` — ежедневно.
        * `WEEKLY` — раз в неделю.
        * `BIWEEKLY` — раз в две недели.
        * `MONTHLY` — раз в месяц.

        Подробнее о графике выплат читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/acquiring.html).
      type: string
      enum:
        - DAILY
        - WEEKLY
        - BIWEEKLY
        - MONTHLY
    CalculateTariffsParametersDTO:
      description: Параметры для расчета стоимости услуг.
      type: object
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.

            У пользователя, который выполняет запрос, должен быть доступ к этой кампании.

            Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.

            Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.
          type: integer
          format: int64
          minimum: 1
        sellingProgram:
          description: |
            Модель размещения.

            **Для продавцов Market Yandex Go** недоступны модели DBS и Экспресс.

            Обязательный параметр, если не указан параметр `campaignId`. Совместное использование параметров приведет к ошибке.
          $ref: '#/components/schemas/SellingProgramType'
        frequency:
          description: Частота выплат.
          $ref: '#/components/schemas/PaymentFrequencyType'
        currency:
          description: |
            Валюта, в которой рассчитывается услуга.

            Значение по умолчанию: `RUR`.
          $ref: '#/components/schemas/CurrencyType'
    CalculateTariffsOfferDTO:
      description: Параметры товара, для которого нужно рассчитать стоимость услуг.
      type: object
      required:
        - categoryId
        - price
        - length
        - width
        - height
        - weight
      properties:
        categoryId:
          description: |
            Идентификатор категории товара на Маркете.

            Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.

            Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        price:
          description: Цена на товар в рублях.
          type: number
          minimum: 0
          exclusiveMinimum: true
        length:
          description: Длина товара в сантиметрах.
          type: number
          minimum: 0
          exclusiveMinimum: true
        width:
          description: Ширина товара в сантиметрах.
          type: number
          minimum: 0
          exclusiveMinimum: true
        height:
          description: Высота товара в сантиметрах.
          type: number
          minimum: 0
          exclusiveMinimum: true
        weight:
          description: Вес товара в килограммах.
          type: number
          minimum: 0
          exclusiveMinimum: true
        quantity:
          description: Квант продажи — количество единиц товара в одном товарном предложении.
          type: integer
          format: int32
          minimum: 1
          default: 1
    CalculateTariffsRequest:
      type: object
      required:
        - parameters
        - offers
      properties:
        parameters:
          description: Параметры для расчета стоимости услуг.
          $ref: '#/components/schemas/CalculateTariffsParametersDTO'
        offers:
          description: Товары, для которых нужно рассчитать стоимость услуг.
          type: array
          minItems: 1
          maxItems: 200
          items:
            $ref: '#/components/schemas/CalculateTariffsOfferDTO'
    CalculatedTariffType:
      description: |
        Услуга Маркета:

        * `AGENCY_COMMISSION` — прием платежа покупателя.

        * `PAYMENT_TRANSFER` — перевод платежа покупателя.

        * `FEE` — размещение товара на Маркете.

        * `DELIVERY_TO_CUSTOMER` — доставка покупателю.

        * `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.

        * `EXPRESS_DELIVERY` — экспресс-доставка покупателю.

        * `SORTING` — обработка заказа.

        * `MIDDLE_MILE` — средняя миля.

        Подробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).
      type: string
      enum:
        - AGENCY_COMMISSION
        - PAYMENT_TRANSFER
        - FEE
        - DELIVERY_TO_CUSTOMER
        - CROSSREGIONAL_DELIVERY
        - EXPRESS_DELIVERY
        - SORTING
        - MIDDLE_MILE
    CalculatedTariffDTO:
      description: Информация об услугах Маркета.
      type: object
      required:
        - type
        - parameters
      properties:
        type:
          description: Услуга Маркета.
          $ref: '#/components/schemas/CalculatedTariffType'
        amount:
          description: Стоимость услуги в рублях.
          type: number
        currency:
          description: Валюта, в которой рассчитывается услуга.
          $ref: '#/components/schemas/CurrencyType'
        parameters:
          description: Параметры расчета тарифа.
          type: array
          items:
            $ref: '#/components/schemas/TariffParameterDTO'
    CalculateTariffsOfferInfoDTO:
      description: Стоимость услуг.
      type: object
      required:
        - offer
        - tariffs
      properties:
        offer:
          description: Информация о товаре, которую вы передали в запросе для расчета стоимости услуг.
          $ref: '#/components/schemas/CalculateTariffsOfferDTO'
        tariffs:
          description: |
            Список услуг и их стоимость.

            По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели :no-translate[FBS] стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
          type: array
          items:
            $ref: '#/components/schemas/CalculatedTariffDTO'
    CalculateTariffsResponseDTO:
      description: Расчет стоимости услуг.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Стоимость услуг.
          type: array
          items:
            $ref: '#/components/schemas/CalculateTariffsOfferInfoDTO'
    CalculateTariffsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              description: Стоимость услуг.
              $ref: '#/components/schemas/CalculateTariffsResponseDTO'
    LanguageType:
      description: |
        Язык:

        * `RU` — русский.

        * `EN` — английский.
      type: string
      enum:
        - RU
        - EN
    GetCategoriesRequest:
      description: |
        Параметры запроса категорий.
      type: object
      properties:
        language:
          description: Язык категорий.
          $ref: '#/components/schemas/LanguageType'
    CategoryDTO:
      description: |
        Информация о категории.

        Категория считается листовой, если у нее нет дочерних категорий.
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: Идентификатор категории.
          type: integer
          format: int64
        name:
          description: Название категории.
          type: string
        children:
          description: Дочерние категории.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CategoryDTO'
    GetCategoriesResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/CategoryDTO'
    GetCategoriesMaxSaleQuantumRequest:
      description: |
        Список категорий, для которых нужно вернуть лимит на установку кванта и минимального количества товаров.
      type: object
      required:
        - marketCategoryIds
      properties:
        marketCategoryIds:
          description: Идентификаторы листовых категории на Маркете — тех, у которых нет дочерних категорий.
          type: array
          uniqueItems: true
          minItems: 1
          maxItems: 1500
          items:
            type: integer
            format: int64
    MaxSaleQuantumDTO:
      description: |
        Лимит на установку кванта и минимального количества товаров по категориям.
      type: object
      required:
        - id
      properties:
        id:
          description: Идентификатор категории.
          type: integer
          format: int64
        name:
          description: Название категории.
          type: string
        maxSaleQuantum:
          description: Лимит на установку кванта и минимального количества товаров.
          type: integer
    CategoryErrorType:
      description: |
        Типы ошибок:

        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `CATEGORY_IS_NOT_LEAF` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
      type: string
      enum:
        - UNKNOWN_CATEGORY
        - CATEGORY_IS_NOT_LEAF
    CategoryErrorDTO:
      description: Текст ошибки.
      type: object
      properties:
        categoryId:
          description: Идентификатор категории.
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/CategoryErrorType'
    GetCategoriesMaxSaleQuantumDTO:
      description: Категории и лимит на установку кванта и минимального количества товаров.
      type: object
      required:
        - results
      properties:
        results:
          description: Категории и лимит на установку кванта и минимального количества товаров.
          type: array
          items:
            $ref: '#/components/schemas/MaxSaleQuantumDTO'
        errors:
          description: Ошибки, которые появились из-за переданных категорий.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/CategoryErrorDTO'
    GetCategoriesMaxSaleQuantumResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumDTO'
    GetQualityRatingRequest:
      description: Запрос информации по индексу качества.
      type: object
      required:
        - campaignIds
      properties:
        dateFrom:
          description: |
            Начало периода.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Не может быть раньше 30 дней от текущей даты.
          type: string
          format: date
        dateTo:
          description: |
            Конец периода.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Не может быть позже текущей даты.
          type: string
          format: date
        campaignIds:
          description: |
            Список идентификаторов кампании.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: array
          minItems: 1
          maxItems: 50
          uniqueItems: true
          items:
            description: |
              Список кампании тех магазинов, для которых необходимо получить информацию.
            type: integer
            format: int64
    QualityRatingComponentType:
      description: |
        Составляющие индекса качества.

        **Для модели :no-translate[DBS]:**
        * `DBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.

        **Для моделей :no-translate[FBS] и Экспресс:**
        * `FBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.

        **Для модели :no-translate[FBY]:**
        * `FBY_LATE_DELIVERY_RATE` — доля товаров, которые приехали на склад с опозданием.
        * `FBY_CANCELLATION_RATE` — доля отмененных или недоставленных товаров.
        * `FBY_DELIVERY_DIFF_RATE` — доля товаров, которые не прибыли вместе с поставкой или которые не приняли.
        * `FBY_LATE_EDITING_RATE` — доля товаров, которые поздно убрали из заявки.
      type: string
      enum:
        - DBS_CANCELLATION_RATE
        - DBS_LATE_DELIVERY_RATE
        - FBS_CANCELLATION_RATE
        - FBS_LATE_SHIP_RATE
        - FBY_LATE_DELIVERY_RATE
        - FBY_CANCELLATION_RATE
        - FBY_DELIVERY_DIFF_RATE
        - FBY_LATE_EDITING_RATE
    QualityRatingComponentDTO:
      description: Составляющая индекса качества.
      type: object
      required:
        - value
        - componentType
      properties:
        value:
          description: Значение составляющей в процентах.
          minimum: 0
          maximum: 100
          type: number
          format: double
        componentType:
          description: Тип составляющей.
          $ref: '#/components/schemas/QualityRatingComponentType'
    QualityRatingDTO:
      description: Информация об индексе качества.
      type: object
      required:
        - rating
        - calculationDate
        - components
      properties:
        rating:
          description: Значение индекса качества.
          minimum: 0
          maximum: 100
          type: integer
          format: int64
        calculationDate:
          description: |
            Дата вычисления.

            Формат даты: `ГГГГ‑ММ‑ДД`.
          type: string
          format: date
        components:
          description: Составляющие индекса качества.
          type: array
          items:
            $ref: '#/components/schemas/QualityRatingComponentDTO'
    CampaignQualityRatingDTO:
      description: Информация об индексе качества магазина.
      type: object
      required:
        - campaignId
        - ratings
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и :no-translate[API]** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          type: integer
          format: int64
        ratings:
          description: Список значений индекса качества.
          type: array
          items:
            $ref: '#/components/schemas/QualityRatingDTO'
    CampaignsQualityRatingDTO:
      description: Информация об индексе качества магазинов.
      type: object
      required:
        - campaignRatings
      properties:
        campaignRatings:
          description: Список магазинов c информацией об их индексе качества.
          type: array
          items:
            $ref: '#/components/schemas/CampaignQualityRatingDTO'
    GetQualityRatingResponse:
      description: Информация об индексе качества магазинов.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/CampaignsQualityRatingDTO'
    AffectedOrderQualityRatingComponentType:
      description: |
        Составляющие индекса качества.

        **Для модели :no-translate[DBS]:**
        * `DBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.

        **Для моделей :no-translate[FBS] и Экспресс:**
        * `FBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.
      type: string
      enum:
        - DBS_CANCELLATION_RATE
        - DBS_LATE_DELIVERY_RATE
        - FBS_CANCELLATION_RATE
        - FBS_LATE_SHIP_RATE
    QualityRatingAffectedOrderDTO:
      type: object
      description: Информация о заказе, который повлиял на индекс качества.
      required:
        - orderId
        - description
        - componentType
      properties:
        orderId:
          description: Идентификатор заказа.
          type: integer
          format: int64
          minimum: 0
        description:
          description: Описание проблемы.
          type: string
        componentType:
          description: Тип составляющей индекса качества.
          $ref: '#/components/schemas/AffectedOrderQualityRatingComponentType'
    QualityRatingDetailsDTO:
      type: object
      description: Информация о заказах, которые повлияли на индекс качества.
      required:
        - affectedOrders
      properties:
        affectedOrders:
          description: Список заказов, которые повлияли на индекс качества.
          type: array
          items:
            $ref: '#/components/schemas/QualityRatingAffectedOrderDTO'
    GetQualityRatingDetailsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/QualityRatingDetailsDTO'
    PromoParticipationType:
      description: |
        Какие акции вернутся:

        * `PARTICIPATING_NOW` — текущие и будущие акции, в которых продавец участвует или может принять участие.

        * `PARTICIPATED` — завершенные акции, в которых продавец участвовал за последний год. Если за год их было меньше 15, в ответе придут 15 последних акций за все время.
      type: string
      enum:
        - PARTICIPATING_NOW
        - PARTICIPATED
    MechanicsType:
      description: |
        Тип акции:

        * `DIRECT_DISCOUNT` — прямая скидка.

        * `BLUE_FLASH` — флеш-акция.

        * `MARKET_PROMOCODE` — скидка по промокоду.
      type: string
      enum:
        - DIRECT_DISCOUNT
        - BLUE_FLASH
        - MARKET_PROMOCODE
    GetPromosRequest:
      description: Фильтры для получения списка акций.
      type: object
      properties:
        participation:
          $ref: '#/components/schemas/PromoParticipationType'
        mechanics:
          description: |
            Фильтр по типу акции.

            По умолчанию возвращаются все типы акций.
          $ref: '#/components/schemas/MechanicsType'
    PromoPeriodDTO:
      description: Время проведения акции.
      type: object
      required:
        - dateTimeFrom
        - dateTimeTo
      properties:
        dateTimeFrom:
          description: Дата и время начала акции.
          type: string
          format: date-time
        dateTimeTo:
          description: Дата и время окончания акции.
          type: string
          format: date-time
    GetPromoAssortmentInfoDTO:
      description: Информация о товарах в акции.
      type: object
      required:
        - activeOffers
      properties:
        activeOffers:
          description: |
            Количество товаров, которые участвуют или участвовали в акции.

            Учитываются только товары, которые были добавлены вручную.

            Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
          type: integer
          format: int32
        potentialOffers:
          description: |
            Количество доступных товаров в акции.

            Параметр возвращается только для текущих и будущих акций.
          type: integer
          format: int32
        processing:
          description: |
            Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.

            Параметр возвращается только для текущих и будущих акций.
          type: boolean
    GetPromoPromocodeInfoDTO:
      description: |
        Информация для типа `MARKET_PROMOCODE`.

        Параметр заполняется только для этого типа акции.
      type: object
      required:
        - promocode
        - discount
      properties:
        promocode:
          description: Промокод.
          type: string
        discount:
          description: Процент скидки по промокоду.
          type: integer
          format: int32
    GetPromoMechanicsInfoDTO:
      description: Информация о типе акции.
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/MechanicsType'
        promocodeInfo:
          $ref: '#/components/schemas/GetPromoPromocodeInfoDTO'
    GetPromoBestsellerInfoDTO:
      description: Информация об акции «Бестселлеры Маркета».
      type: object
      required:
        - bestseller
      properties:
        bestseller:
          description: Является ли акция «Бестселлером Маркета». Подробнее об этой акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers).
          type: boolean
        entryDeadline:
          description: |
            До какой даты можно добавить товар в акцию «Бестселлеры Маркета».

            Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета».
          type: string
          format: date-time
        renewalEnabled:
          description: |
            Включен ли автоматический перенос ассортимента между акциями «Бестселлеры Маркета». О том, как это работает, читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/marketing/promos/market/bestsellers#next).

            Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета».
          type: boolean
    ChannelType:
      description: |
        Каналы продвижения товаров:

        * `PUSH` — пуш-уведомление из приложения Яндекс Маркет.

        * `STRETCH_MAIN` — верхний баннер-растяжка на главной странице Яндекс Маркета.

        * `MAIN_PAGE_CAROUSEL` — карусель акций на главной странице Яндекс Маркета.

        * `PRODUCT_RETAIL_PAGE` — товар на странице ритейл-повода.

        * `MAIN_PAGE_CAROUSEL_WEB` — карусель акций на главной странице веб версии Яндекс Маркета.

        * `PRODUCT_SEPARATE_LANDING` — товар на лендинге акции.

        * `SUPER_SHELF_CATEGORY` — полка в категориях.

        * `CAROUSEL_RETAIL_PAGE` — карусель на лендинге ритейл-повода.

        * `POPUP_APPLICATION` — всплывающее окно в приложении Яндекс Маркет.

        * `POST_TELEGRAM` — пост в Телеграм-канале Яндекс Маркета.

        * `CPA` — реклама в партнерской сети Яндекс Маркета.

        * `WEB_PERFORMANCE_DIRECT` — реклама в Яндекс Директе.

        * `APP_PERFORMANCE` — реклама в :no-translate[AppStore] и :no-translate[Google Play].

        * `BANNER_PICKUP_POINT` — баннер в ПВЗ Маркета.

        * `BLOGGER_PERFORMANCE` — рекламная интеграция у блогеров.

        * `DIGITAL_CHANNEL_BANNER` — баннер в digital-каналах и социальных сетях :no-translate[VK], :no-translate[Одноклассники].

        * `YANDEX_ECOSYSTEM_CHANNELS` — реклама в других сервисах Яндекса: :no-translate[GO], :no-translate[Delivery], :no-translate[Еда].

        * `PARTNERS_MAIN_BANNER` — баннер на главной странице :no-translate[mail.ru], :no-translate[auto.ru], :no-translate[ya.ru].

        * `OTHER` — прочее.
      type: string
      enum:
        - PUSH
        - STRETCH_MAIN
        - MAIN_PAGE_CAROUSEL
        - PRODUCT_RETAIL_PAGE
        - MAIN_PAGE_CAROUSEL_WEB
        - PRODUCT_SEPARATE_LANDING
        - SUPER_SHELF_CATEGORY
        - CAROUSEL_RETAIL_PAGE
        - POPUP_APPLICATION
        - POST_TELEGRAM
        - CPA
        - WEB_PERFORMANCE_DIRECT
        - APP_PERFORMANCE
        - BANNER_PICKUP_POINT
        - BLOGGER_PERFORMANCE
        - DIGITAL_CHANNEL_BANNER
        - YANDEX_ECOSYSTEM_CHANNELS
        - PARTNERS_MAIN_BANNER
        - OTHER
    GetPromoConstraintsDTO:
      description: Ограничения в акции.
      type: object
      properties:
        warehouseIds:
          description: |
            Идентификаторы складов, для которых действует акция. Товары, которые лежат на других складах, не будут продаваться по акции.

            Параметр возвращается, только если в условиях акции есть ограничение по складу.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            type: integer
            format: int64
    GetPromoDTO:
      description: Информация об акции.
      type: object
      required:
        - id
        - name
        - period
        - participating
        - assortmentInfo
        - mechanicsInfo
        - bestsellerInfo
      properties:
        id:
          description: Идентификатор акции.
          type: string
        name:
          description: Название акции.
          type: string
        period:
          $ref: '#/components/schemas/PromoPeriodDTO'
        participating:
          description: |
            Участвует или участвовал ли продавец в этой акции.

            Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.

            Для прошедших акций всегда возвращается со значением `true`.

            Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
          type: boolean
        assortmentInfo:
          $ref: '#/components/schemas/GetPromoAssortmentInfoDTO'
        mechanicsInfo:
          $ref: '#/components/schemas/GetPromoMechanicsInfoDTO'
        bestsellerInfo:
          $ref: '#/components/schemas/GetPromoBestsellerInfoDTO'
        channels:
          description: Список каналов продвижения товаров.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ChannelType'
        constraints:
          $ref: '#/components/schemas/GetPromoConstraintsDTO'
    GetPromosResultDTO:
      description: Информация об акциях Маркета.
      type: object
      required:
        - promos
      properties:
        promos:
          description: Акции Маркета.
          type: array
          items:
            $ref: '#/components/schemas/GetPromoDTO'
    GetPromosResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetPromosResultDTO'
    PromoOfferParticipationStatusFilterType:
      description: |
        Фильтр для товаров, которые добавлены в акцию вручную:

        * `MANUALLY_ADDED` — товары, которые добавлены вручную.

        * `NOT_MANUALLY_ADDED`— товары, которые не участвуют в акции и те, которые добавлены автоматически.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      type: string
      enum:
        - MANUALLY_ADDED
        - NOT_MANUALLY_ADDED
    PromoOfferParticipationStatusMultiFilterType:
      description: |
        Фильтр для товаров, которые могут участвовать в акции:

        * `MANUALLY_ADDED` — товары, которые добавлены вручную.

        * `RENEWED` — товары, которые добавлены автоматически из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `RENEW_FAILED` — товары, которые не получилось перенести из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `NOT_MANUALLY_ADDED` — товары, которые не участвуют в акции и те, которые добавлены автоматически.

        * `MINIMUM_FOR_PROMOS` — товары с [установленным минимумом по цене для акций](:no-translate[*minimumForBestseller]), который соответствует порогу `maxPromoPrice`. Такие товары участвуют в акции с ценой `maxPromoPrice`. Только для акций «Бестселлеры Маркета».

        Если не передать параметр `statuses`, вернутся все товары.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      type: string
      enum:
        - MANUALLY_ADDED
        - RENEWED
        - RENEW_FAILED
        - NOT_MANUALLY_ADDED
        - MINIMUM_FOR_PROMOS
    GetPromoOffersRequest:
      description: Получение списка товаров, которые участвуют или могут участвовать в акции.
      type: object
      required:
        - promoId
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        statusType:
          description: "{% note warning \"Вместо него используйте `statuses`.\" %}\n\n\_\n\n{% endnote %}\n\nФильтр для товаров, которые добавлены в акцию вручную.\n\nЕсли не передать параметр `statusType`, вернутся все товары.\n"
          deprecated: true
          $ref: '#/components/schemas/PromoOfferParticipationStatusFilterType'
        statuses:
          description: Фильтр для товаров, которые могут участвовать в акции. Можно задать несколько значений.
          type: array
          nullable: true
          uniqueItems: true
          minItems: 1
          items:
            $ref: '#/components/schemas/PromoOfferParticipationStatusMultiFilterType'
    PromoOfferParticipationStatusType:
      description: |
        Статус товара в акции:

        * `AUTO` — добавлен автоматически во всех магазинах кабинета, в которых товар доступен для покупки.

        * `PARTIALLY_AUTO` — добавлен автоматически у части магазинов.

        * `MANUAL` — добавлен вручную.

        * `NOT_PARTICIPATING` — не участвует в акции.

        * `RENEWED` — успешно перенесен из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `RENEW_FAILED` — не получилось перенести из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `MINIMUM_FOR_PROMOS` — участвует в акции с ценой `maxPromoPrice` ([установлен минимум по цене для акций](*minimumForBestseller), который соответствует порогу `maxPromoPrice`). Только для акций «Бестселлеры Маркета».

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      type: string
      enum:
        - AUTO
        - PARTIALLY_AUTO
        - MANUAL
        - NOT_PARTICIPATING
        - RENEWED
        - RENEW_FAILED
        - MINIMUM_FOR_PROMOS
    PromoOfferDiscountParamsDTO:
      description: Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.
      type: object
      required:
        - maxPromoPrice
      properties:
        price:
          description: |
            Зачеркнутая цена — та, по которой товар продавался до акции.

            Указывается в рублях.

            Возвращается, только если товар участвует в акции.
          type: integer
          format: int64
        promoPrice:
          description: |
            Цена по акции — та, по которой вы хотите продавать товар.

            Указывается в рублях.

            Возвращается, только если товар участвует в акции.
          type: integer
          format: int64
        maxPromoPrice:
          description: |
            Максимально возможная цена для участия в акции.

            Указывается в рублях.

            Возвращается для всех товаров.
          type: integer
          format: int64
    PromoOfferParamsDTO:
      description: |
        Параметры товара в акции.

        Возвращается параметр, который соответствует типу акции.
      type: object
      properties:
        discountParams:
          $ref: '#/components/schemas/PromoOfferDiscountParamsDTO'
    PromoOfferAutoParticipatingDetailsDTO:
      description: |
        Информация об автоматическом добавлении товара в акцию.

        Причины, по которым товар не был добавлен автоматически в других магазинах, можно узнать в кабинете продавца на Маркете на странице акции.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      type: object
      properties:
        campaignIds:
          description: |
            Идентификаторы кампаний тех магазинов, в которых товар добавлен в акцию автоматически.

            Возвращается, если статус товара в акции — `PARTIALLY_AUTO`.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            description: Идентификатор кампании.
            type: integer
            format: int64
    GetPromoOfferDTO:
      description: Товар, который участвует или может участвовать в акции.
      type: object
      required:
        - offerId
        - status
        - params
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        status:
          $ref: '#/components/schemas/PromoOfferParticipationStatusType'
        params:
          $ref: '#/components/schemas/PromoOfferParamsDTO'
        autoParticipatingDetails:
          $ref: '#/components/schemas/PromoOfferAutoParticipatingDetailsDTO'
    GetPromoOffersResultDTO:
      description: Список товаров, которые участвуют или могут участвовать в акции.
      type: object
      required:
        - offers
      properties:
        offers:
          description: Товары, которые участвуют или могут участвовать в акции.
          type: array
          items:
            $ref: '#/components/schemas/GetPromoOfferDTO'
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetPromoOffersResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetPromoOffersResultDTO'
    UpdatePromoOfferDiscountParamsDTO:
      description: |
        Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.

        Обязательный параметр для акций с этими типами.
      type: object
      properties:
        price:
          description: |
            Зачеркнутая цена — та, по которой товар продавался до акции.

            Указывается в рублях.

            Число должно быть целым.
          type: integer
          format: int64
          minimum: 1
        promoPrice:
          description: |
            Цена по акции — та, по которой вы хотите продавать товар.

            Указывается в рублях.

            Число должно быть целым.
          type: integer
          format: int64
          minimum: 1
    UpdatePromoOfferParamsDTO:
      description: Параметры товара, который участвует в акции.
      type: object
      properties:
        discountParams:
          $ref: '#/components/schemas/UpdatePromoOfferDiscountParamsDTO'
    UpdatePromoOfferDTO:
      description: Описание товаров, которые участвуют в акции.
      type: object
      required:
        - offerId
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        params:
          $ref: '#/components/schemas/UpdatePromoOfferParamsDTO'
    UpdatePromoOffersRequest:
      description: |
        Добавление товаров в акцию или обновление их параметров.

        Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`.
      type: object
      required:
        - promoId
        - offers
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        offers:
          description: Товары, которые необходимо добавить в акцию или цены которых нужно изменить.
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/UpdatePromoOfferDTO'
    RejectedPromoOfferUpdateReasonType:
      description: |
        Причина отклонения изменения:

        * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.

        * `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.

        * `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.

        * `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.

        * `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.

        * `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.

        * `EMPTY_PROMO_PRICE` — не указана цена по акции.

        * `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.

        * `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.

        * `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены.
      type: string
      enum:
        - OFFER_DOES_NOT_EXIST
        - OFFER_DUPLICATION
        - OFFER_NOT_ELIGIBLE_FOR_PROMO
        - OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED
        - DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED
        - EMPTY_OLD_PRICE
        - EMPTY_PROMO_PRICE
        - MAX_PROMO_PRICE_EXCEEDED
        - PROMO_PRICE_BIGGER_THAN_MAX
        - PROMO_PRICE_SMALLER_THAN_MIN
    RejectedPromoOfferUpdateDTO:
      description: Описание отклоненного изменения.
      type: object
      required:
        - offerId
        - reason
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        reason:
          $ref: '#/components/schemas/RejectedPromoOfferUpdateReasonType'
    PromoOfferUpdateWarningCodeType:
      description: |
        Предупреждение, которое появилось при добавлении товара:

        * `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.

        * `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — цена, которая действует во всех магазинах, ниже цены по акции. У товара не будет отображаться цена по акции.

        * `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.

        * `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции.
      type: string
      enum:
        - DEEP_DISCOUNT_OFFER
        - CATALOG_PRICE_IS_LOWER_THAN_PROMO
        - SHOP_PRICES_ARE_LOWER_THAN_PROMO
        - SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO
    PromoOfferUpdateWarningDTO:
      description: Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
      type: object
      required:
        - code
      properties:
        code:
          $ref: '#/components/schemas/PromoOfferUpdateWarningCodeType'
        campaignIds:
          description: |
            Идентификаторы кампаний тех магазинов, для которых получены предупреждения.

            Не возвращается, если предупреждения действуют для всех магазинов в кабинете.
          type: array
          nullable: true
          minItems: 1
          uniqueItems: true
          items:
            description: Идентификатор кампании.
            type: integer
            format: int64
    WarningPromoOfferUpdateDTO:
      description: Описание предупреждения, которое появилось при добавлении товара.
      type: object
      required:
        - offerId
        - warnings
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        warnings:
          description: Предупреждения, которые появились при добавлении товара в акцию или изменении его цен.
          type: array
          items:
            $ref: '#/components/schemas/PromoOfferUpdateWarningDTO'
    UpdatePromoOffersResultDTO:
      description: Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
      type: object
      properties:
        rejectedOffers:
          description: |
            Изменения, которые были отклонены.

            Возвращается, только если есть отклоненные изменения.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/RejectedPromoOfferUpdateDTO'
        warningOffers:
          description: |
            Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.

            Возвращается, только если есть предупреждения.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/WarningPromoOfferUpdateDTO'
    UpdatePromoOffersResponse:
      description: Результат добавления товаров в акцию.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/UpdatePromoOffersResultDTO'
    DeletePromoOffersRequest:
      description: |
        Удаление товаров из акции.

        Чтобы убрать:

        * все товары из акции и больше не участвовать в ней, передайте значение `true` в параметре `deleteAllOffers`;

        * часть товаров, передайте их идентификаторы в параметре `offersIds`.
      type: object
      required:
        - promoId
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        deleteAllOffers:
          description: Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение `true` и не передавайте параметр `offerIds`.
          type: boolean
        offerIds:
          description: Товары, которые нужно убрать из акции.
          type: array
          nullable: true
          minItems: 1
          maxItems: 500
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ShopSku'
    RejectedPromoOfferDeleteReasonType:
      description: |
        Описание ошибки:

        * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким :no-translate[SKU].
      type: string
      enum:
        - OFFER_DOES_NOT_EXIST
    RejectedPromoOfferDeleteDTO:
      description: Информация о товаре и ошибки, которые появились при его удалении.
      type: object
      required:
        - offerId
        - reason
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        reason:
          $ref: '#/components/schemas/RejectedPromoOfferDeleteReasonType'
    DeletePromoOffersResultDTO:
      description: |
        Результат удаления товаров из акции.

        Возвращается, только если в запросе был передан параметр `offerIds`.
      type: object
      properties:
        rejectedOffers:
          description: |
            Товары, при удалении которых появились ошибки.

            Возвращается, только если есть такие товары.
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/RejectedPromoOfferDeleteDTO'
    DeletePromoOffersResponse:
      description: Результат удаления товаров из акции.
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/DeletePromoOffersResultDTO'
    SupplyRequestId:
      type: integer
      format: int64
      minimum: 1
      description: |
        Идентификатор заявки.

        {% note warning "Используется только в :no-translate[API]" %}

        По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.

        {% endnote %}
    SupplyRequestType:
      type: string
      description: |
        Тип заявки:

        * `SUPPLY` — поставка товаров.
        * `WITHDRAW` — вывоз товаров.
        * `UTILIZATION` — утилизация товаров.
      enum:
        - SUPPLY
        - WITHDRAW
        - UTILIZATION
    SupplyRequestSubType:
      type: string
      description: |
        Подтип заявки:

        * `DEFAULT` — поставка товаров на склад хранения или вывоз с него.
        * `XDOC` — поставка товаров через транзитный склад или вывоз с него.
        * `INVENTORYING_SUPPLY` — инвентаризация на складе по запросу магазина.
        * `INVENTORYING_SUPPLY_WAREHOUSE_BASED_PER_SUPPLIER` — инвентаризация на складе по запросу склада.
        * `MOVEMENT_SUPPLY` — входящее перемещение между складами.

            При перемещении между складами создаются 2 заявки — `MOVEMENT_SUPPLY` и `MOVEMENT_WITHDRAW`.
        * `ADDITIONAL_SUPPLY` — дополнительная поставка непринятых товаров.
        * `VIRTUAL_DISTRIBUTION_CENTER` — родительская заявка при поставке товаров на склад хранения или [мультипоставке](:no-translate[*multisupply]).
        * `VIRTUAL_DISTRIBUTION_CENTER_CHILD` — дочерняя заявка при поставке товаров на склад хранения или [мультипоставке](:no-translate[*multisupply]).

            Для нее не возвращается `transitLocation`.
        * `FORCE_PLAN` — автоматическая утилизация по запросу склада.
        * `FORCE_PLAN_ANOMALY_PER_SUPPLY` — утилизация непринятых товаров.
        * `PLAN_BY_SUPPLIER` — утилизация по запросу магазина.
        * `ANOMALY_WITHDRAW` — вывоз непринятых товаров.
        * `FIX_LOST_INVENTORYING` — товары, которые не нашли после второй инвентаризации.
        * `OPER_LOST_INVENTORYING` — товары, которые не нашли после первой инвентаризации.
        * `MOVEMENT_WITHDRAW` — исходящее перемещение между складами.

            При перемещении между складами создаются 2 заявки — `MOVEMENT_SUPPLY` и `MOVEMENT_WITHDRAW`.
        * `MISGRADING_SUPPLY` — пересортица в большую сторону.
        * `MISGRADING_WITHDRAW` — пересортица в меньшую сторону.
        * `MAN_UTIL` — ручная утилизация по запросу склада.
      enum:
        - DEFAULT
        - XDOC
        - INVENTORYING_SUPPLY
        - INVENTORYING_SUPPLY_WAREHOUSE_BASED_PER_SUPPLIER
        - MOVEMENT_SUPPLY
        - ADDITIONAL_SUPPLY
        - VIRTUAL_DISTRIBUTION_CENTER
        - VIRTUAL_DISTRIBUTION_CENTER_CHILD
        - FORCE_PLAN
        - FORCE_PLAN_ANOMALY_PER_SUPPLY
        - PLAN_BY_SUPPLIER
        - ANOMALY_WITHDRAW
        - FIX_LOST_INVENTORYING
        - OPER_LOST_INVENTORYING
        - MOVEMENT_WITHDRAW
        - MISGRADING_SUPPLY
        - MISGRADING_WITHDRAW
        - MAN_UTIL
    SupplyRequestStatusType:
      type: string
      description: |
        Статус заявки на поставку:

        * `CREATED` — создан черновик заявки.
        * `FINISHED` — заявка завершена, товары:
          * приняты на складе;
          * переданы на другой склад при перемещении;
          * переданы продавцу при вывозе;
          * утилизированы.
        * `CANCELLED` — заявка отменена.
        * `INVALID` — ошибка обработки.
        * `VALIDATED` — заявка в обработке.
        * `PUBLISHED` — создана заявка.
        * `ARRIVED_TO_SERVICE` — поставка прибыла на склад хранения.
        * `ARRIVED_TO_XDOC_SERVICE` — поставка прибыла на транзитный склад.
        * `SHIPPED_TO_SERVICE` — поставка отправлена с транзитного склада на склад хранения.
        * `CANCELLATION_REQUESTED` — запрошена отмена заявки.
        * `CANCELLATION_REJECTED` — заявка не будет отменена.
        * `REGISTERED_IN_ELECTRONIC_QUEUE` — поставка зарегистрирована в электронной очереди.
        * `READY_FOR_UTILIZATION` — товары готовы к утилизации.
        * `TRANSIT_MOVING` — перемещение товаров на склад вывоза.
        * `WAREHOUSE_HANDLING` — вторичная приемка товаров или их сборка для вывоза или утилизации.
        * `ACCEPTED_BY_WAREHOUSE_SYSTEM` — информация о заявке направлена на склад.
        * `READY_TO_WITHDRAW` — товары готовы к выдаче.
      enum:
        - CREATED
        - FINISHED
        - CANCELLED
        - INVALID
        - VALIDATED
        - PUBLISHED
        - ARRIVED_TO_SERVICE
        - ARRIVED_TO_XDOC_SERVICE
        - SHIPPED_TO_SERVICE
        - CANCELLATION_REQUESTED
        - CANCELLATION_REJECTED
        - REGISTERED_IN_ELECTRONIC_QUEUE
        - READY_FOR_UTILIZATION
        - TRANSIT_MOVING
        - WAREHOUSE_HANDLING
        - ACCEPTED_BY_WAREHOUSE_SYSTEM
        - READY_TO_WITHDRAW
    SupplyRequestSortAttributeType:
      type: string
      description: |
        По какому параметру сортировать заявки:

        * `ID` — идентификатор заявки.
        * `REQUESTED_DATE` — дата поставки на склад хранения.

            Если товары проходили через транзитный склад, сортирует по датам поставки на оба склада.
        * `UPDATED_AT` — время обновления заявки.
        * `STATUS` — статус заявки.
      enum:
        - ID
        - REQUESTED_DATE
        - UPDATED_AT
        - STATUS
    SupplyRequestSortingDTO:
      type: object
      description: Параметры сортировки.
      required:
        - direction
        - attribute
      properties:
        direction:
          $ref: '#/components/schemas/SortOrderType'
        attribute:
          $ref: '#/components/schemas/SupplyRequestSortAttributeType'
    GetSupplyRequestsRequest:
      type: object
      description: |
        Модель для фильтрации и сортировки заявок на поставку.
        Фильтры по `requestDateFrom` и `requestDateTo` отбирают заявки по targetLocation->requestedDate и transitLocation->requestedDate.
      properties:
        requestIds:
          type: array
          description: Идентификаторы заявок.
          minItems: 1
          maxItems: 100
          uniqueItems: true
          nullable: true
          items:
            $ref: '#/components/schemas/SupplyRequestId'
        requestDateFrom:
          type: string
          format: date-time
          nullable: true
          description: Дата начала периода для фильтрации заявок.
        requestDateTo:
          type: string
          format: date-time
          nullable: true
          description: Дата окончания периода для фильтрации заявок.
        requestTypes:
          type: array
          description: Типы заявок для фильтрации.
          minItems: 1
          uniqueItems: true
          nullable: true
          items:
            $ref: '#/components/schemas/SupplyRequestType'
        requestSubtypes:
          type: array
          description: Подтипы заявок для фильтрации.
          minItems: 1
          uniqueItems: true
          nullable: true
          items:
            $ref: '#/components/schemas/SupplyRequestSubType'
        requestStatuses:
          type: array
          description: Статусы заявок для фильтрации.
          minItems: 1
          uniqueItems: true
          nullable: true
          items:
            $ref: '#/components/schemas/SupplyRequestStatusType'
        sorting:
          $ref: '#/components/schemas/SupplyRequestSortingDTO'
    SupplyRequestIdDTO:
      type: object
      description: Идентификатор и номера заявки.
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/SupplyRequestId'
        marketplaceRequestId:
          type: string
          description: |
            Номер заявки на маркетплейсе.

            Также указывается в кабинете продавца на Маркете.
        warehouseRequestId:
          type: string
          description: |
            Номер заявки на складе.

            Также указывается в кабинете продавца на Маркете.
    SupplyRequestCountersDTO:
      type: object
      description: Количество товаров, коробок и палет в заявке.
      properties:
        planCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров в заявке на поставку.
        factCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров, которые приняты на складе.
        undefinedCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество непринятых товаров.
        surplusCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество лишних товаров.
        shortageCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров с недостатками.
        defectCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров с браком.
        acceptableCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров, которые можно привезти дополнительно.
        unacceptableCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество товаров, которые нельзя привезти дополнительно.
        actualPalletsCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество палет, которые приняты на складе.
        actualBoxCount:
          type: integer
          format: int32
          minimum: 0
          description: Количество коробок, которые приняты на складе.
    SupplyRequestReferenceType:
      type: string
      description: |
        Тип связи между двумя заявками:

        * `VIRTUAL_DISTRIBUTION` — [мультипоставка](:no-translate[*multisupply]).

        * `WITHDRAW` — вывоз непринятых товаров.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `ANOMALY_WITHDRAW`.

        * `UTILIZATION` — утилизация непринятых товаров.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `FORCE_PLAN_ANOMALY_PER_SUPPLY`.

        * `ADDITIONAL_SUPPLY` — дополнительная поставка.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `ADDITIONAL_SUPPLY`.
      enum:
        - VIRTUAL_DISTRIBUTION
        - WITHDRAW
        - UTILIZATION
        - ADDITIONAL_SUPPLY
    SupplyRequestReferenceDTO:
      type: object
      description: Информация о связанных заявках.
      required:
        - id
        - type
      properties:
        id:
          description: Идентификаторы связанной заявки.
          $ref: '#/components/schemas/SupplyRequestIdDTO'
        type:
          description: Тип связи.
          $ref: '#/components/schemas/SupplyRequestReferenceType'
    SupplyRequestLocationAddressDTO:
      type: object
      description: Адрес склада или ПВЗ.
      required:
        - fullAddress
        - gps
      properties:
        fullAddress:
          type: string
          description: Полный адрес склада или ПВЗ.
        gps:
          $ref: '#/components/schemas/GpsDTO'
    SupplyRequestLocationType:
      type: string
      description: |
        Тип склада или ПВЗ:

        * `FULFILLMENT` — склад хранения.
        * `XDOC` — транзитный склад.
        * `PICKUP_POINT` — ПВЗ.
      enum:
        - FULFILLMENT
        - XDOC
        - PICKUP_POINT
    SupplyRequestLocationDTO:
      type: object
      description: Информации о складе или ПВЗ в заявке.
      required:
        - serviceId
        - name
        - address
        - type
      properties:
        requestedDate:
          type: string
          format: date-time
          description: Дата и время поставки на склад или в ПВЗ.
        serviceId:
          type: integer
          format: int64
          description: Идентификатор склада или логистического партнера ПВЗ.
        name:
          type: string
          description: Название склада или ПВЗ.
        address:
          $ref: '#/components/schemas/SupplyRequestLocationAddressDTO'
        type:
          $ref: '#/components/schemas/SupplyRequestLocationType'
    SupplyRequestDTO:
      type: object
      description: Информация о заявке на поставку, вывоз или утилизацию.
      required:
        - id
        - type
        - subtype
        - status
        - updatedAt
        - counters
        - targetLocation
      properties:
        id:
          description: Идентификатор и номера заявки.
          $ref: '#/components/schemas/SupplyRequestIdDTO'
        type:
          description: Тип заявки.
          $ref: '#/components/schemas/SupplyRequestType'
        subtype:
          description: Подтип заявки.
          $ref: '#/components/schemas/SupplyRequestSubType'
        status:
          description: Статус заявки.
          $ref: '#/components/schemas/SupplyRequestStatusType'
        updatedAt:
          type: string
          format: date-time
          description: Дата и время последнего обновления заявки.
        counters:
          description: Количество товаров, коробок и палет в заявке.
          $ref: '#/components/schemas/SupplyRequestCountersDTO'
        parentLink:
          description: Ссылка на родительскую заявку.
          nullable: true
          $ref: '#/components/schemas/SupplyRequestReferenceDTO'
        childrenLinks:
          type: array
          nullable: true
          minItems: 1
          description: Ссылки на дочерние заявки.
          items:
            $ref: '#/components/schemas/SupplyRequestReferenceDTO'
        targetLocation:
          description: Информация о складе хранения или ПВЗ.
          $ref: '#/components/schemas/SupplyRequestLocationDTO'
        transitLocation:
          description: Информация о транзитном складе или ПВЗ.
          $ref: '#/components/schemas/SupplyRequestLocationDTO'
    GetSupplyRequestsDTO:
      type: object
      description: Список заявок и информация по ним.
      required:
        - requests
      properties:
        requests:
          type: array
          description: Список заявок.
          nullable: false
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/SupplyRequestDTO'
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetSupplyRequestsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetSupplyRequestsDTO'
    GetSupplyRequestItemsRequest:
      type: object
      required:
        - requestId
      properties:
        requestId:
          $ref: '#/components/schemas/SupplyRequestId'
    SupplyRequestItemCountersDTO:
      type: object
      description: Количество товаров в заявке.
      properties:
        planCount:
          description: Количество товаров в заявке на поставку.
          type: integer
          format: int32
          minimum: 0
        factCount:
          description: Количество товаров, которые приняты на складе.
          type: integer
          format: int32
          minimum: 0
        surplusCount:
          description: Количество лишних товаров.
          type: integer
          format: int32
          minimum: 0
        shortageCount:
          description: Количество товаров с недостатками.
          type: integer
          format: int32
          minimum: 0
        defectCount:
          description: Количество товаров с браком.
          type: integer
          format: int32
          minimum: 0
    SupplyRequestItemDTO:
      type: object
      description: Информация о товаре в заявке.
      required:
        - offerId
        - name
        - counters
      properties:
        offerId:
          $ref: '#/components/schemas/ShopSku'
        name:
          description: Название товара.
          type: string
        price:
          description: Цена за единицу товара.
          $ref: '#/components/schemas/CurrencyValueDTO'
        counters:
          description: Количество товаров в заявке.
          $ref: '#/components/schemas/SupplyRequestItemCountersDTO'
    GetSupplyRequestItemsDTO:
      type: object
      description: Информация о товарах в заявке.
      required:
        - items
      properties:
        items:
          description: Список товаров.
          type: array
          nullable: false
          minItems: 0
          maxItems: 100
          items:
            $ref: '#/components/schemas/SupplyRequestItemDTO'
        paging:
          description: Информация о страницах с результатами.
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
    GetSupplyRequestItemsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetSupplyRequestItemsDTO'
    GetSupplyRequestDocumentsRequest:
      type: object
      required:
        - requestId
      properties:
        requestId:
          $ref: '#/components/schemas/SupplyRequestId'
    SupplyRequestDocumentType:
      type: string
      description: |
        Тип документа:

        * **Документы, которые загружает магазин**
          * `SUPPLY` — список товаров.
          * `ADDITIONAL_SUPPLY` — список товаров в дополнительной поставке.
          * `VIRTUAL_DISTRIBUTION_CENTER_SUPPLY` — список товаров в [мультипоставке](:no-translate[*multisupply]).
          * `TRANSFER` — список товаров для утилизации.
          * `WITHDRAW` — список товаров для вывоза.

        * **Поставка товаров**
          * `VALIDATION_ERRORS` — ошибки по товарам в поставке.
          * `CARGO_UNITS` — ярлыки для грузомест.

        * **Дополнительная поставка и непринятые товары**
          * `ADDITIONAL_SUPPLY_ACCEPTABLE_GOODS` — товары, которые подходят для дополнительной поставки.
          * `ADDITIONAL_SUPPLY_UNACCEPTABLE_GOODS` — вывоз непринятых товаров.

        * **Маркировка товаров**
          * `INBOUND_UTD` — входящий УПД.
          * `OUTBOUND_UTD` — исходящий УПД.
          * `IDENTIFIERS` — коды маркировки товаров.
          * `CIS_FACT` — принятые товары с кодами маркировки.
          * `ITEMS_WITH_CISES` — товары, для которых нужна маркировка.
          * `REPORT_OF_WITHDRAW_WITH_CISES` — маркированные товары для вывоза со склада.
          * `SECONDARY_ACCEPTANCE_CISES` — маркированные товары, которые приняты после вторичной приемки.
          * `RNPT_FACT` — принятые товары с регистрационным номером партии товара (РНПТ).

        * **Акты**
          * `ACT_OF_WITHDRAW` — акт возврата.
          * `ANOMALY_CONTAINERS_WITHDRAW_ACT` — акт изъятия непринятого товара.
          * `ACT_OF_WITHDRAW_FROM_STORAGE` — акт списания с ответственного хранения.
          * `ACT_OF_RECEPTION_TRANSFER` — акт приема-передачи.
          * `ACT_OF_DISCREPANCY` — акт о расхождениях.
          * `SECONDARY_RECEPTION_ACT` — акт вторичной приемки.
      enum:
        - SUPPLY
        - ADDITIONAL_SUPPLY
        - VIRTUAL_DISTRIBUTION_CENTER_SUPPLY
        - TRANSFER
        - INBOUND_UTD
        - OUTBOUND_UTD
        - ADDITIONAL_SUPPLY_ACCEPTABLE_GOODS
        - ADDITIONAL_SUPPLY_UNACCEPTABLE_GOODS
        - VALIDATION_ERRORS
        - WITHDRAW
        - ACT_OF_WITHDRAW
        - ANOMALY_CONTAINERS_WITHDRAW_ACT
        - ACT_OF_WITHDRAW_FROM_STORAGE
        - ACT_OF_RECEPTION_TRANSFER
        - ACT_OF_DISCREPANCY
        - SECONDARY_RECEPTION_ACT
        - CARGO_UNITS
        - IDENTIFIERS
        - CIS_FACT
        - ITEMS_WITH_CISES
        - REPORT_OF_WITHDRAW_WITH_CISES
        - SECONDARY_ACCEPTANCE_CISES
        - RNPT_FACT
    SupplyRequestDocumentDTO:
      type: object
      required:
        - url
        - type
        - createdAt
      description: Документ по заявке.
      properties:
        type:
          $ref: '#/components/schemas/SupplyRequestDocumentType'
        url:
          type: string
          description: Ссылка на документ.
        createdAt:
          type: string
          format: date-time
          description: Дата и время создания документа.
    GetSupplyRequestDocumentsDTO:
      type: object
      description: Информация о документах по заявке.
      required:
        - documents
      properties:
        documents:
          description: Список документов.
          type: array
          nullable: false
          minItems: 0
          items:
            $ref: '#/components/schemas/SupplyRequestDocumentDTO'
    GetSupplyRequestDocumentsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/GetSupplyRequestDocumentsDTO'
    ApiKeyScopeType:
      description: |
        Доступы к методам:

        * `ALL_METHODS` — полное управление кабинетом.
        * `ALL_METHODS_READ_ONLY` — просмотр всей информации в кабинете.
        * `INVENTORY_AND_ORDER_PROCESSING` — обработка заказов и учет товаров.
        * `INVENTORY_AND_ORDER_PROCESSING_READ_ONLY` — просмотр информации о заказах.
        * `PRICING` — управление ценами.
        * `PRICING_READ_ONLY` — просмотр цен.
        * `OFFERS_AND_CARDS_MANAGEMENT` — управление товарами и карточками.
        * `OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY` — просмотр товаров и карточек.
        * `PROMOTION` — продвижение товаров.
        * `PROMOTION_READ_ONLY` — просмотр информации о продвижении товаров.
        * `FINANCE_AND_ACCOUNTING` — просмотр финансовой информации и отчётности.
        * `COMMUNICATION` — общение с покупателями.
        * `SETTINGS_MANAGEMENT` — настройка магазинов.
        * `SUPPLIES_MANAGEMENT_READ_ONLY` — получение информации по FBY-заявкам.
      type: string
      enum:
        - ALL_METHODS
        - ALL_METHODS_READ_ONLY
        - INVENTORY_AND_ORDER_PROCESSING
        - INVENTORY_AND_ORDER_PROCESSING_READ_ONLY
        - PRICING
        - PRICING_READ_ONLY
        - OFFERS_AND_CARDS_MANAGEMENT
        - OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY
        - PROMOTION
        - PROMOTION_READ_ONLY
        - FINANCE_AND_ACCOUNTING
        - COMMUNICATION
        - SETTINGS_MANAGEMENT
        - SUPPLIES_MANAGEMENT_READ_ONLY
    ApiKeyDTO:
      description: Информация о Api-Key-токене.
      type: object
      required:
        - name
        - authScopes
      properties:
        name:
          description: Название токена.
          type: string
          minLength: 1
          maxLength: 100
        authScopes:
          description: Доступы к методам по Api-Key-токену.
          type: array
          nullable: false
          uniqueItems: true
          items:
            $ref: '#/components/schemas/ApiKeyScopeType'
    TokenDTO:
      description: Информация об авторизационном токене.
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          $ref: '#/components/schemas/ApiKeyDTO'
    GetTokenInfoResponse:
      description: Ответ на запрос получения информации об авторизационном токене.
      type: object
      required:
        - result
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            result:
              $ref: '#/components/schemas/TokenDTO'
  responses:
    '400':
      description: Запрос содержит неправильные данные. [Подробнее об ошибке](../../concepts/error-codes.md#400)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiClientDataErrorResponse'
    '401':
      description: В запросе не указаны данные для авторизации. [Подробнее об ошибке](../../concepts/error-codes.md#401)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
    '403':
      description: Данные для авторизации неверны или доступ к ресурсу запрещен. [Подробнее об ошибке](../../concepts/error-codes.md#403)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiForbiddenErrorResponse'
    '404':
      description: Запрашиваемый ресурс не найден. [Подробнее об ошибке](../../concepts/error-codes.md#404)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiNotFoundErrorResponse'
    '420':
      description: Превышено ограничение на доступ к ресурсу. [Подробнее об ошибке](../../concepts/error-codes.md#420)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLimitErrorResponse'
    '423':
      description: К ресурсу нельзя применить указанный метод. [Подробнее об ошибке](../../concepts/error-codes.md#423)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLockedErrorResponse'
    '500':
      description: Внутренняя ошибка Маркета. [Подробнее об ошибке](../../concepts/error-codes.md#500)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiServerErrorResponse'
